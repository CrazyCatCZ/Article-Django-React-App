{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Replys\\\\ReplyForm.js\";\nimport React, { useState, useRef } from 'react';\nimport { Button, Comment, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REPLY_ADD_MUTATION } from '../Api/reply';\n\nconst ReplyForm = ({\n  id,\n  showReplyForm\n}) => {\n  const user = localStorage.getItem('user');\n  const [replyComment] = useMutation(REPLY_ADD_MUTATION);\n  const [allowButton, setAllowButton] = useState(false);\n  const replyRef = useRef();\n\n  const handleOnAddReply = () => {\n    const contentValue = replyRef.current.value;\n    replyComment({\n      variables: {\n        id: id,\n        user: user,\n        content: contentValue\n      }\n    }); //reset site\n\n    window.location.reload(false);\n  }; //check if reply was filled\n\n\n  const checkForm = () => {\n    if (replyRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, showReplyForm ? /*#__PURE__*/React.createElement(Comment.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    reply: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: replyRef,\n    className: \"post-create-content-container\",\n    placeholder: \"Enter something...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnAddReply,\n    className: \"comment-create-button\",\n    content: \"Add Reply\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnAddReply,\n    className: \"comment-create-button\",\n    content: \"Add Reply\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }))) : null);\n};\n\nexport default ReplyForm;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Replys/ReplyForm.js"],"names":["React","useState","useRef","Button","Comment","Form","useMutation","REPLY_ADD_MUTATION","ReplyForm","id","showReplyForm","user","localStorage","getItem","replyComment","allowButton","setAllowButton","replyRef","handleOnAddReply","contentValue","current","value","variables","content","window","location","reload","checkForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,QAAsC,mBAAtC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,SAASC,kBAAT,QAAmC,cAAnC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KAA2B;AACzC,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AAEA,QAAM,CAAEC,YAAF,IAAmBR,WAAW,CAACC,kBAAD,CAApC;AAEA,QAAM,CAAEQ,WAAF,EAAeC,cAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMgB,QAAQ,GAAGf,MAAM,EAAvB;;AAEA,QAAMgB,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,YAAY,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,KAAtC;AAEAP,IAAAA,YAAY,CAAC;AAAEQ,MAAAA,SAAS,EAAE;AAAEb,QAAAA,EAAE,EAAEA,EAAN;AAAUE,QAAAA,IAAI,EAAEA,IAAhB;AAAsBY,QAAAA,OAAO,EAAEJ;AAA/B;AAAb,KAAD,CAAZ,CAH2B,CAK3B;;AACAK,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH,GAPD,CARyC,CAiBzC;;;AACA,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIV,QAAQ,CAACG,OAAT,CAAiBC,KAArB,EAA4B;AACxBL,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAIK;AACDA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GARD;;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMN,aAAD,gBACG,oBAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEiB,SAAhB;AAA2B,IAAA,KAAK,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAU,IAAA,GAAG,EAAEV,QAAf;AAAyB,IAAA,SAAS,EAAC,+BAAnC;AAAmE,IAAA,WAAW,EAAC,oBAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEMF,WAAD,gBACG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEG,gBAAjB;AAAmC,IAAA,SAAS,EAAC,uBAA7C;AAAqE,IAAA,OAAO,EAAC,WAA7E;AAAyF,IAAA,aAAa,EAAC,MAAvG;AAA8G,IAAA,IAAI,EAAC,MAAnH;AAA0H,IAAA,OAAO,MAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBAGG,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,OAAO,EAAEA,gBAA1B;AAA4C,IAAA,SAAS,EAAC,uBAAtD;AAA8E,IAAA,OAAO,EAAC,WAAtF;AAAkG,IAAA,aAAa,EAAC,MAAhH;AAAuH,IAAA,IAAI,EAAC,MAA5H;AAAmI,IAAA,OAAO,MAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,CADJ,CADH,GAWG,IAZR,CADJ;AAgBH,CA5CD;;AA8CA,eAAeV,SAAf","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { Button, Comment, Form } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { REPLY_ADD_MUTATION } from '../Api/reply'\r\n\r\nconst ReplyForm = ({ id, showReplyForm }) => {\r\n    const user = localStorage.getItem('user')\r\n\r\n    const [ replyComment ] = useMutation(REPLY_ADD_MUTATION)\r\n\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    const replyRef = useRef()\r\n\r\n    const handleOnAddReply = () => {\r\n        const contentValue = replyRef.current.value\r\n\r\n        replyComment({ variables: { id: id, user: user, content: contentValue } })\r\n\r\n        //reset site\r\n        window.location.reload(false);\r\n    }\r\n\r\n    //check if reply was filled\r\n    const checkForm = () => {\r\n        if (replyRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(showReplyForm) ? (\r\n                <Comment.Group>\r\n                    <Form onChange={checkForm} reply>\r\n                        <textarea ref={replyRef} className=\"post-create-content-container\" placeholder='Enter something...' />\r\n                        {(allowButton) ? (\r\n                            <Button onClick={handleOnAddReply} className=\"comment-create-button\" content='Add Reply' labelPosition='left' icon='edit' primary />\r\n                        ) : (\r\n                            <Button disabled onClick={handleOnAddReply} className=\"comment-create-button\" content='Add Reply' labelPosition='left' icon='edit' primary />\r\n                        )}\r\n                    </Form>\r\n                </Comment.Group>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyForm\r\n"]},"metadata":{},"sourceType":"module"}