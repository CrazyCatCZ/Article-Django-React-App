{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Posts\\\\PostDetail.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Item, Button, Icon, Label, Comment, Header, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { POST_DELETE_MUTATION, POST_FIND_MUTATION, POST_LIKE_MUTATION } from '../api/post';\nimport { COMMENT_ADD_MUTATION } from '../api/comment';\nimport CustomComment from '../Comments/CustomComment';\nconst DEFAULT_IMAGE = 'https://miro.medium.com/max/550/1*TxgjUE2uJuiRUVVmE_kU6g.png';\n\nconst PostDetail = () => {\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const user = localStorage.getItem('user');\n  const [likes, setLikes] = useState(0);\n  const [postDelete] = useMutation(POST_DELETE_MUTATION);\n  const [postFind, {\n    data: detailData\n  }] = useMutation(POST_FIND_MUTATION);\n  const [postLike] = useMutation(POST_LIKE_MUTATION);\n  const [commentAdd] = useMutation(COMMENT_ADD_MUTATION);\n  const commentRef = useRef();\n  const [allowButton, setAllowButton] = useState(false);\n  useEffect(() => {\n    if (detailData) {\n      setLikes(detailData.findPost.post.totalLikes);\n    }\n  }, [detailData]);\n  useEffect(() => {\n    if (typeof id !== String) {\n      postFind({\n        variables: {\n          id: id\n        }\n      });\n    }\n  }, [id]);\n\n  const handleOnDelete = () => {\n    postDelete({\n      variables: {\n        id: id\n      }\n    });\n    history.push('/');\n  };\n\n  const handleOnEdit = () => {\n    history.push(`editPost/${id}`);\n  };\n\n  const handleOnLike = () => {\n    postLike({\n      variables: {\n        id: id,\n        user: user\n      }\n    });\n    window.location.reload(false);\n  };\n\n  const handleOnComment = () => {\n    const contentValue = commentRef.current.value;\n    commentAdd({\n      variables: {\n        id: id,\n        user: user,\n        content: contentValue\n      }\n    });\n    window.location.reload(false);\n  };\n\n  const checkForm = () => {\n    if (commentRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, detailData ? /*#__PURE__*/React.createElement(Item.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    className: \"post-detail-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Item.Image, {\n    size: \"small\",\n    src: DEFAULT_IMAGE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Item.Content, {\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Item.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, detailData.findPost.post.title), /*#__PURE__*/React.createElement(Item.Meta, {\n    className: \"post-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, detailData.findPost.post.user.username), /*#__PURE__*/React.createElement(Item.Meta, {\n    className: \"post-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, detailData.findPost.post.posted), /*#__PURE__*/React.createElement(Item.Description, {\n    className: \"post-textfield\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, detailData.findPost.post.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-detail-buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    as: \"div\",\n    labelPosition: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnLike,\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 41\n    }\n  }), \"Like\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    basic: true,\n    color: \"red\",\n    pointing: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 37\n    }\n  }, likes)), user === detailData.findPost.post.user.username ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnEdit,\n    className: \"post-detail-edit-button\",\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 41\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnDelete,\n    className: \"post-detail-delete-button\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 41\n    }\n  }, \"Delete\")) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, detailData.findPost.post.commentSet ? /*#__PURE__*/React.createElement(Comment.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h3\",\n    dividing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }, \"Comments\"), detailData.findPost.post.commentSet.map(({\n    id,\n    content,\n    posted,\n    user: {\n      username\n    },\n    replySet\n  }) => {\n    return /*#__PURE__*/React.createElement(CustomComment, {\n      key: id,\n      id: id,\n      replys: replySet,\n      content: content,\n      posted: posted,\n      username: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 45\n      }\n    });\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-create-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    reply: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: commentRef,\n    className: \"post-create-content-container\",\n    placeholder: \"Enter something...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnComment,\n    className: \"comment-create-button\",\n    content: \"Add Reply\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 41\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnComment,\n    className: \"comment-create-button\",\n    content: \"Add Reply\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 41\n    }\n  }))))))) : null);\n};\n\nexport default PostDetail;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Posts/PostDetail.js"],"names":["React","useState","useEffect","useRef","Item","Button","Icon","Label","Comment","Header","Form","useMutation","useHistory","useParams","POST_DELETE_MUTATION","POST_FIND_MUTATION","POST_LIKE_MUTATION","COMMENT_ADD_MUTATION","CustomComment","DEFAULT_IMAGE","PostDetail","id","history","user","localStorage","getItem","likes","setLikes","postDelete","postFind","data","detailData","postLike","commentAdd","commentRef","allowButton","setAllowButton","findPost","post","totalLikes","String","variables","handleOnDelete","push","handleOnEdit","handleOnLike","window","location","reload","handleOnComment","contentValue","current","value","content","checkForm","title","username","posted","commentSet","map","replySet"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,OAApC,EAA6CC,MAA7C,EAAqDC,IAArD,QAAiE,mBAAjE;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AAEA,SAASC,oBAAT,EAA+BC,kBAA/B,EAAmDC,kBAAnD,QAA6E,aAA7E;AACA,SAASC,oBAAT,QAAqC,gBAArC;AAEA,OAAOC,aAAP,MAA2B,2BAA3B;AAEA,MAAMC,aAAa,GAAG,8DAAtB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAASR,SAAS,EAAxB;AAEA,QAAMS,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsB1B,QAAQ,CAAC,CAAD,CAApC;AAEA,QAAM,CAAE2B,UAAF,IAAiBjB,WAAW,CAACG,oBAAD,CAAlC;AACA,QAAM,CAAEe,QAAF,EAAY;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GAAZ,IAAqCpB,WAAW,CAACI,kBAAD,CAAtD;AACA,QAAM,CAAEiB,QAAF,IAAerB,WAAW,CAACK,kBAAD,CAAhC;AAEA,QAAM,CAAEiB,UAAF,IAAiBtB,WAAW,CAACM,oBAAD,CAAlC;AAEA,QAAMiB,UAAU,GAAG/B,MAAM,EAAzB;AACA,QAAM,CAAEgC,WAAF,EAAeC,cAAf,IAAkCnC,QAAQ,CAAC,KAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI6B,UAAJ,EAAgB;AACZJ,MAAAA,QAAQ,CAACI,UAAU,CAACM,QAAX,CAAoBC,IAApB,CAAyBC,UAA1B,CAAR;AACH;AACJ,GAJQ,EAIN,CAACR,UAAD,CAJM,CAAT;AAMA7B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,OAAOmB,EAAP,KAAcmB,MAAlB,EAA0B;AACtBX,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,SAAS,EAAE;AAAEpB,UAAAA,EAAE,EAAEA;AAAN;AAAb,OAAD,CAAR;AACH;AACJ,GAJQ,EAIN,CAACA,EAAD,CAJM,CAAT;;AAMA,QAAMqB,cAAc,GAAG,MAAM;AACzBd,IAAAA,UAAU,CAAC;AAAEa,MAAAA,SAAS,EAAE;AAAEpB,QAAAA,EAAE,EAAEA;AAAN;AAAb,KAAD,CAAV;AACAC,IAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACvBtB,IAAAA,OAAO,CAACqB,IAAR,CAAc,YAAWtB,EAAG,EAA5B;AACH,GAFD;;AAIA,QAAMwB,YAAY,GAAG,MAAM;AACvBb,IAAAA,QAAQ,CAAC;AAAES,MAAAA,SAAS,EAAE;AAAEpB,QAAAA,EAAE,EAAEA,EAAN;AAAUE,QAAAA,IAAI,EAAEA;AAAhB;AAAb,KAAD,CAAR;AACAuB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH,GAHD;;AAKA,QAAMC,eAAe,GAAG,MAAM;AAC1B,UAAMC,YAAY,GAAGhB,UAAU,CAACiB,OAAX,CAAmBC,KAAxC;AACAnB,IAAAA,UAAU,CAAC;AAAEQ,MAAAA,SAAS,EAAE;AAAEpB,QAAAA,EAAE,EAAEA,EAAN;AAAUE,QAAAA,IAAI,EAAEA,IAAhB;AAAsB8B,QAAAA,OAAO,EAAEH;AAA/B;AAAb,KAAD,CAAV;AACAJ,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH,GAJD;;AAMA,QAAMM,SAAS,GAAG,MAAM;AACpB,QAAIpB,UAAU,CAACiB,OAAX,CAAmBC,KAAvB,EAA8B;AAC1BhB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAIK;AACDA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GARD;;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACML,UAAD,gBACD,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,GAAG,EAAEZ,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,SAAS,EAAC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcY,UAAU,CAACM,QAAX,CAAoBC,IAApB,CAAyBiB,KAAvC,CADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCxB,UAAU,CAACM,QAAX,CAAoBC,IAApB,CAAyBf,IAAzB,CAA8BiC,QAAhE,CAFJ,eAGI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCzB,UAAU,CAACM,QAAX,CAAoBC,IAApB,CAAyBmB,MAA3D,CAHJ,eAII,oBAAC,IAAD,CAAM,WAAN;AAAkB,IAAA,SAAS,EAAC,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8C1B,UAAU,CAACM,QAAX,CAAoBC,IAApB,CAAyBe,OAAvE,CAJJ,eAKQ;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,KAAX;AAAiB,IAAA,aAAa,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,YAAjB;AAA+B,IAAA,KAAK,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,SADJ,eAKI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,GAAV;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,KAAK,EAAC,KAA1B;AAAgC,IAAA,QAAQ,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,KADL,CALJ,CADJ,EAUMH,IAAI,KAAKQ,UAAU,CAACM,QAAX,CAAoBC,IAApB,CAAyBf,IAAzB,CAA8BiC,QAAxC,gBACG,uDACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEZ,YAAjB;AAA+B,IAAA,SAAS,EAAC,yBAAzC;AAAmE,IAAA,KAAK,EAAC,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,cAAjB;AAAiC,IAAA,SAAS,EAAC,2BAA3C;AAAuE,IAAA,KAAK,EAAC,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADH,GAKG,IAfR,CALR,eAsBQ;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEX,UAAU,CAACM,QAAX,CAAoBC,IAApB,CAAyBoB,UAA1B,gBACG,oBAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIM3B,UAAU,CAACM,QAAX,CAAoBC,IAApB,CAAyBoB,UAAzB,CAAoCC,GAApC,CAAwC,CAAC;AAAEtC,IAAAA,EAAF;AAAMgC,IAAAA,OAAN;AAAeI,IAAAA,MAAf;AAAuBlC,IAAAA,IAAI,EAAE;AAAEiC,MAAAA;AAAF,KAA7B;AAA2CI,IAAAA;AAA3C,GAAD,KAA2D;AACjG,wBACI,oBAAC,aAAD;AACI,MAAA,GAAG,EAAEvC,EADT;AAEI,MAAA,EAAE,EAAEA,EAFR;AAGI,MAAA,MAAM,EAAEuC,QAHZ;AAII,MAAA,OAAO,EAAEP,OAJb;AAKI,MAAA,MAAM,EAAEI,MALZ;AAMI,MAAA,QAAQ,EAAED,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH,GAXC,CAJN,CADH,GAkBG,IAnBJ,eAoBA;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEF,SAAhB;AAA2B,IAAA,KAAK,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAU,IAAA,GAAG,EAAEpB,UAAf;AAA2B,IAAA,SAAS,EAAC,+BAArC;AAAqE,IAAA,WAAW,EAAC,oBAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEMC,WAAD,gBACG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEc,eAAjB;AAAkC,IAAA,SAAS,EAAC,uBAA5C;AAAoE,IAAA,OAAO,EAAC,WAA5E;AAAwF,IAAA,aAAa,EAAC,MAAtG;AAA6G,IAAA,IAAI,EAAC,MAAlH;AAAyH,IAAA,OAAO,MAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBAGG,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,OAAO,EAAEA,eAA1B;AAA2C,IAAA,SAAS,EAAC,uBAArD;AAA6E,IAAA,OAAO,EAAC,WAArF;AAAiG,IAAA,aAAa,EAAC,MAA/G;AAAsH,IAAA,IAAI,EAAC,MAA3H;AAAkI,IAAA,OAAO,MAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,CADJ,CApBA,CAtBR,CAHJ,CADJ,CADC,GA6DD,IA9DJ,CADJ;AAkEH,CA5HD;;AA8HA,eAAe7B,UAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Item, Button, Icon, Label, Comment, Header, Form } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport { POST_DELETE_MUTATION, POST_FIND_MUTATION, POST_LIKE_MUTATION } from '../api/post'\r\nimport { COMMENT_ADD_MUTATION } from '../api/comment'\r\n\r\nimport CustomComment  from '../Comments/CustomComment'\r\n\r\nconst DEFAULT_IMAGE = 'https://miro.medium.com/max/550/1*TxgjUE2uJuiRUVVmE_kU6g.png'\r\n\r\nconst PostDetail = () => {\r\n    const { id } = useParams()\r\n\r\n    const history = useHistory()\r\n    const user = localStorage.getItem('user')\r\n    const [ likes, setLikes ] = useState(0)\r\n\r\n    const [ postDelete ] = useMutation(POST_DELETE_MUTATION)\r\n    const [ postFind, { data: detailData } ] = useMutation(POST_FIND_MUTATION)\r\n    const [ postLike ] = useMutation(POST_LIKE_MUTATION)\r\n    \r\n    const [ commentAdd ] = useMutation(COMMENT_ADD_MUTATION)\r\n\r\n    const commentRef = useRef()\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        if (detailData) {\r\n            setLikes(detailData.findPost.post.totalLikes)\r\n        }\r\n    }, [detailData])\r\n\r\n    useEffect(() => {\r\n        if (typeof id !== String) {\r\n            postFind({ variables: { id: id } })\r\n        }\r\n    }, [id])\r\n\r\n    const handleOnDelete = () => {\r\n        postDelete({ variables: { id: id } })\r\n        history.push('/')\r\n    }\r\n\r\n    const handleOnEdit = () => {\r\n        history.push(`editPost/${id}`)\r\n    }\r\n\r\n    const handleOnLike = () => {\r\n        postLike({ variables: { id: id, user: user } })\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const handleOnComment = () => {\r\n        const contentValue = commentRef.current.value\r\n        commentAdd({ variables: { id: id, user: user, content: contentValue } })\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const checkForm = () => {\r\n        if (commentRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(detailData) ? (\r\n            <Item.Group>\r\n                <Item className=\"post-detail-item\">\r\n                    <Item.Image size='small' src={DEFAULT_IMAGE} />\r\n\r\n                    <Item.Content className=\"post-content\">\r\n                        <Item.Header>{detailData.findPost.post.title}</Item.Header>\r\n                        <Item.Meta className=\"post-user\">{detailData.findPost.post.user.username}</Item.Meta>\r\n                        <Item.Meta className=\"post-user\">{detailData.findPost.post.posted}</Item.Meta>\r\n                        <Item.Description className=\"post-textfield\">{detailData.findPost.post.content}</Item.Description>\r\n                            <div className=\"post-detail-buttons-container\">\r\n                                <Button as='div' labelPosition='right'>\r\n                                    <Button onClick={handleOnLike} color='red'>\r\n                                        <Icon name='heart' />\r\n                                        Like\r\n                                    </Button>\r\n                                    <Label as='a' basic color='red' pointing='left'>\r\n                                        {likes}\r\n                                    </Label>\r\n                                </Button>                \r\n                                {(user === detailData.findPost.post.user.username) ? (\r\n                                    <>\r\n                                        <Button onClick={handleOnEdit} className=\"post-detail-edit-button\" color=\"teal\">Edit</Button>\r\n                                        <Button onClick={handleOnDelete} className=\"post-detail-delete-button\" color=\"red\">Delete</Button>\r\n                                    </>\r\n                                ) : null }\r\n                            </div>\r\n                            <div className=\"comments-container\">\r\n                            {(detailData.findPost.post.commentSet) ? (\r\n                                <Comment.Group>\r\n                                    <Header as='h3' dividing>\r\n                                        Comments\r\n                                    </Header>\r\n                                    {(detailData.findPost.post.commentSet.map(({ id, content, posted, user: { username }, replySet }) => {\r\n                                        return (\r\n                                            <CustomComment \r\n                                                key={id}\r\n                                                id={id}\r\n                                                replys={replySet}\r\n                                                content={content}\r\n                                                posted={posted}\r\n                                                username={username}\r\n                                            />\r\n                                        )\r\n                                    }))}\r\n                                </Comment.Group>\r\n                            ) : null }\r\n                            <div className=\"comment-create-container\">\r\n                                <Form onChange={checkForm} reply>\r\n                                    <textarea ref={commentRef} className=\"post-create-content-container\" placeholder='Enter something...' />\r\n                                    {(allowButton) ? (\r\n                                        <Button onClick={handleOnComment} className=\"comment-create-button\" content='Add Reply' labelPosition='left' icon='edit' primary />\r\n                                    ) : (\r\n                                        <Button disabled onClick={handleOnComment} className=\"comment-create-button\" content='Add Reply' labelPosition='left' icon='edit' primary />\r\n                                    )}\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </Item.Content>\r\n                </Item>\r\n            </Item.Group>\r\n        ) : null} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostDetail\r\n"]},"metadata":{},"sourceType":"module"}