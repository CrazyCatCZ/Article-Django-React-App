{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Posts\\\\PostDetail\\\\PostDetail.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Item, Button, Icon, Label } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useParams } from 'react-router-dom';\nimport { POST_FIND_MUTATION, POST_LIKE_MUTATION } from '../../api/post';\nimport { COMMENT_ADD_MUTATION } from '../../api/comment';\nimport ProfileButtons from './ProfileButtons';\nimport CommentsContainer from './CommentsContainer';\nimport styles from '././Posts.module.css';\nconst DEFAULT_IMAGE = 'https://miro.medium.com/max/550/1*TxgjUE2uJuiRUVVmE_kU6g.png';\n\nconst PostDetail = () => {\n  const {\n    id\n  } = useParams();\n  const user = localStorage.getItem('user');\n  const [likes, setLikes] = useState(0);\n  const [postFind, {\n    data: detailData\n  }] = useMutation(POST_FIND_MUTATION);\n  const [postLike] = useMutation(POST_LIKE_MUTATION); //Set likes on given fetched data\n\n  useEffect(() => {\n    if (detailData) {\n      setLikes(detailData.findPost.post.totalLikes);\n    }\n  }, [detailData]); //Fetch data everytime user enter post\n\n  useEffect(() => {\n    //Prevents from getting error\n    if (id !== 'login' && id !== 'profile') {\n      postFind({\n        variables: {\n          id: id\n        }\n      });\n    }\n  }, [id]); //Fetch to access users likes\n\n  const handleOnLike = () => {\n    postLike({\n      variables: {\n        id: id,\n        user: user\n      }\n    });\n    window.location.reload(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, detailData ? /*#__PURE__*/React.createElement(Item.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    className: styles.post_detail_item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Item.Image, {\n    size: \"small\",\n    src: DEFAULT_IMAGE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Item.Content, {\n    className: styles.post_content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Item.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, detailData.findPost.post.title), /*#__PURE__*/React.createElement(Item.Meta, {\n    className: styles.post_user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `profile/${detailData.findPost.post.user.username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, detailData.findPost.post.user.username)), /*#__PURE__*/React.createElement(Item.Meta, {\n    className: styles.post_user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, detailData.findPost.post.posted), /*#__PURE__*/React.createElement(Item.Description, {\n    className: styles.post_textfield,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, detailData.findPost.post.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.post_detail_buttons_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    as: \"div\",\n    labelPosition: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnLike,\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 41\n    }\n  }), \"Like\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    basic: true,\n    color: \"red\",\n    pointing: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 37\n    }\n  }, likes)), /*#__PURE__*/React.createElement(ProfileButtons, {\n    id: id,\n    detailData: detailData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(CommentsContainer, {\n    id: id,\n    detailData: detailData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  })))) : null);\n};\n\nexport default PostDetail;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Posts/PostDetail/PostDetail.js"],"names":["React","useState","useEffect","useRef","Item","Button","Icon","Label","useMutation","useParams","POST_FIND_MUTATION","POST_LIKE_MUTATION","COMMENT_ADD_MUTATION","ProfileButtons","CommentsContainer","styles","DEFAULT_IMAGE","PostDetail","id","user","localStorage","getItem","likes","setLikes","postFind","data","detailData","postLike","findPost","post","totalLikes","variables","handleOnLike","window","location","reload","post_detail_item","post_content","title","post_user","username","posted","post_textfield","content","post_detail_buttons_container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Item, Button, Icon, Label } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { POST_FIND_MUTATION, POST_LIKE_MUTATION } from '../../api/post'\r\nimport { COMMENT_ADD_MUTATION } from '../../api/comment'\r\n\r\nimport ProfileButtons from './ProfileButtons'\r\nimport CommentsContainer from './CommentsContainer'\r\n\r\nimport styles from '././Posts.module.css'\r\n\r\n\r\nconst DEFAULT_IMAGE = 'https://miro.medium.com/max/550/1*TxgjUE2uJuiRUVVmE_kU6g.png'\r\n\r\nconst PostDetail = () => {\r\n    const { id } = useParams()\r\n    \r\n    const user = localStorage.getItem('user')\r\n    const [ likes, setLikes ] = useState(0)\r\n    \r\n    const [ postFind, { data: detailData } ] = useMutation(POST_FIND_MUTATION)\r\n    const [ postLike ] = useMutation(POST_LIKE_MUTATION)\r\n    \r\n    //Set likes on given fetched data\r\n    useEffect(() => {\r\n        if (detailData) {\r\n            setLikes(detailData.findPost.post.totalLikes)\r\n        }\r\n    }, [detailData])\r\n\r\n    //Fetch data everytime user enter post\r\n    useEffect(() => {\r\n        //Prevents from getting error\r\n        if (id !== 'login' && id !== 'profile') {\r\n            postFind({ variables: { id: id } })\r\n        }\r\n    }, [id])\r\n\r\n\r\n    //Fetch to access users likes\r\n    const handleOnLike = () => {\r\n        postLike({ variables: { id: id, user: user } })\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {(detailData) ? (\r\n            <Item.Group>\r\n                <Item className={styles.post_detail_item}>\r\n                    <Item.Image size='small' src={DEFAULT_IMAGE} />\r\n                    <Item.Content className={styles.post_content}>\r\n                        <Item.Header>{detailData.findPost.post.title}</Item.Header>\r\n                        <Item.Meta className={styles.post_user}>\r\n                            <a href={`profile/${detailData.findPost.post.user.username}`}>\r\n                                {detailData.findPost.post.user.username}\r\n                            </a>\r\n                        </Item.Meta>\r\n                        <Item.Meta className={styles.post_user}>{detailData.findPost.post.posted}</Item.Meta>\r\n                        <Item.Description className={styles.post_textfield}>{detailData.findPost.post.content}</Item.Description>\r\n                            <div className={styles.post_detail_buttons_container}>\r\n                                <Button as='div' labelPosition='right'>\r\n                                    <Button onClick={handleOnLike} color='red'>\r\n                                        <Icon name='heart' />\r\n                                        Like\r\n                                    </Button>\r\n                                    <Label as='a' basic color='red' pointing='left'>\r\n                                        {likes}\r\n                                    </Label>\r\n                                </Button>\r\n                                {/*Delete and edit button (if it is user post)*/}\r\n                                <ProfileButtons id={id} detailData={detailData} />\r\n                            </div>\r\n                        {/*CommentsContainer, including reply form and button*/}\r\n                        <CommentsContainer id={id} detailData={detailData} />\r\n                    </Item.Content>\r\n                </Item>\r\n            </Item.Group>\r\n        ) : null} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostDetail\r\n"]},"metadata":{},"sourceType":"module"}