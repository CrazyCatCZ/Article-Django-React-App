{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Posts\\\\PostDetail\\\\CommentsContainer.js\";\nimport React, { useState, useRef } from 'react';\nimport { Button, Comment, Header, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { COMMENT_ADD_MUTATION } from '../../api/comment';\nimport CustomComment from '../../Comments/CustomComment'; //import stylesComments from '../../Comments/Comments.module.css'\n//import styles from '../Posts.module.css'\n\nconst CommentsContainer = ({\n  id,\n  detailData\n}) => {\n  const user = localStorage.getItem('user');\n  const [commentAdd] = useMutation(COMMENT_ADD_MUTATION);\n  const commentRef = useRef();\n  const [allowButton, setAllowButton] = useState(false);\n\n  const handleOnComment = () => {\n    const contentValue = commentRef.current.value;\n    commentAdd({\n      variables: {\n        id: id,\n        user: user,\n        content: contentValue\n      }\n    }); //reset site\n\n    window.location.reload(false);\n  }; //Check if user filled reply form\n\n\n  const checkForm = () => {\n    if (commentRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, detailData.findPost.post.commentSet ? /*#__PURE__*/React.createElement(Comment.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h3\",\n    dividing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Comments\"), detailData.findPost.post.commentSet.map(({\n    id,\n    content,\n    posted,\n    user: {\n      username,\n      profile: image\n    },\n    replySet\n  }) => {\n    return /*#__PURE__*/React.createElement(CustomComment, {\n      key: id,\n      id: id,\n      replys: replySet,\n      content: content,\n      posted: posted,\n      username: username,\n      image: image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    });\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment_create_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    reply: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: commentRef,\n    className: \"post_create_content_container\",\n    placeholder: \"Enter something...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnComment,\n    className: \"comment_create_button\",\n    content: \"Add Reply\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnComment,\n    className: \"comment_create_button\",\n    content: \"Add Reply\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default CommentsContainer;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Posts/PostDetail/CommentsContainer.js"],"names":["React","useState","useRef","Button","Comment","Header","Form","useMutation","COMMENT_ADD_MUTATION","CustomComment","CommentsContainer","id","detailData","user","localStorage","getItem","commentAdd","commentRef","allowButton","setAllowButton","handleOnComment","contentValue","current","value","variables","content","window","location","reload","checkForm","findPost","post","commentSet","map","posted","username","profile","image","replySet"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { Button, Comment, Header, Form } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { COMMENT_ADD_MUTATION } from '../../api/comment'\r\n\r\nimport CustomComment  from '../../Comments/CustomComment'\r\n\r\n//import stylesComments from '../../Comments/Comments.module.css'\r\n//import styles from '../Posts.module.css'\r\n\r\nconst CommentsContainer = ({ id, detailData }) => {\r\n    const user = localStorage.getItem('user')\r\n    const [ commentAdd ] = useMutation(COMMENT_ADD_MUTATION)\r\n\r\n    const commentRef = useRef()\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n\r\n\r\n    const handleOnComment = () => {\r\n        const contentValue = commentRef.current.value\r\n\r\n        commentAdd({ variables: { id: id, user: user, content: contentValue } })\r\n        //reset site\r\n        window.location.reload(false);\r\n    }\r\n\r\n    //Check if user filled reply form\r\n    const checkForm = () => {\r\n        if (commentRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"comments_container\">\r\n            {(detailData.findPost.post.commentSet) ? (\r\n                <Comment.Group>\r\n                    <Header as='h3' dividing>\r\n                        Comments\r\n                    </Header>\r\n                    {(detailData.findPost.post.commentSet.map(({ id, content, posted, user: { username, profile: image }, replySet }) => {\r\n                        return (\r\n                            <CustomComment \r\n                                key={id}\r\n                                id={id}\r\n                                replys={replySet}\r\n                                content={content}\r\n                                posted={posted}\r\n                                username={username}\r\n                                image={image}\r\n                            />\r\n                        )\r\n                    }))}\r\n                </Comment.Group>\r\n            ) : null }\r\n            <div className=\"comment_create_container\">\r\n                <Form onChange={checkForm} reply>\r\n                    <textarea ref={commentRef} className=\"post_create_content_container\" placeholder='Enter something...' />\r\n                    {(allowButton) ? (\r\n                        <Button onClick={handleOnComment} className=\"comment_create_button\" content='Add Reply' labelPosition='left' icon='edit' primary />\r\n                    ) : (\r\n                        <Button disabled onClick={handleOnComment} className=\"comment_create_button\" content='Add Reply' labelPosition='left' icon='edit' primary />\r\n                    )}\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentsContainer\r\n"]},"metadata":{},"sourceType":"module"}