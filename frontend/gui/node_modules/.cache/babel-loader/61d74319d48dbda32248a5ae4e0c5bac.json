{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Profiles\\\\UploadFile.js\";\nimport React, { useCallback } from 'react';\nimport { Segment, Header, Icon } from 'semantic-ui-react';\nimport { useDropzone } from 'react-dropzone';\nimport { GraphQLUpload } from 'graphql-upload';\n\nconst UploadFile = ({\n  onImageDrop\n}) => {\n  const {\n    GraphQLUpload\n  } = require('graphql-upload');\n\n  console.log(GraphQLUpload);\n  const onDrop = useCallback(([userImage]) => {\n    onImageDrop(userImage);\n  });\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Segment, {\n    placeholder: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"file image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), isDragActive ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Drop the files here ...\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"Drag and drop some files here, or click to select files\"))));\n};\n\nexport default UploadFile;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Profiles/UploadFile.js"],"names":["React","useCallback","Segment","Header","Icon","useDropzone","GraphQLUpload","UploadFile","onImageDrop","require","console","log","onDrop","userImage","getRootProps","getInputProps","isDragActive"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,IAA1B,QAAsC,mBAAtC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAIA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACpC,QAAM;AAAEF,IAAAA;AAAF,MAAoBG,OAAO,CAAC,gBAAD,CAAjC;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AAEA,QAAMM,MAAM,GAAGX,WAAW,CACtB,CAAC,CAACY,SAAD,CAAD,KAAiB;AACbL,IAAAA,WAAW,CAACK,SAAD,CAAX;AACH,GAHqB,CAA1B;AAKA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDX,WAAW,CAAC;AAAEO,IAAAA;AAAF,GAAD,CAAjE;AAGA,sBACI,6CAASE,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI,oBAAC,OAAD;AAAS,IAAA,WAAW,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAECC,YAAY,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADS,gBAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DALJ,CADJ,CAFJ,CADJ;AAeH,CA5BD;;AA8BA,eAAeT,UAAf","sourcesContent":["import React, { useCallback } from 'react'\r\nimport { Segment, Header, Icon } from 'semantic-ui-react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { GraphQLUpload } from 'graphql-upload';\r\n\r\n\r\n\r\nconst UploadFile = ({ onImageDrop }) => {\r\n    const { GraphQLUpload } = require('graphql-upload');\r\n\r\n    console.log(GraphQLUpload)\r\n\r\n    const onDrop = useCallback(\r\n        ([userImage]) => {\r\n            onImageDrop(userImage)        \r\n        },\r\n    )\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n\r\n    return (\r\n        <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <Segment placeholder>\r\n                <Header icon>\r\n                <Icon name='file image' />\r\n                {isDragActive ? (\r\n                    <p>Drop the files here ...</p>\r\n                ) : (\r\n                    <p>Drag and drop some files here, or click to select files</p>\r\n                )}\r\n                </Header>\r\n            </Segment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadFile\r\n"]},"metadata":{},"sourceType":"module"}