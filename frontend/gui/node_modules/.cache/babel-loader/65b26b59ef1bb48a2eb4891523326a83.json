{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plech\\\\github\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Posts\\\\PostDetail.js\";\nimport React, { useEffect } from 'react';\nimport { Item, Button } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { POST_DELETE_MUTATION, POST_FIND_MUTATION } from '../post_query';\nconst DEFAULT_IMAGE = 'https://miro.medium.com/max/550/1*TxgjUE2uJuiRUVVmE_kU6g.png';\n\nconst PostDetail = () => {\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const user = localStorage.getItem('user');\n  const [postDelete] = useMutation(POST_DELETE_MUTATION);\n  const [postFind, {\n    data: detailData\n  }] = useMutation(POST_FIND_MUTATION);\n  useEffect(() => {\n    console.log('test');\n    postFind({\n      variables: {\n        id: id\n      }\n    });\n  }, [id]);\n\n  const handleOnDelete = () => {\n    postDelete({\n      variables: {\n        id: id\n      }\n    });\n    history.push('/');\n  };\n\n  const handleOnEdit = () => {\n    history.push(`editPost/${id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-detail-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, detailData ? /*#__PURE__*/React.createElement(Item.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    className: \"post-detail-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Item.Image, {\n    size: \"small\",\n    src: DEFAULT_IMAGE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Item.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Item.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, detailData.findPost.post.title), /*#__PURE__*/React.createElement(Item.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, \"User: \", detailData.findPost.post.user), /*#__PURE__*/React.createElement(Item.Description, {\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, detailData.findPost.post.content), user === detailData.findPost.post.user ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-detail-buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnEdit,\n    className: \"post-detail-edit-button\",\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnDelete,\n    className: \"post-detail-delete-button\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  }, \"Delete\")) : null))) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Loading\"));\n};\n\nexport default PostDetail;","map":{"version":3,"sources":["C:/Users/plech/github/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Posts/PostDetail.js"],"names":["React","useEffect","Item","Button","useMutation","useHistory","useParams","POST_DELETE_MUTATION","POST_FIND_MUTATION","DEFAULT_IMAGE","PostDetail","id","history","user","localStorage","getItem","postDelete","postFind","data","detailData","console","log","variables","handleOnDelete","push","handleOnEdit","findPost","post","title","content"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Item, Button } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport { POST_DELETE_MUTATION, POST_FIND_MUTATION } from '../post_query'\r\n\r\nconst DEFAULT_IMAGE = 'https://miro.medium.com/max/550/1*TxgjUE2uJuiRUVVmE_kU6g.png'\r\n\r\nconst PostDetail = () => {\r\n    const { id } = useParams()\r\n    const history = useHistory()\r\n    const user = localStorage.getItem('user')\r\n    const [ postDelete ] = useMutation(POST_DELETE_MUTATION)\r\n    const [ postFind, { data: detailData } ] = useMutation(POST_FIND_MUTATION)\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('test')\r\n        postFind({ variables: { id: id } })\r\n    }, [id])\r\n\r\n    const handleOnDelete = () => {\r\n        postDelete({ variables: {id: id } })\r\n        history.push('/')\r\n    }\r\n\r\n    const handleOnEdit = () => {\r\n        history.push(`editPost/${id}`)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"post-detail-container\">\r\n            {(detailData) ? (\r\n                <Item.Group>\r\n                    <Item className=\"post-detail-item\">\r\n                        <Item.Image size='small' src={DEFAULT_IMAGE} />\r\n                        <Item.Content>\r\n                            <Item.Header>{detailData.findPost.post.title}</Item.Header>\r\n                            <Item.Meta>User: {detailData.findPost.post.user}</Item.Meta>\r\n                            <Item.Description className=\"post-content\">{detailData.findPost.post.content}</Item.Description>\r\n                            {(user === detailData.findPost.post.user) ? (\r\n                                <div className=\"post-detail-buttons-container\">\r\n                                    <Button onClick={handleOnEdit} className=\"post-detail-edit-button\" color=\"teal\">Edit</Button>\r\n                                    <Button onClick={handleOnDelete} className=\"post-detail-delete-button\" color=\"red\">Delete</Button>\r\n                                </div>\r\n                            ) : null }\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n\r\n            ) : (\r\n                <h1>Loading</h1>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostDetail\r\n"]},"metadata":{},"sourceType":"module"}