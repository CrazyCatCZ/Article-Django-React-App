{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Profiles\\\\Profile.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { USER_PROFILE_INFO_MUTATION, USER_UPDATE_MUTATION } from '../Api/user';\nimport { useMutation } from '@apollo/react-hooks';\nimport ProfileImage from './ProfileImage';\nimport ProfileBodyButtons from './ProfileBodyButtons';\n\nconst Profile = () => {\n  const {\n    user\n  } = useParams();\n  const currentUser = localStorage.getItem('user');\n  const history = useHistory();\n  const [profileInfo, {\n    data: profileData\n  }] = useMutation(USER_PROFILE_INFO_MUTATION);\n  const [profileUpdate, {\n    data: updateData\n  }] = useMutation(USER_UPDATE_MUTATION);\n  const [imageName, setImageName] = useState();\n  const [errorMessages, setErrorMessages] = useState();\n  const [usernameInput, setUsernameInput] = useState('');\n  const [emailInput, setEmailInput] = useState('');\n  const [profileImage, setProfileImage] = useState('none');\n  useEffect(() => {\n    const getProfileInfo = () => {\n      if (user) {\n        profileInfo({\n          variables: {\n            user: user\n          }\n        });\n      }\n    };\n\n    getProfileInfo();\n  }, [user]);\n  useEffect(() => {\n    if (profileData) {\n      let imagePath = profileData.profileInfo.profile.image;\n      setUsernameInput(profileData.profileInfo.profile.user.username);\n      setEmailInput(profileData.profileInfo.profile.user.email);\n      setImageName(imagePath);\n    }\n  }, [profileData]); //Set message to user (including error and success messages)\n\n  useEffect(() => {\n    if (updateData) {\n      setErrorMessages(updateData.profileUpdate.message);\n    }\n  }, [updateData]);\n  useEffect(() => {\n    if (updateData !== undefined && updateData.profileUpdate.message === 'Success') {\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      history.push('/login');\n      window.location.reload(false);\n    }\n  }, [updateData]);\n\n  const handleOnSubmit = () => {\n    const usernameValue = usernameRef.current.value;\n    const emailValue = emailRef.current.value;\n    profileUpdate({\n      variables: {\n        user: user,\n        newUser: usernameValue,\n        newEmail: emailValue,\n        image: profileImage\n      }\n    });\n  };\n\n  const onUsernameValueChange = value => {\n    setUsernameValue(value);\n  };\n\n  const onEmailValueChange = value => {\n    setEmailValue(value);\n  };\n\n  const onImageChange = image => {\n    if (image !== '') {\n      setProfileImage(image);\n    }\n  };\n\n  console.log(profileData);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, profileData && imageName ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, errorMessages ? /*#__PURE__*/React.createElement(Message, {\n    className: \"message-container\",\n    error: true,\n    header: \"There was some errors with your submission\",\n    list: [errorMessages],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"media profile-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"rounded-circle profile-picture\",\n    src: require(`./media/profile_pictures/large/${profileData.profileInfo.profile.image}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-body ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"account-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.username), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.email)), /*#__PURE__*/React.createElement(ProfileBodyButtons, {\n    profileData: profileData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  })), user === currentUser ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-info-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, \"Profile Info\"), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => onUsernameValueChange(event.target.value),\n    value: usernameValue,\n    ref: usernameRef,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => onEmailValueChange(event.target.value),\n    value: emailValue,\n    ref: emailRef,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(ProfileImage, {\n    userImage: profileData.profileInfo.profile.image,\n    onImageChange: onImageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, \"Update\"))) : null) : null);\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Profiles/Profile.js"],"names":["React","useState","useEffect","useRef","Button","Form","Message","useHistory","useParams","USER_PROFILE_INFO_MUTATION","USER_UPDATE_MUTATION","useMutation","ProfileImage","ProfileBodyButtons","Profile","user","currentUser","localStorage","getItem","history","profileInfo","data","profileData","profileUpdate","updateData","imageName","setImageName","errorMessages","setErrorMessages","usernameInput","setUsernameInput","emailInput","setEmailInput","profileImage","setProfileImage","getProfileInfo","variables","imagePath","profile","image","username","email","message","undefined","removeItem","push","window","location","reload","handleOnSubmit","usernameValue","usernameRef","current","value","emailValue","emailRef","newUser","newEmail","onUsernameValueChange","setUsernameValue","onEmailValueChange","setEmailValue","onImageChange","console","log","require","event","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { USER_PROFILE_INFO_MUTATION, USER_UPDATE_MUTATION } from '../Api/user'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport ProfileImage from './ProfileImage'\r\nimport ProfileBodyButtons from './ProfileBodyButtons'\r\n\r\nconst Profile = () => {\r\n    const { user } = useParams()\r\n    const currentUser = localStorage.getItem('user')\r\n    const history = useHistory()\r\n\r\n    const [ profileInfo, { data: profileData } ] = useMutation(USER_PROFILE_INFO_MUTATION)\r\n    const [ profileUpdate, { data: updateData } ] = useMutation(USER_UPDATE_MUTATION)\r\n\r\n    const [ imageName, setImageName ] = useState()\r\n    const [ errorMessages, setErrorMessages ] = useState()\r\n\r\n    const [ usernameInput, setUsernameInput ] = useState('')\r\n    const [ emailInput, setEmailInput ] = useState('')\r\n    const [ profileImage, setProfileImage ] = useState('none')\r\n\r\n\r\n    useEffect(() => {\r\n        const getProfileInfo = () => {\r\n            if (user) {\r\n                profileInfo({ variables: { user: user } })\r\n            }\r\n        }\r\n        getProfileInfo()\r\n    }, [user])\r\n    \r\n    useEffect(() => {\r\n        if (profileData) {\r\n            let imagePath = profileData.profileInfo.profile.image\r\n\r\n            setUsernameInput(profileData.profileInfo.profile.user.username)\r\n            setEmailInput(profileData.profileInfo.profile.user.email)\r\n            setImageName(imagePath)\r\n        }\r\n    }, [profileData])\r\n\r\n    //Set message to user (including error and success messages)\r\n    useEffect(() => {\r\n        if (updateData) {\r\n            setErrorMessages(updateData.profileUpdate.message)\r\n        }\r\n    }, [updateData])\r\n\r\n    useEffect(() => {\r\n        if (updateData !== undefined && updateData.profileUpdate.message === 'Success') {\r\n            localStorage.removeItem('user')\r\n            localStorage.removeItem('token')\r\n            history.push('/login')\r\n            window.location.reload(false)\r\n        }\r\n    }, [updateData])\r\n\r\n    const handleOnSubmit = () => {\r\n        const usernameValue = usernameRef.current.value\r\n        const emailValue = emailRef.current.value\r\n\r\n        profileUpdate({ variables: { \r\n            user: user, newUser: usernameValue,\r\n            newEmail: emailValue, image: profileImage }\r\n        })\r\n    }\r\n\r\n    const onUsernameValueChange = (value) => {\r\n        setUsernameValue(value)\r\n    }\r\n \r\n    const onEmailValueChange = (value) => {\r\n        setEmailValue(value)\r\n    }   \r\n\r\n    const onImageChange = (image) => {\r\n        if (image !== '') {\r\n            setProfileImage(image)\r\n        }\r\n    }\r\n\r\n    console.log(profileData)\r\n\r\n    return (\r\n        <div class=\"profile-container\">\r\n            {(profileData && imageName) ?(\r\n                <div>\r\n                    {(errorMessages) ? (\r\n                        <Message\r\n                            className=\"message-container\"\r\n                            error\r\n                            header='There was some errors with your submission'\r\n                            list={[errorMessages]}\r\n                        />\r\n                    ) : null}\r\n                    <div class=\"media profile-media\">\r\n                        <img className=\"rounded-circle profile-picture\" src={require(`./media/profile_pictures/large/${profileData.profileInfo.profile.image}`)} />\r\n                        <div className=\"profile-body ml-4\">\r\n                            <h2 className=\"account-heading\">{profileData.profileInfo.profile.user.username}</h2>\r\n                            <p className=\"text-secondary\">{profileData.profileInfo.profile.user.email}</p>\r\n                        </div>\r\n                        <ProfileBodyButtons profileData={profileData} />\r\n                    </div>\r\n                    {(user === currentUser) ? (\r\n                        <div className=\"form-group\">\r\n                            <p className=\"profile-info-text\">Profile Info</p>\r\n                            <hr className=\"mb-4\" />\r\n                            <Form>\r\n                                <Form.Field>\r\n                                    <label>Username</label>\r\n                                    <input onChange={event => onUsernameValueChange(event.target.value)} value={usernameValue} ref={usernameRef} placeholder='Username' />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <label>Email</label>\r\n                                    <input onChange={event => onEmailValueChange(event.target.value)} value={emailValue} ref={emailRef} placeholder='Email' />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <label>Image</label>\r\n                                    {/*User can choose between images*/}\r\n                                    <ProfileImage userImage={profileData.profileInfo.profile.image} onImageChange={onImageChange} />\r\n                                </Form.Field>\r\n                                <Button onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Update</Button>\r\n                                {/*<Button className=\"ml-3\" color='red'>Change Password</Button>*/}\r\n                            </Form>\r\n                        </div>\r\n                    ) : null }\r\n                </div>\r\n            ) : null }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}