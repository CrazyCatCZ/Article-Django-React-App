{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Authentication\\\\ButtonsFields.js\";\nimport React, { useState } from 'react';\n\nconst ButtonsFields = ({\n  handleOnSubmit\n}) => {\n  const [allowButton, setAllowButton] = useState(false); //Check if username and password were filled\n\n  const checkForm = () => {\n    if (usernameRef.current.value && passwordRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"Login\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Login\"));\n};\n\nexport default ButtonsFields;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Authentication/ButtonsFields.js"],"names":["React","useState","ButtonsFields","handleOnSubmit","allowButton","setAllowButton","checkForm","usernameRef","current","value","passwordRef"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAC1C,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCJ,QAAQ,CAAC,KAAD,CAAhD,CAD0C,CAG1C;;AACA,QAAMK,SAAS,GAAG,MAAM;AACpB,QAAIC,WAAW,CAACC,OAAZ,CAAoBC,KAApB,IAA6BC,WAAW,CAACF,OAAZ,CAAoBC,KAArD,EAA4D;AACxDJ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAIK;AACDA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GARD;;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMD,WAAD,gBACG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,cAAjB;AAAiC,IAAA,SAAS,EAAC,eAA3C;AAA2D,IAAA,IAAI,EAAC,QAAhE;AAAyE,IAAA,OAAO,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,gBAGG,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,OAAO,EAAEA,cAA1B;AAA0C,IAAA,SAAS,EAAC,eAApD;AAAoE,IAAA,IAAI,EAAC,QAAzE;AAAkF,IAAA,OAAO,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJR,CADJ;AASH,CAvBD;;AAyBA,eAAeD,aAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst ButtonsFields = ({ handleOnSubmit }) => {\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n\r\n    //Check if username and password were filled\r\n    const checkForm = () => {\r\n        if (usernameRef.current.value && passwordRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(allowButton) ? (\r\n                <Button onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Login</Button>\r\n            ) : (\r\n                <Button disabled onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Login</Button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonsFields\r\n"]},"metadata":{},"sourceType":"module"}