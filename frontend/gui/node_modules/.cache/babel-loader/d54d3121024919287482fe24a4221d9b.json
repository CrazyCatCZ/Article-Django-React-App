{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar _require = require('../util/DefaultHandleKey'),\n    DEFAULT_HANDLE_KEY = _require.DEFAULT_HANDLE_KEY;\n\nvar INDENT = '  ';\n/**\n * Converts an IR node into a GraphQL string. Custom Relay\n * extensions (directives) are not supported; to print fragments with\n * variables or fragment spreads with arguments, transform the node\n * prior to printing.\n */\n\nfunction print(schema, node) {\n  switch (node.kind) {\n    case 'Fragment':\n      return \"fragment \".concat(node.name, \" on \").concat(schema.getTypeString(node.type)) + printFragmentArgumentDefinitions(schema, node.argumentDefinitions) + printDirectives(schema, node.directives) + printSelections(schema, node, '', {}) + '\\n';\n\n    case 'Root':\n      return \"\".concat(node.operation, \" \").concat(node.name) + printArgumentDefinitions(schema, node.argumentDefinitions) + printDirectives(schema, node.directives) + printSelections(schema, node, '', {}) + '\\n';\n\n    case 'SplitOperation':\n      return \"SplitOperation \".concat(node.name, \" on \").concat(schema.getTypeString(node.type)) + printSelections(schema, node, '', {}) + '\\n';\n\n    default:\n      node;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Unsupported IR node `%s`.', node.kind) : invariant(false) : void 0;\n  }\n}\n\nfunction printSelections(schema, node, indent, options) {\n  var selections = node.selections;\n\n  if (selections == null) {\n    return '';\n  }\n\n  var printed = selections.map(function (selection) {\n    return printSelection(schema, selection, indent, options);\n  });\n  return printed.length ? \" {\\n\".concat(indent + INDENT).concat(printed.join('\\n' + indent + INDENT), \"\\n\").concat(indent).concat((options === null || options === void 0 ? void 0 : options.isClientExtension) === true ? '# ' : '', \"}\") : '';\n}\n/**\n * Prints a field without subselections.\n */\n\n\nfunction printField(schema, field, options) {\n  var _options$parentDirect;\n\n  var parentDirectives = (_options$parentDirect = options === null || options === void 0 ? void 0 : options.parentDirectives) !== null && _options$parentDirect !== void 0 ? _options$parentDirect : '';\n  var isClientExtension = (options === null || options === void 0 ? void 0 : options.isClientExtension) === true;\n  return (isClientExtension ? '# ' : '') + (field.alias === field.name ? field.name : field.alias + ': ' + field.name) + printArguments(schema, field.args) + parentDirectives + printDirectives(schema, field.directives) + printHandles(schema, field);\n}\n\nfunction printSelection(schema, selection, indent, options) {\n  var _options$parentDirect2;\n\n  var str;\n  var parentDirectives = (_options$parentDirect2 = options === null || options === void 0 ? void 0 : options.parentDirectives) !== null && _options$parentDirect2 !== void 0 ? _options$parentDirect2 : '';\n  var isClientExtension = (options === null || options === void 0 ? void 0 : options.isClientExtension) === true;\n\n  if (selection.kind === 'LinkedField') {\n    str = printField(schema, selection, {\n      parentDirectives: parentDirectives,\n      isClientExtension: isClientExtension\n    });\n    str += printSelections(schema, selection, indent + INDENT, {\n      isClientExtension: isClientExtension\n    });\n  } else if (selection.kind === 'ModuleImport') {\n    str = selection.selections.map(function (matchSelection) {\n      return printSelection(schema, matchSelection, indent, {\n        parentDirectives: parentDirectives,\n        isClientExtension: isClientExtension\n      });\n    }).join('\\n' + indent + INDENT);\n  } else if (selection.kind === 'ScalarField') {\n    str = printField(schema, selection, {\n      parentDirectives: parentDirectives,\n      isClientExtension: isClientExtension\n    });\n  } else if (selection.kind === 'InlineFragment') {\n    str = '';\n\n    if (isClientExtension) {\n      str += '# ';\n    }\n\n    str += '... on ' + schema.getTypeString(selection.typeCondition);\n    str += parentDirectives;\n    str += printDirectives(schema, selection.directives);\n    str += printSelections(schema, selection, indent + INDENT, {\n      isClientExtension: isClientExtension\n    });\n  } else if (selection.kind === 'FragmentSpread') {\n    str = '';\n\n    if (isClientExtension) {\n      str += '# ';\n    }\n\n    str += '...' + selection.name;\n    str += parentDirectives;\n    str += printFragmentArguments(schema, selection.args);\n    str += printDirectives(schema, selection.directives);\n  } else if (selection.kind === 'InlineDataFragmentSpread') {\n    str = \"# \".concat(selection.name, \" @inline\") + \"\\n\".concat(indent).concat(INDENT, \"...\") + parentDirectives + printSelections(schema, selection, indent + INDENT, {});\n  } else if (selection.kind === 'Condition') {\n    var value = printValue(schema, selection.condition, null); // For Flow\n\n    !(value != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Expected a variable for condition, got a literal `null`.') : invariant(false) : void 0;\n    var condStr = selection.passingValue ? ' @include' : ' @skip';\n    condStr += '(if: ' + value + ')';\n    condStr += parentDirectives; // For multi-selection conditions, pushes the condition down to each\n\n    var subSelections = selection.selections.map(function (sel) {\n      return printSelection(schema, sel, indent, {\n        parentDirectives: condStr,\n        isClientExtension: isClientExtension\n      });\n    });\n    str = subSelections.join('\\n' + indent + INDENT);\n  } else if (selection.kind === 'Stream') {\n    var streamStr = parentDirectives;\n    streamStr += \" @stream(label: \\\"\".concat(selection.label, \"\\\"\");\n\n    if (selection[\"if\"] !== null) {\n      var _printValue;\n\n      streamStr += \", if: \".concat((_printValue = printValue(schema, selection[\"if\"], null)) !== null && _printValue !== void 0 ? _printValue : '');\n    }\n\n    if (selection.initialCount !== null) {\n      var _printValue2;\n\n      streamStr += \", initial_count: \".concat((_printValue2 = printValue(schema, selection.initialCount, null)) !== null && _printValue2 !== void 0 ? _printValue2 : '');\n    }\n\n    if (selection.useCustomizedBatch !== null) {\n      var _printValue3;\n\n      streamStr += \", use_customized_batch: \".concat((_printValue3 = printValue(schema, selection.useCustomizedBatch, null)) !== null && _printValue3 !== void 0 ? _printValue3 : 'false');\n    }\n\n    streamStr += ')';\n\n    var _subSelections = selection.selections.map(function (sel) {\n      return printSelection(schema, sel, indent, {\n        parentDirectives: streamStr,\n        isClientExtension: isClientExtension\n      });\n    });\n\n    str = _subSelections.join('\\n' + INDENT);\n  } else if (selection.kind === 'Defer') {\n    var deferStr = parentDirectives;\n    deferStr += \" @defer(label: \\\"\".concat(selection.label, \"\\\"\");\n\n    if (selection[\"if\"] !== null) {\n      var _printValue4;\n\n      deferStr += \", if: \".concat((_printValue4 = printValue(schema, selection[\"if\"], null)) !== null && _printValue4 !== void 0 ? _printValue4 : '');\n    }\n\n    deferStr += ')';\n\n    if (selection.selections.every(function (subSelection) {\n      return subSelection.kind === 'InlineFragment' || subSelection.kind === 'FragmentSpread';\n    })) {\n      var _subSelections2 = selection.selections.map(function (sel) {\n        return printSelection(schema, sel, indent, {\n          parentDirectives: deferStr,\n          isClientExtension: isClientExtension\n        });\n      });\n\n      str = _subSelections2.join('\\n' + INDENT);\n    } else {\n      str = '...' + deferStr;\n      str += printSelections(schema, selection, indent + INDENT, {\n        isClientExtension: isClientExtension\n      });\n    }\n  } else if (selection.kind === 'ClientExtension') {\n    !(isClientExtension === false) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Did not expect to encounter a ClientExtension node ' + 'as a descendant of another ClientExtension node.') : invariant(false) : void 0;\n    str = '# Client-only selections:\\n' + indent + INDENT + selection.selections.map(function (sel) {\n      return printSelection(schema, sel, indent, {\n        parentDirectives: parentDirectives,\n        isClientExtension: true\n      });\n    }).join('\\n' + indent + INDENT);\n  } else {\n    selection;\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Unknown selection kind `%s`.', selection.kind) : invariant(false) : void 0;\n  }\n\n  return str;\n}\n\nfunction printArgumentDefinitions(schema, argumentDefinitions) {\n  var printed = argumentDefinitions.map(function (def) {\n    var str = \"$\".concat(def.name, \": \").concat(schema.getTypeString(def.type));\n\n    if (def.defaultValue != null) {\n      str += ' = ' + printLiteral(schema, def.defaultValue, def.type);\n    }\n\n    return str;\n  });\n  return printed.length ? \"(\\n\".concat(INDENT).concat(printed.join('\\n' + INDENT), \"\\n)\") : '';\n}\n\nfunction printFragmentArgumentDefinitions(schema, argumentDefinitions) {\n  var printed;\n  argumentDefinitions.forEach(function (def) {\n    if (def.kind !== 'LocalArgumentDefinition') {\n      return;\n    }\n\n    printed = printed || [];\n    var str = \"\".concat(def.name, \": {type: \\\"\").concat(schema.getTypeString(def.type), \"\\\"\");\n\n    if (def.defaultValue != null) {\n      str += \", defaultValue: \".concat(printLiteral(schema, def.defaultValue, def.type));\n    }\n\n    str += '}';\n    printed.push(str);\n  });\n  return printed && printed.length ? \" @argumentDefinitions(\\n\".concat(INDENT).concat(printed.join('\\n' + INDENT), \"\\n)\") : '';\n}\n\nfunction printHandles(schema, field) {\n  if (!field.handles) {\n    return '';\n  }\n\n  var printed = field.handles.map(function (handle) {\n    // For backward compatibility.\n    var key = handle.key === DEFAULT_HANDLE_KEY ? '' : \", key: \\\"\".concat(handle.key, \"\\\"\");\n    var filters = handle.filters == null ? '' : \", filters: \".concat(JSON.stringify(Array.from(handle.filters).sort()));\n    var handleArgs = handle.handleArgs == null ? '' : \", handleArgs: \".concat(printArguments(schema, handle.handleArgs));\n    return \"@__clientField(handle: \\\"\".concat(handle.name, \"\\\"\").concat(key).concat(filters).concat(handleArgs, \")\");\n  });\n  return printed.length ? ' ' + printed.join(' ') : '';\n}\n\nfunction printDirectives(schema, directives) {\n  var printed = directives.map(function (directive) {\n    return '@' + directive.name + printArguments(schema, directive.args);\n  });\n  return printed.length ? ' ' + printed.join(' ') : '';\n}\n\nfunction printFragmentArguments(schema, args) {\n  var printedArgs = printArguments(schema, args);\n\n  if (!printedArgs.length) {\n    return '';\n  }\n\n  return \" @arguments\".concat(printedArgs);\n}\n\nfunction printArguments(schema, args) {\n  var printed = [];\n  args.forEach(function (arg) {\n    var printedValue = printValue(schema, arg.value, arg.type);\n\n    if (printedValue != null) {\n      printed.push(arg.name + ': ' + printedValue);\n    }\n  });\n  return printed.length ? '(' + printed.join(', ') + ')' : '';\n}\n\nfunction printValue(schema, value, type) {\n  if (type != null && schema.isNonNull(type)) {\n    type = schema.getNullableType(type);\n  }\n\n  if (value.kind === 'Variable') {\n    return '$' + value.variableName;\n  } else if (value.kind === 'ObjectValue') {\n    !(type && schema.isInputObject(type)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLIRPrinter: Need an InputObject type to print objects.') : invariant(false) : void 0;\n    var inputType = schema.assertInputObjectType(type);\n    var pairs = value.fields.map(function (field) {\n      var fieldConfig = type != null ? schema.hasField(inputType, field.name) ? schema.getFieldConfig(schema.expectField(inputType, field.name)) : null : null;\n      var innerValue = fieldConfig && printValue(schema, field.value, fieldConfig.type);\n      return innerValue == null ? null : field.name + ': ' + innerValue;\n    }).filter(Boolean);\n    return '{' + pairs.join(', ') + '}';\n  } else if (value.kind === 'ListValue') {\n    !(type && schema.isList(type)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLIRPrinter: Need a type in order to print arrays.') : invariant(false) : void 0;\n    var innerType = schema.getListItemType(type);\n    return \"[\".concat(value.items.map(function (i) {\n      return printValue(schema, i, innerType);\n    }).join(', '), \"]\");\n  } else if (value.value != null) {\n    return printLiteral(schema, value.value, type);\n  } else {\n    return null;\n  }\n}\n\nfunction printLiteral(schema, value, type) {\n  if (value == null) {\n    var _JSON$stringify;\n\n    return (_JSON$stringify = JSON.stringify(value)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : 'null';\n  }\n\n  if (type != null && schema.isNonNull(type)) {\n    type = schema.getNullableType(type);\n  }\n\n  if (type && schema.isEnum(type)) {\n    var _JSON$stringify2;\n\n    var result = schema.serialize(schema.assertEnumType(type), value);\n\n    if (result == null && typeof value === 'string') {\n      // For backwards compatibility, print invalid input values as-is. This\n      // can occur with literals defined as an @argumentDefinitions\n      // defaultValue.\n      result = value;\n    }\n\n    !(typeof result === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Expected value of type %s to be a valid enum value, got `%s`.', schema.getTypeString(type), (_JSON$stringify2 = JSON.stringify(value)) !== null && _JSON$stringify2 !== void 0 ? _JSON$stringify2 : 'null') : invariant(false) : void 0;\n    return result;\n  } else if (type && (schema.isId(type) || schema.isInt(type))) {\n    var _JSON$stringify3;\n\n    return (_JSON$stringify3 = JSON.stringify(value)) !== null && _JSON$stringify3 !== void 0 ? _JSON$stringify3 : '';\n  } else if (type && schema.isScalar(type)) {\n    var _JSON$stringify4;\n\n    var _result = schema.serialize(schema.assertScalarType(type), value);\n\n    return (_JSON$stringify4 = JSON.stringify(_result)) !== null && _JSON$stringify4 !== void 0 ? _JSON$stringify4 : '';\n  } else if (Array.isArray(value)) {\n    !(type && schema.isList(type)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Need a type in order to print arrays.') : invariant(false) : void 0;\n    var itemType = schema.getListItemType(type);\n    return '[' + value.map(function (item) {\n      return printLiteral(schema, item, itemType);\n    }).join(', ') + ']';\n  } else if (type && schema.isList(type) && value != null) {\n    // Not an array, but still a list. Treat as list-of-one as per spec 3.1.7:\n    // http://facebook.github.io/graphql/October2016/#sec-Lists\n    return printLiteral(schema, value, schema.getListItemType(type));\n  } else if (typeof value === 'object' && value != null) {\n    var fields = [];\n    !(type && schema.isInputObject(type)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Need an InputObject type to print objects.') : invariant(false) : void 0;\n    var inputType = schema.assertInputObjectType(type);\n\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        var fieldConfig = schema.getFieldConfig(schema.expectField(inputType, key));\n        fields.push(key + ': ' + printLiteral(schema, value[key], fieldConfig.type));\n      }\n    }\n\n    return '{' + fields.join(', ') + '}';\n  } else {\n    var _JSON$stringify5;\n\n    return (_JSON$stringify5 = JSON.stringify(value)) !== null && _JSON$stringify5 !== void 0 ? _JSON$stringify5 : 'null';\n  }\n}\n\nmodule.exports = {\n  print: print,\n  printField: printField,\n  printArguments: printArguments,\n  printDirectives: printDirectives\n};","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/node_modules/relay-compiler/lib/core/IRPrinter.js"],"names":["invariant","require","_require","DEFAULT_HANDLE_KEY","INDENT","print","schema","node","kind","concat","name","getTypeString","type","printFragmentArgumentDefinitions","argumentDefinitions","printDirectives","directives","printSelections","operation","printArgumentDefinitions","process","env","NODE_ENV","indent","options","selections","printed","map","selection","printSelection","length","join","isClientExtension","printField","field","_options$parentDirect","parentDirectives","alias","printArguments","args","printHandles","_options$parentDirect2","str","matchSelection","typeCondition","printFragmentArguments","value","printValue","condition","condStr","passingValue","subSelections","sel","streamStr","label","_printValue","initialCount","_printValue2","useCustomizedBatch","_printValue3","_subSelections","deferStr","_printValue4","every","subSelection","_subSelections2","def","defaultValue","printLiteral","forEach","push","handles","handle","key","filters","JSON","stringify","Array","from","sort","handleArgs","directive","printedArgs","arg","printedValue","isNonNull","getNullableType","variableName","isInputObject","inputType","assertInputObjectType","pairs","fields","fieldConfig","hasField","getFieldConfig","expectField","innerValue","filter","Boolean","isList","innerType","getListItemType","items","i","_JSON$stringify","isEnum","_JSON$stringify2","result","serialize","assertEnumType","isId","isInt","_JSON$stringify3","isScalar","_JSON$stringify4","_result","assertScalarType","isArray","itemType","item","hasOwnProperty","_JSON$stringify5","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar _require = require('../util/DefaultHandleKey'),\n    DEFAULT_HANDLE_KEY = _require.DEFAULT_HANDLE_KEY;\n\nvar INDENT = '  ';\n/**\n * Converts an IR node into a GraphQL string. Custom Relay\n * extensions (directives) are not supported; to print fragments with\n * variables or fragment spreads with arguments, transform the node\n * prior to printing.\n */\n\nfunction print(schema, node) {\n  switch (node.kind) {\n    case 'Fragment':\n      return \"fragment \".concat(node.name, \" on \").concat(schema.getTypeString(node.type)) + printFragmentArgumentDefinitions(schema, node.argumentDefinitions) + printDirectives(schema, node.directives) + printSelections(schema, node, '', {}) + '\\n';\n\n    case 'Root':\n      return \"\".concat(node.operation, \" \").concat(node.name) + printArgumentDefinitions(schema, node.argumentDefinitions) + printDirectives(schema, node.directives) + printSelections(schema, node, '', {}) + '\\n';\n\n    case 'SplitOperation':\n      return \"SplitOperation \".concat(node.name, \" on \").concat(schema.getTypeString(node.type)) + printSelections(schema, node, '', {}) + '\\n';\n\n    default:\n      node;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Unsupported IR node `%s`.', node.kind) : invariant(false) : void 0;\n  }\n}\n\nfunction printSelections(schema, node, indent, options) {\n  var selections = node.selections;\n\n  if (selections == null) {\n    return '';\n  }\n\n  var printed = selections.map(function (selection) {\n    return printSelection(schema, selection, indent, options);\n  });\n  return printed.length ? \" {\\n\".concat(indent + INDENT).concat(printed.join('\\n' + indent + INDENT), \"\\n\").concat(indent).concat((options === null || options === void 0 ? void 0 : options.isClientExtension) === true ? '# ' : '', \"}\") : '';\n}\n/**\n * Prints a field without subselections.\n */\n\n\nfunction printField(schema, field, options) {\n  var _options$parentDirect;\n\n  var parentDirectives = (_options$parentDirect = options === null || options === void 0 ? void 0 : options.parentDirectives) !== null && _options$parentDirect !== void 0 ? _options$parentDirect : '';\n  var isClientExtension = (options === null || options === void 0 ? void 0 : options.isClientExtension) === true;\n  return (isClientExtension ? '# ' : '') + (field.alias === field.name ? field.name : field.alias + ': ' + field.name) + printArguments(schema, field.args) + parentDirectives + printDirectives(schema, field.directives) + printHandles(schema, field);\n}\n\nfunction printSelection(schema, selection, indent, options) {\n  var _options$parentDirect2;\n\n  var str;\n  var parentDirectives = (_options$parentDirect2 = options === null || options === void 0 ? void 0 : options.parentDirectives) !== null && _options$parentDirect2 !== void 0 ? _options$parentDirect2 : '';\n  var isClientExtension = (options === null || options === void 0 ? void 0 : options.isClientExtension) === true;\n\n  if (selection.kind === 'LinkedField') {\n    str = printField(schema, selection, {\n      parentDirectives: parentDirectives,\n      isClientExtension: isClientExtension\n    });\n    str += printSelections(schema, selection, indent + INDENT, {\n      isClientExtension: isClientExtension\n    });\n  } else if (selection.kind === 'ModuleImport') {\n    str = selection.selections.map(function (matchSelection) {\n      return printSelection(schema, matchSelection, indent, {\n        parentDirectives: parentDirectives,\n        isClientExtension: isClientExtension\n      });\n    }).join('\\n' + indent + INDENT);\n  } else if (selection.kind === 'ScalarField') {\n    str = printField(schema, selection, {\n      parentDirectives: parentDirectives,\n      isClientExtension: isClientExtension\n    });\n  } else if (selection.kind === 'InlineFragment') {\n    str = '';\n\n    if (isClientExtension) {\n      str += '# ';\n    }\n\n    str += '... on ' + schema.getTypeString(selection.typeCondition);\n    str += parentDirectives;\n    str += printDirectives(schema, selection.directives);\n    str += printSelections(schema, selection, indent + INDENT, {\n      isClientExtension: isClientExtension\n    });\n  } else if (selection.kind === 'FragmentSpread') {\n    str = '';\n\n    if (isClientExtension) {\n      str += '# ';\n    }\n\n    str += '...' + selection.name;\n    str += parentDirectives;\n    str += printFragmentArguments(schema, selection.args);\n    str += printDirectives(schema, selection.directives);\n  } else if (selection.kind === 'InlineDataFragmentSpread') {\n    str = \"# \".concat(selection.name, \" @inline\") + \"\\n\".concat(indent).concat(INDENT, \"...\") + parentDirectives + printSelections(schema, selection, indent + INDENT, {});\n  } else if (selection.kind === 'Condition') {\n    var value = printValue(schema, selection.condition, null); // For Flow\n\n    !(value != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Expected a variable for condition, got a literal `null`.') : invariant(false) : void 0;\n    var condStr = selection.passingValue ? ' @include' : ' @skip';\n    condStr += '(if: ' + value + ')';\n    condStr += parentDirectives; // For multi-selection conditions, pushes the condition down to each\n\n    var subSelections = selection.selections.map(function (sel) {\n      return printSelection(schema, sel, indent, {\n        parentDirectives: condStr,\n        isClientExtension: isClientExtension\n      });\n    });\n    str = subSelections.join('\\n' + indent + INDENT);\n  } else if (selection.kind === 'Stream') {\n    var streamStr = parentDirectives;\n    streamStr += \" @stream(label: \\\"\".concat(selection.label, \"\\\"\");\n\n    if (selection[\"if\"] !== null) {\n      var _printValue;\n\n      streamStr += \", if: \".concat((_printValue = printValue(schema, selection[\"if\"], null)) !== null && _printValue !== void 0 ? _printValue : '');\n    }\n\n    if (selection.initialCount !== null) {\n      var _printValue2;\n\n      streamStr += \", initial_count: \".concat((_printValue2 = printValue(schema, selection.initialCount, null)) !== null && _printValue2 !== void 0 ? _printValue2 : '');\n    }\n\n    if (selection.useCustomizedBatch !== null) {\n      var _printValue3;\n\n      streamStr += \", use_customized_batch: \".concat((_printValue3 = printValue(schema, selection.useCustomizedBatch, null)) !== null && _printValue3 !== void 0 ? _printValue3 : 'false');\n    }\n\n    streamStr += ')';\n\n    var _subSelections = selection.selections.map(function (sel) {\n      return printSelection(schema, sel, indent, {\n        parentDirectives: streamStr,\n        isClientExtension: isClientExtension\n      });\n    });\n\n    str = _subSelections.join('\\n' + INDENT);\n  } else if (selection.kind === 'Defer') {\n    var deferStr = parentDirectives;\n    deferStr += \" @defer(label: \\\"\".concat(selection.label, \"\\\"\");\n\n    if (selection[\"if\"] !== null) {\n      var _printValue4;\n\n      deferStr += \", if: \".concat((_printValue4 = printValue(schema, selection[\"if\"], null)) !== null && _printValue4 !== void 0 ? _printValue4 : '');\n    }\n\n    deferStr += ')';\n\n    if (selection.selections.every(function (subSelection) {\n      return subSelection.kind === 'InlineFragment' || subSelection.kind === 'FragmentSpread';\n    })) {\n      var _subSelections2 = selection.selections.map(function (sel) {\n        return printSelection(schema, sel, indent, {\n          parentDirectives: deferStr,\n          isClientExtension: isClientExtension\n        });\n      });\n\n      str = _subSelections2.join('\\n' + INDENT);\n    } else {\n      str = '...' + deferStr;\n      str += printSelections(schema, selection, indent + INDENT, {\n        isClientExtension: isClientExtension\n      });\n    }\n  } else if (selection.kind === 'ClientExtension') {\n    !(isClientExtension === false) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Did not expect to encounter a ClientExtension node ' + 'as a descendant of another ClientExtension node.') : invariant(false) : void 0;\n    str = '# Client-only selections:\\n' + indent + INDENT + selection.selections.map(function (sel) {\n      return printSelection(schema, sel, indent, {\n        parentDirectives: parentDirectives,\n        isClientExtension: true\n      });\n    }).join('\\n' + indent + INDENT);\n  } else {\n    selection;\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Unknown selection kind `%s`.', selection.kind) : invariant(false) : void 0;\n  }\n\n  return str;\n}\n\nfunction printArgumentDefinitions(schema, argumentDefinitions) {\n  var printed = argumentDefinitions.map(function (def) {\n    var str = \"$\".concat(def.name, \": \").concat(schema.getTypeString(def.type));\n\n    if (def.defaultValue != null) {\n      str += ' = ' + printLiteral(schema, def.defaultValue, def.type);\n    }\n\n    return str;\n  });\n  return printed.length ? \"(\\n\".concat(INDENT).concat(printed.join('\\n' + INDENT), \"\\n)\") : '';\n}\n\nfunction printFragmentArgumentDefinitions(schema, argumentDefinitions) {\n  var printed;\n  argumentDefinitions.forEach(function (def) {\n    if (def.kind !== 'LocalArgumentDefinition') {\n      return;\n    }\n\n    printed = printed || [];\n    var str = \"\".concat(def.name, \": {type: \\\"\").concat(schema.getTypeString(def.type), \"\\\"\");\n\n    if (def.defaultValue != null) {\n      str += \", defaultValue: \".concat(printLiteral(schema, def.defaultValue, def.type));\n    }\n\n    str += '}';\n    printed.push(str);\n  });\n  return printed && printed.length ? \" @argumentDefinitions(\\n\".concat(INDENT).concat(printed.join('\\n' + INDENT), \"\\n)\") : '';\n}\n\nfunction printHandles(schema, field) {\n  if (!field.handles) {\n    return '';\n  }\n\n  var printed = field.handles.map(function (handle) {\n    // For backward compatibility.\n    var key = handle.key === DEFAULT_HANDLE_KEY ? '' : \", key: \\\"\".concat(handle.key, \"\\\"\");\n    var filters = handle.filters == null ? '' : \", filters: \".concat(JSON.stringify(Array.from(handle.filters).sort()));\n    var handleArgs = handle.handleArgs == null ? '' : \", handleArgs: \".concat(printArguments(schema, handle.handleArgs));\n    return \"@__clientField(handle: \\\"\".concat(handle.name, \"\\\"\").concat(key).concat(filters).concat(handleArgs, \")\");\n  });\n  return printed.length ? ' ' + printed.join(' ') : '';\n}\n\nfunction printDirectives(schema, directives) {\n  var printed = directives.map(function (directive) {\n    return '@' + directive.name + printArguments(schema, directive.args);\n  });\n  return printed.length ? ' ' + printed.join(' ') : '';\n}\n\nfunction printFragmentArguments(schema, args) {\n  var printedArgs = printArguments(schema, args);\n\n  if (!printedArgs.length) {\n    return '';\n  }\n\n  return \" @arguments\".concat(printedArgs);\n}\n\nfunction printArguments(schema, args) {\n  var printed = [];\n  args.forEach(function (arg) {\n    var printedValue = printValue(schema, arg.value, arg.type);\n\n    if (printedValue != null) {\n      printed.push(arg.name + ': ' + printedValue);\n    }\n  });\n  return printed.length ? '(' + printed.join(', ') + ')' : '';\n}\n\nfunction printValue(schema, value, type) {\n  if (type != null && schema.isNonNull(type)) {\n    type = schema.getNullableType(type);\n  }\n\n  if (value.kind === 'Variable') {\n    return '$' + value.variableName;\n  } else if (value.kind === 'ObjectValue') {\n    !(type && schema.isInputObject(type)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLIRPrinter: Need an InputObject type to print objects.') : invariant(false) : void 0;\n    var inputType = schema.assertInputObjectType(type);\n    var pairs = value.fields.map(function (field) {\n      var fieldConfig = type != null ? schema.hasField(inputType, field.name) ? schema.getFieldConfig(schema.expectField(inputType, field.name)) : null : null;\n      var innerValue = fieldConfig && printValue(schema, field.value, fieldConfig.type);\n      return innerValue == null ? null : field.name + ': ' + innerValue;\n    }).filter(Boolean);\n    return '{' + pairs.join(', ') + '}';\n  } else if (value.kind === 'ListValue') {\n    !(type && schema.isList(type)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLIRPrinter: Need a type in order to print arrays.') : invariant(false) : void 0;\n    var innerType = schema.getListItemType(type);\n    return \"[\".concat(value.items.map(function (i) {\n      return printValue(schema, i, innerType);\n    }).join(', '), \"]\");\n  } else if (value.value != null) {\n    return printLiteral(schema, value.value, type);\n  } else {\n    return null;\n  }\n}\n\nfunction printLiteral(schema, value, type) {\n  if (value == null) {\n    var _JSON$stringify;\n\n    return (_JSON$stringify = JSON.stringify(value)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : 'null';\n  }\n\n  if (type != null && schema.isNonNull(type)) {\n    type = schema.getNullableType(type);\n  }\n\n  if (type && schema.isEnum(type)) {\n    var _JSON$stringify2;\n\n    var result = schema.serialize(schema.assertEnumType(type), value);\n\n    if (result == null && typeof value === 'string') {\n      // For backwards compatibility, print invalid input values as-is. This\n      // can occur with literals defined as an @argumentDefinitions\n      // defaultValue.\n      result = value;\n    }\n\n    !(typeof result === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Expected value of type %s to be a valid enum value, got `%s`.', schema.getTypeString(type), (_JSON$stringify2 = JSON.stringify(value)) !== null && _JSON$stringify2 !== void 0 ? _JSON$stringify2 : 'null') : invariant(false) : void 0;\n    return result;\n  } else if (type && (schema.isId(type) || schema.isInt(type))) {\n    var _JSON$stringify3;\n\n    return (_JSON$stringify3 = JSON.stringify(value)) !== null && _JSON$stringify3 !== void 0 ? _JSON$stringify3 : '';\n  } else if (type && schema.isScalar(type)) {\n    var _JSON$stringify4;\n\n    var _result = schema.serialize(schema.assertScalarType(type), value);\n\n    return (_JSON$stringify4 = JSON.stringify(_result)) !== null && _JSON$stringify4 !== void 0 ? _JSON$stringify4 : '';\n  } else if (Array.isArray(value)) {\n    !(type && schema.isList(type)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Need a type in order to print arrays.') : invariant(false) : void 0;\n    var itemType = schema.getListItemType(type);\n    return '[' + value.map(function (item) {\n      return printLiteral(schema, item, itemType);\n    }).join(', ') + ']';\n  } else if (type && schema.isList(type) && value != null) {\n    // Not an array, but still a list. Treat as list-of-one as per spec 3.1.7:\n    // http://facebook.github.io/graphql/October2016/#sec-Lists\n    return printLiteral(schema, value, schema.getListItemType(type));\n  } else if (typeof value === 'object' && value != null) {\n    var fields = [];\n    !(type && schema.isInputObject(type)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'IRPrinter: Need an InputObject type to print objects.') : invariant(false) : void 0;\n    var inputType = schema.assertInputObjectType(type);\n\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        var fieldConfig = schema.getFieldConfig(schema.expectField(inputType, key));\n        fields.push(key + ': ' + printLiteral(schema, value[key], fieldConfig.type));\n      }\n    }\n\n    return '{' + fields.join(', ') + '}';\n  } else {\n    var _JSON$stringify5;\n\n    return (_JSON$stringify5 = JSON.stringify(value)) !== null && _JSON$stringify5 !== void 0 ? _JSON$stringify5 : 'null';\n  }\n}\n\nmodule.exports = {\n  print: print,\n  printField: printField,\n  printArguments: printArguments,\n  printDirectives: printDirectives\n};"]},"metadata":{},"sourceType":"script"}