{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Authentication\\\\Login\\\\Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-dom';\nimport { USER_LOGIN_MUTATION, USER_REFRESH_TOKEN_MUTATION } from '../../Api/user';\nimport './Login.css';\n\nconst Login = ({}) => {\n  const history = useHistory();\n  const [failedToLogin, setFailedToLogin] = useState('');\n  const [allowButton, setAllowButton] = useState(false);\n  const [loginUser, {\n    data: loginData\n  }] = useMutation(USER_LOGIN_MUTATION);\n  const [checkUserProfile, {\n    data: checkData\n  }] = useMutation(USER_LOGIN_MUTATION);\n  const [verifyToken, {\n    data: tokenData\n  }] = useMutation(USER_REFRESH_TOKEN_MUTATION);\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState(''); //if login wasn't successful\n\n  useEffect(() => {\n    if (loginData) {\n      if (loginData.tokenAuth.success !== true) {\n        setFailedToLogin(true);\n      }\n    }\n  }, [loginData]); //if login was successful\n\n  useEffect(() => {\n    if (loginData) {\n      if (loginData.tokenAuth.success === true) {\n        const token = loginData.tokenAuth.token;\n        localStorage.setItem('user', usernameInput);\n        localStorage.setItem('token', token);\n        window.location.reload(false);\n        history.push('/');\n      }\n    }\n  }, [loginData]); //check few things\n\n  useEffect(() => {\n    if (loginData) {\n      const token = loginData.tokenAuth.token; //if user doesnt have profile -> create new one\n\n      checkUserProfile({\n        variables: {\n          user: usernameInput\n        }\n      }); //verify the token\n\n      verifyToken({\n        variables: {\n          token: token\n        }\n      });\n    }\n  }, [loginData]);\n  useEffect(() => {\n    console.log('test');\n  }, [tokenData]);\n\n  const handleOnSubmit = () => {\n    loginUser({\n      variables: {\n        username: usernameInput,\n        password: passwordInput\n      }\n    });\n  }; //Check if username and password were filled\n\n\n  useEffect(() => {\n    if (usernameInput !== '' && passwordInput !== '') {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  }, [usernameInput, passwordInput]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, failedToLogin !== false && failedToLogin !== '' ? /*#__PURE__*/React.createElement(Message, {\n    className: \"error-message-container\",\n    error: true,\n    header: \"Please, enter valid credentials\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }) : null, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setUsernameInput(event.target.value),\n    value: usernameInput,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setPasswordInput(event.target.value),\n    value: passwordInput,\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Need an an account? \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/register\",\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 67\n    }\n  }, \"Sign up\"))), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Login\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Login\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Authentication/Login/Login.js"],"names":["React","useState","useEffect","Button","Form","Message","useMutation","useHistory","USER_LOGIN_MUTATION","USER_REFRESH_TOKEN_MUTATION","Login","history","failedToLogin","setFailedToLogin","allowButton","setAllowButton","loginUser","data","loginData","checkUserProfile","checkData","verifyToken","tokenData","usernameInput","setUsernameInput","passwordInput","setPasswordInput","tokenAuth","success","token","localStorage","setItem","window","location","reload","push","variables","user","console","log","handleOnSubmit","username","password","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { USER_LOGIN_MUTATION, USER_REFRESH_TOKEN_MUTATION } from '../../Api/user'\r\nimport './Login.css'\r\n\r\nconst Login = ({  }) => {\r\n    const history = useHistory()\r\n    \r\n    const [ failedToLogin, setFailedToLogin ] = useState('') \r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    \r\n    const [ loginUser, { data: loginData } ] = useMutation(USER_LOGIN_MUTATION)\r\n    const [ checkUserProfile, { data: checkData } ] = useMutation(USER_LOGIN_MUTATION)\r\n    const [ verifyToken, { data: tokenData }] = useMutation(USER_REFRESH_TOKEN_MUTATION)\r\n\r\n    const [ usernameInput, setUsernameInput ] = useState('')\r\n    const [ passwordInput, setPasswordInput ] = useState('')\r\n    \r\n    //if login wasn't successful\r\n    useEffect(() => {\r\n        if (loginData) {\r\n            if (loginData.tokenAuth.success !== true) {\r\n                setFailedToLogin(true)\r\n            }\r\n        }\r\n    }, [loginData]) \r\n    \r\n    //if login was successful\r\n    useEffect(() => {\r\n        if (loginData) {\r\n            if (loginData.tokenAuth.success === true) {\r\n                const token = loginData.tokenAuth.token\r\n\r\n                localStorage.setItem('user', usernameInput)\r\n                localStorage.setItem('token', token)\r\n                window.location.reload(false);\r\n                history.push('/')\r\n            }\r\n        }\r\n    }, [loginData])\r\n\r\n    //check few things\r\n    useEffect(() => {\r\n        if (loginData) {\r\n            const token = loginData.tokenAuth.token\r\n\r\n            //if user doesnt have profile -> create new one\r\n            checkUserProfile({ variables: { user: usernameInput }})\r\n\r\n            //verify the token\r\n            verifyToken({ variables: { token: token }})\r\n        }\r\n    }, [loginData])\r\n\r\n    useEffect(() => {\r\n        console.log('test')\r\n    }, [tokenData])\r\n    \r\n    \r\n    const handleOnSubmit = () => {\r\n        loginUser({ variables: {\r\n            username: usernameInput, password: passwordInput\r\n        }})\r\n    }\r\n    \r\n    //Check if username and password were filled\r\n    useEffect(() => {\r\n        if (usernameInput !== '' && passwordInput !== '') {\r\n            setAllowButton(true)\r\n        }\r\n    \r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }, [usernameInput, passwordInput])\r\n\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            {(failedToLogin !== false && failedToLogin !== '') ? (\r\n                <Message\r\n                    className=\"error-message-container\"\r\n                    error\r\n                    header=\"Please, enter valid credentials\"\r\n                />\r\n            ) : null }\r\n            <Form>\r\n                <Form.Field>\r\n                    <label>Username</label>\r\n                    <input onChange={event => setUsernameInput(event.target.value)} value={usernameInput} placeholder='Username' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label>Password</label>\r\n                    <input onChange={event => setPasswordInput(event.target.value)} value={passwordInput} type=\"password\" placeholder='Password' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <p className=\"text-muted\">Need an an account? <a href=\"/register\" className=\"ml-2\" >Sign up</a></p>\r\n                </Form.Field>\r\n                {/*If both fields were filled -> show undisabled button*/}\r\n                {(allowButton) ? (\r\n                    <Button onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Login</Button>\r\n                ) : (\r\n                    <Button disabled onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Login</Button>\r\n                )}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}