{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Posts\\\\PostCreate\\\\PostCreate.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-dom';\nimport { POST_CREATE_MUTATION, POST_LIST_QUERY } from '../../Api/post'; //import styles from './Posts.module.css'\n\nconst PostCreate = () => {\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState();\n  const [allowButton, setAllowButton] = useState(false);\n  const [titleInput, setTitleInput] = useState('');\n  const [textareaInput, setTextareaInput] = useState('');\n  const [createPost, {\n    data: postData\n  }] = useMutation(POST_CREATE_MUTATION);\n\n  const handleOnSubmit = () => {\n    const user = localStorage.getItem('user');\n    createPost({\n      variables: {\n        title: titleInput,\n        content: textareaInput,\n        user: user\n      }\n    }); //history.push('/')\n  }; //check post was successfully created\n\n\n  useEffect(() => {\n    if (postData) {\n      const message = postData.addPost.message;\n\n      if (message === 'Success') {\n        console.log(message);\n      } else {\n        setErrorMessage(message);\n      }\n    }\n  }, [postData]); //check if title and content were filled\n\n  useEffect(() => {\n    if (titleInput !== '' && textareaInput !== '') {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  }, [titleInput, textareaInput]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-create-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, errorMessage ? /*#__PURE__*/React.createElement(Message, {\n    className: \"error-message-container\",\n    error: true,\n    header: errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }) : null, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setTitleInput(event.target.value),\n    value: titleInput,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Content\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: event => setTextareaInput(event.target.value),\n    value: textareaInput,\n    placeholder: \"Enter something...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Create\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Create\")));\n};\n\nexport default PostCreate;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Posts/PostCreate/PostCreate.js"],"names":["React","useState","useEffect","Button","Form","Message","useMutation","useHistory","POST_CREATE_MUTATION","POST_LIST_QUERY","PostCreate","history","errorMessage","setErrorMessage","allowButton","setAllowButton","titleInput","setTitleInput","textareaInput","setTextareaInput","createPost","data","postData","handleOnSubmit","user","localStorage","getItem","variables","title","content","message","addPost","console","log","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,mBAAtC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,oBAAT,EAA+BC,eAA/B,QAAsD,gBAAtD,C,CAEA;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AAEA,QAAM,CAAEK,YAAF,EAAgBC,eAAhB,IAAoCZ,QAAQ,EAAlD;AACA,QAAM,CAAEa,WAAF,EAAeC,cAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAM,CAAEe,UAAF,EAAcC,aAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAEiB,aAAF,EAAiBC,gBAAjB,IAAsClB,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAM,CAAEmB,UAAF,EAAc;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GAAd,IAAqChB,WAAW,CAACE,oBAAD,CAAtD;;AAGA,QAAMe,cAAc,GAAG,MAAM;AACzB,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AAEAN,IAAAA,UAAU,CAAC;AAAEO,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAEZ,UAAT;AAAqBa,QAAAA,OAAO,EAAEX,aAA9B;AAA6CM,QAAAA,IAAI,EAAEA;AAAnD;AAAb,KAAD,CAAV,CAHyB,CAIzB;AACH,GALD,CAZqB,CAmBrB;;;AACAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIoB,QAAJ,EAAc;AACV,YAAMQ,OAAO,GAAGR,QAAQ,CAACS,OAAT,CAAiBD,OAAjC;;AAEA,UAAIA,OAAO,KAAK,SAAhB,EAA2B;AACvBE,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACH,OAFD,MAIK;AACDjB,QAAAA,eAAe,CAACiB,OAAD,CAAf;AACH;AACJ;AACJ,GAZQ,EAYN,CAACR,QAAD,CAZM,CAAT,CApBqB,CAkCrB;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,UAAU,KAAK,EAAf,IAAqBE,aAAa,KAAK,EAA3C,EAA+C;AAC3CH,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAIK;AACDA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GARQ,EAQN,CAACC,UAAD,EAAaE,aAAb,CARM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,YAAY,gBACT,oBAAC,OAAD;AACI,IAAA,SAAS,EAAC,yBADd;AAEI,IAAA,KAAK,MAFT;AAGI,IAAA,MAAM,EAAEA,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAMT,IAPR,eAQI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAO,IAAA,QAAQ,EAAEsB,KAAK,IAAIjB,aAAa,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAvC;AAA6D,IAAA,KAAK,EAAEpB,UAApE;AAAgF,IAAA,WAAW,EAAC,OAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AACI,IAAA,QAAQ,EAAGkB,KAAD,IAAWf,gBAAgB,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CADzC;AAEI,IAAA,KAAK,EAAElB,aAFX;AAGI,IAAA,WAAW,EAAC,oBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,EAaMJ,WAAD,gBACG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAES,cAAjB;AAAiC,IAAA,SAAS,EAAC,eAA3C;AAA2D,IAAA,OAAO,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,gBAGG,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,OAAO,EAAEA,cAA1B;AAA0C,IAAA,SAAS,EAAC,eAApD;AAAoE,IAAA,OAAO,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBR,CARJ,CADJ;AA8BH,CA5ED;;AA8EA,eAAeb,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { POST_CREATE_MUTATION, POST_LIST_QUERY } from '../../Api/post'\r\n\r\n//import styles from './Posts.module.css'\r\n\r\nconst PostCreate = () => {\r\n    const history = useHistory()\r\n    \r\n    const [ errorMessage, setErrorMessage ] = useState() \r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n\r\n    const [ titleInput, setTitleInput ] = useState('')\r\n    const [ textareaInput, setTextareaInput ] = useState('')\r\n\r\n    const [ createPost, { data: postData } ] = useMutation(POST_CREATE_MUTATION)\r\n  \r\n\r\n    const handleOnSubmit = () => {\r\n        const user = localStorage.getItem('user')\r\n        \r\n        createPost({ variables: { title: titleInput, content: textareaInput, user: user }})\r\n        //history.push('/')\r\n    }\r\n\r\n    //check post was successfully created\r\n    useEffect(() => {\r\n        if (postData) {\r\n            const message = postData.addPost.message\r\n\r\n            if (message === 'Success') {\r\n                console.log(message)\r\n            } \r\n\r\n            else {\r\n                setErrorMessage(message)\r\n            }\r\n        }\r\n    }, [postData])\r\n\r\n    //check if title and content were filled\r\n    useEffect(() => {\r\n        if (titleInput !== '' && textareaInput !== '') {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }, [titleInput, textareaInput])\r\n\r\n\r\n    return (\r\n        <div className=\"post-create-container\">\r\n            {errorMessage ? (\r\n                <Message\r\n                    className=\"error-message-container\"\r\n                    error\r\n                    header={errorMessage}\r\n                />\r\n            ) : null }\r\n            <Form>\r\n                <Form.Field>\r\n                    <label>Title</label>\r\n                    <input onChange={event => setTitleInput(event.target.value)} value={titleInput} placeholder='Title' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label>Content</label>\r\n                    <textarea \r\n                        onChange={(event) => setTextareaInput(event.target.value)}\r\n                        value={textareaInput}\r\n                        placeholder='Enter something...' \r\n                    />\r\n                </Form.Field>\r\n                {(allowButton) ? (\r\n                    <Button onClick={handleOnSubmit} className=\"submit-button\" primary>Create</Button>\r\n                ) : (\r\n                    <Button disabled onClick={handleOnSubmit} className=\"submit-button\" primary>Create</Button>\r\n                ) }\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCreate\r\n"]},"metadata":{},"sourceType":"module"}