{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Profiles\\\\Profile.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Message } from 'semantic-ui-react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { USER_PROFILE_INFO_MUTATION } from '../Api/user';\nimport { useMutation } from '@apollo/react-hooks';\nimport ProfileUpdateSection from './ProfileUpdateSection';\n\nconst Profile = () => {\n  const currentUser = localStorage.getItem('user');\n  const [profileInfo, {\n    data: profileData\n  }] = useMutation(USER_PROFILE_INFO_MUTATION);\n  const {\n    user\n  } = useParams();\n  const [imageName, setImageName] = useState();\n  const [errorMessages, setErrorMessages] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    const getProfileInfo = () => {\n      if (user) {\n        profileInfo({\n          variables: {\n            user: user\n          }\n        });\n      }\n    };\n\n    getProfileInfo();\n  }, [user]);\n  useEffect(() => {\n    if (profileData) {\n      let imagePath = profileData.profileInfo.profile.image;\n\n      if (imagePath !== 'default.jpg') {\n        imagePath = imagePath.slice(17);\n      }\n\n      setUsernameValue(profileData.profileInfo.profile.user.username);\n      setEmailValue(profileData.profileInfo.profile.user.email);\n      setImageName(imagePath);\n    }\n  }, [profileData]);\n  useEffect(() => {\n    if (updateData) {\n      setErrorMessages(updateData.profileUpdate.message);\n    }\n  }, [updateData]);\n  useEffect(() => {\n    if (updateData !== undefined && updateData.profileUpdate.message === 'Success') {\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      history.push('/login');\n      window.location.reload(false);\n    }\n  }, [updateData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, profileData && imageName ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, errorMessages ? /*#__PURE__*/React.createElement(Message, {\n    className: \"message-container\",\n    error: true,\n    header: \"There was some errors with your submission\",\n    list: [errorMessages],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"media profile-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"rounded-circle profile-picture\",\n    src: require(`./media/${profileData.profileInfo.profile.image}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-body ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"account-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.username), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.email))), user === currentUser ? /*#__PURE__*/React.createElement(ProfileUpdateSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }) : null) : null);\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Profiles/Profile.js"],"names":["React","useState","useEffect","useRef","Message","useHistory","useParams","USER_PROFILE_INFO_MUTATION","useMutation","ProfileUpdateSection","Profile","currentUser","localStorage","getItem","profileInfo","data","profileData","user","imageName","setImageName","errorMessages","setErrorMessages","history","getProfileInfo","variables","imagePath","profile","image","slice","setUsernameValue","username","setEmailValue","email","updateData","profileUpdate","message","undefined","removeItem","push","window","location","reload","require"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { USER_PROFILE_INFO_MUTATION } from '../Api/user'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport ProfileUpdateSection from './ProfileUpdateSection'\r\n\r\nconst Profile = () => {\r\n    const currentUser = localStorage.getItem('user')\r\n    \r\n    const [ profileInfo, { data: profileData } ] = useMutation(USER_PROFILE_INFO_MUTATION)\r\n    \r\n    const { user } = useParams()\r\n    const [ imageName, setImageName ] = useState()\r\n    const [ errorMessages, setErrorMessages ] = useState()\r\n    const history = useHistory()\r\n\r\n    \r\n    useEffect(() => {\r\n        const getProfileInfo = () => {\r\n            if (user) {\r\n                profileInfo({ variables: { user: user } })\r\n            }\r\n        }\r\n        getProfileInfo()\r\n    }, [user])\r\n    \r\n    useEffect(() => {\r\n        if (profileData) {\r\n            let imagePath = profileData.profileInfo.profile.image\r\n            \r\n            if (imagePath !== 'default.jpg') {\r\n                imagePath = imagePath.slice(17)\r\n            }\r\n\r\n            setUsernameValue(profileData.profileInfo.profile.user.username)\r\n            setEmailValue(profileData.profileInfo.profile.user.email)\r\n            setImageName(imagePath)\r\n        }\r\n    }, [profileData])\r\n\r\n    useEffect(() => {\r\n        if (updateData) {\r\n            setErrorMessages(updateData.profileUpdate.message)\r\n        }\r\n    }, [updateData])\r\n\r\n    useEffect(() => {\r\n        if (updateData !== undefined && updateData.profileUpdate.message === 'Success') {\r\n            localStorage.removeItem('user')\r\n            localStorage.removeItem('token')\r\n            history.push('/login')\r\n            window.location.reload(false)\r\n        }\r\n    }, [updateData])\r\n\r\n       \r\n\r\n\r\n    return (\r\n        <div class=\"profile-container\">\r\n            {(profileData && imageName) ?(\r\n                <div>\r\n                    {(errorMessages) ? (\r\n                        <Message\r\n                            className=\"message-container\"\r\n                            error\r\n                            header='There was some errors with your submission'\r\n                            list={[errorMessages]}\r\n                        />\r\n                    ) : null}\r\n                    <div class=\"media profile-media\">\r\n                        <img className=\"rounded-circle profile-picture\" src={require(`./media/${profileData.profileInfo.profile.image}`)} />\r\n                        <div className=\"profile-body ml-5\">\r\n                            <h2 className=\"account-heading\">{profileData.profileInfo.profile.user.username}</h2>\r\n                            <p className=\"text-secondary\">{profileData.profileInfo.profile.user.email}</p>\r\n                        </div>\r\n                    </div>\r\n                    {(user === currentUser) ? (\r\n                        <ProfileUpdateSection />\r\n                    ) : null }\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}