{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Profiles\\\\UploadFile.js\";\nimport React, { useCallback } from 'react';\nimport { Segment, Header, Icon } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useDropzone } from 'react-dropzone';\nimport { USER_FILE_MUTATION } from '../api/user';\n\nconst UploadFile = () => {\n  const [file] = useMutation(USER_FILE_MUTATION);\n  const onDrop = useCallback(([userFile]) => {\n    file({\n      variables: {\n        userFile\n      }\n    });\n  }, [file]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Segment, {\n    placeholder: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"file image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), isDragActive ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Drop the files here ...\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\"))));\n};\n\nexport default UploadFile;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Profiles/UploadFile.js"],"names":["React","useCallback","Segment","Header","Icon","useMutation","useDropzone","USER_FILE_MUTATION","UploadFile","file","onDrop","userFile","variables","getRootProps","getInputProps","isDragActive"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,IAA1B,QAAsC,mBAAtC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,kBAAT,QAAmC,aAAnC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAAEC,IAAF,IAAWJ,WAAW,CAACE,kBAAD,CAA5B;AAEA,QAAMG,MAAM,GAAGT,WAAW,CACtB,CAAC,CAACU,QAAD,CAAD,KAAgB;AACZF,IAAAA,IAAI,CAAC;AAAEG,MAAAA,SAAS,EAAE;AAAED,QAAAA;AAAF;AAAb,KAAD,CAAJ;AACH,GAHqB,EAItB,CAACF,IAAD,CAJsB,CAA1B;AAMA,QAAM;AAAEI,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDT,WAAW,CAAC;AAAEI,IAAAA;AAAF,GAAD,CAAjE;AAGA,sBACI,6CAASG,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI,oBAAC,OAAD;AAAS,IAAA,WAAW,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAECC,YAAY,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADS,gBAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DALJ,CADJ,CAFJ,CADJ;AAeH,CA3BD;;AA6BA,eAAeP,UAAf","sourcesContent":["import React, { useCallback } from 'react'\r\nimport { Segment, Header, Icon } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useDropzone } from 'react-dropzone'\r\n\r\nimport { USER_FILE_MUTATION } from '../api/user'\r\n\r\nconst UploadFile = () => {\r\n    const [ file ] = useMutation(USER_FILE_MUTATION)\r\n    \r\n    const onDrop = useCallback(\r\n        ([userFile]) => {\r\n            file({ variables: { userFile } })\r\n        },\r\n        [file]\r\n    )\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n\r\n    return (\r\n        <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <Segment placeholder>\r\n                <Header icon>\r\n                <Icon name='file image' />\r\n                {isDragActive ? (\r\n                    <p>Drop the files here ...</p>\r\n                ) : (\r\n                    <p>Drag 'n' drop some files here, or click to select files</p>\r\n                )}\r\n                </Header>\r\n            </Segment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadFile\r\n"]},"metadata":{},"sourceType":"module"}