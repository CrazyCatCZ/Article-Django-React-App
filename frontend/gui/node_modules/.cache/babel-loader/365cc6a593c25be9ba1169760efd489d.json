{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Profiles\\\\Profile.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { USER_LIST_QUERY, USER_PROFILE_INFO_MUTATION, USER_UPDATE_MUTATION } from '../api/user';\n\nconst Profile = () => {\n  const {\n    user\n  } = useParams();\n  const currentUser = localStorage.getItem('user');\n  const [profileInfo, {\n    data: profileData\n  }] = useMutation(USER_PROFILE_INFO_MUTATION);\n  const [profileUpdate, {\n    data: updateData\n  }] = useMutation(USER_UPDATE_MUTATION);\n  const {\n    data: allUsers\n  } = useQuery(USER_LIST_QUERY);\n  const [imageName, setImageName] = useState();\n  const [errorMessages, setErrorMessages] = useState({\n    type: '',\n    messages: []\n  });\n  const [allowButton, setAllowButton] = useState(false);\n  const [usernameValue, setUsernameValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const history = useHistory();\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const imageRef = useRef();\n  useEffect(() => {\n    const getProfileInfo = () => {\n      if (user) {\n        profileInfo({\n          variables: {\n            user: user\n          }\n        });\n      }\n    };\n\n    getProfileInfo();\n  }, [user]);\n  useEffect(() => {\n    if (profileData) {\n      let imagePath = profileData.profileInfo.profile.image;\n\n      if (imagePath !== 'default.jpg') {\n        imagePath = imagePath.slice(17);\n      }\n\n      setUsernameValue(profileData.profileInfo.profile.user.username);\n      setEmailValue(profileData.profileInfo.profile.user.email);\n      setImageName(imagePath);\n    }\n  }, [profileData]);\n\n  const handleOnSubmit = () => {\n    const usernameValue = usernameRef.current.value;\n    const emailValue = emailRef.current.value;\n    const email = profileData.profileInfo.profile.user.email; //check if user already exits with new username\n\n    const hasAlreadyUser = allUsers.allUsers.some(({\n      username: registeredUser\n    }) => {\n      return usernameValue === registeredUser;\n    });\n\n    if (usernameValue === user && emailValue === email) {\n      setErrorMessages({\n        type: 'error',\n        messages: ['You need change your username or email in order to update your profile']\n      });\n    } else if (hasAlreadyUser === true) {\n      setErrorMessages({\n        type: 'error',\n        messages: ['This name is already taken']\n      });\n    } else {\n      profileUpdate({\n        variables: {\n          user: user,\n          newUser: usernameValue,\n          newEmail: emailValue\n        }\n      });\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      history.push('/login');\n      window.location.reload(false);\n    }\n  };\n\n  const checkForm = () => {\n    if (usernameRef.current.value && emailRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  const onUsernameValueChange = value => {\n    setUsernameValue(value);\n  };\n\n  const onEmailValueChange = value => {\n    setEmailValue(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, profileData && imageName ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, errorMessages.type == 'error' ? /*#__PURE__*/React.createElement(Message, {\n    className: \"message-container\",\n    error: true,\n    header: \"There was some errors with your submission\",\n    list: errorMessages.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"media profile-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"rounded-circle profile-picture\",\n    src: require(`./media/${profileData.profileInfo.profile.image}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-body ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"account-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.username), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.email))), user === currentUser, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-info-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, \"Profile info\"), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    disabled: true,\n    value: usernameValue,\n    ref: usernameRef,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => onEmailValueChange(event.target.value),\n    value: emailValue,\n    ref: emailRef,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, \"Current: \", imageName)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"mb-3\",\n    ref: imageRef,\n    type: \"file\",\n    id: \"myFile\",\n    name: \"filename\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  })), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, \"Update\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, \"Update\")))) : null);\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Profiles/Profile.js"],"names":["React","useState","useEffect","useRef","Button","Form","Message","useMutation","useQuery","useHistory","useParams","USER_LIST_QUERY","USER_PROFILE_INFO_MUTATION","USER_UPDATE_MUTATION","Profile","user","currentUser","localStorage","getItem","profileInfo","data","profileData","profileUpdate","updateData","allUsers","imageName","setImageName","errorMessages","setErrorMessages","type","messages","allowButton","setAllowButton","usernameValue","setUsernameValue","emailValue","setEmailValue","history","usernameRef","emailRef","imageRef","getProfileInfo","variables","imagePath","profile","image","slice","username","email","handleOnSubmit","current","value","hasAlreadyUser","some","registeredUser","newUser","newEmail","removeItem","push","window","location","reload","checkForm","onUsernameValueChange","onEmailValueChange","require","event","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { USER_LIST_QUERY, USER_PROFILE_INFO_MUTATION, USER_UPDATE_MUTATION } from '../api/user'\r\n\r\n\r\nconst Profile = () => {\r\n    const { user } = useParams()\r\n    const currentUser = localStorage.getItem('user')\r\n\r\n    const [ profileInfo, { data: profileData } ] = useMutation(USER_PROFILE_INFO_MUTATION)\r\n    const [ profileUpdate, { data: updateData } ] = useMutation(USER_UPDATE_MUTATION)\r\n    const { data: allUsers } = useQuery(USER_LIST_QUERY)\r\n\r\n    const [ imageName, setImageName ] = useState()\r\n    const [ errorMessages, setErrorMessages ] = useState({ type: '', messages: []}) \r\n\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    const [ usernameValue, setUsernameValue ] = useState('')\r\n    const [ emailValue, setEmailValue ] = useState('')\r\n    const history = useHistory()\r\n\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const imageRef = useRef()\r\n\r\n    useEffect(() => {\r\n        const getProfileInfo = () => {\r\n            if (user) {\r\n                profileInfo({ variables: { user: user } })\r\n            }\r\n        }\r\n        getProfileInfo()\r\n    }, [user])\r\n    \r\n    useEffect(() => {\r\n        if (profileData) {\r\n            let imagePath = profileData.profileInfo.profile.image\r\n            \r\n            if (imagePath !== 'default.jpg') {\r\n                imagePath = imagePath.slice(17)\r\n            }\r\n\r\n            setUsernameValue(profileData.profileInfo.profile.user.username)\r\n            setEmailValue(profileData.profileInfo.profile.user.email)\r\n            setImageName(imagePath)\r\n        }\r\n    }, [profileData])\r\n\r\n    const handleOnSubmit = () => {\r\n        const usernameValue = usernameRef.current.value\r\n        const emailValue = emailRef.current.value\r\n        const email = profileData.profileInfo.profile.user.email\r\n\r\n        //check if user already exits with new username\r\n        const hasAlreadyUser = allUsers.allUsers.some(({ username: registeredUser }) => {\r\n            return usernameValue === registeredUser\r\n        })\r\n    \r\n        if (usernameValue === user && emailValue === email) {\r\n            setErrorMessages({ type: 'error', messages: ['You need change your username or email in order to update your profile']})\r\n        }\r\n\r\n        else if (hasAlreadyUser === true) {\r\n            setErrorMessages({ type: 'error', messages: ['This name is already taken']})\r\n        }\r\n\r\n        else {\r\n            profileUpdate({ variables: { \r\n                user: user, newUser: usernameValue,\r\n                newEmail: emailValue }\r\n            })\r\n\r\n            localStorage.removeItem('user')\r\n            localStorage.removeItem('token')\r\n            history.push('/login')\r\n            window.location.reload(false)\r\n        }\r\n    }\r\n        \r\n\r\n    const checkForm = () => {\r\n        if (usernameRef.current.value && emailRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n    const onUsernameValueChange = (value) => {\r\n        setUsernameValue(value)\r\n    }\r\n \r\n    const onEmailValueChange = (value) => {\r\n        setEmailValue(value)\r\n    }   \r\n\r\n\r\n    return (\r\n        <div class=\"profile-container\">\r\n            {(profileData && imageName) ?(\r\n                <div>\r\n                    {(errorMessages.type == 'error') ? (\r\n                        <Message\r\n                            className=\"message-container\"\r\n                            error\r\n                            header='There was some errors with your submission'\r\n                            list={errorMessages.messages}\r\n                        />\r\n                    ) : null}\r\n                    <div class=\"media profile-media\">\r\n                        <img className=\"rounded-circle profile-picture\" src={require(`./media/${profileData.profileInfo.profile.image}`)} />\r\n                        <div className=\"profile-body ml-5\">\r\n                            <h2 className=\"account-heading\">{profileData.profileInfo.profile.user.username}</h2>\r\n                            <p className=\"text-secondary\">{profileData.profileInfo.profile.user.email}</p>\r\n                        </div>\r\n                    </div>\r\n                    {(user === currentUser)}\r\n                    <div className=\"form-group\">\r\n                        <p className=\"profile-info-text\">Profile info</p>\r\n                        <hr className=\"mb-4\" />\r\n                        <Form onChange={checkForm}>\r\n                            <Form.Field>\r\n                                <label>Username</label>\r\n                                <input disabled value={usernameValue} ref={usernameRef} placeholder='Username' />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Email</label>\r\n                                <input onChange={event => onEmailValueChange(event.target.value)} value={emailValue} ref={emailRef} placeholder='Email' />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label className=\"mb-3\">Image</label>\r\n                                    <p>Current: {imageName}</p>   \r\n                            </Form.Field>\r\n                            <div>\r\n                                <input className=\"mb-3\" ref={imageRef} type=\"file\" id=\"myFile\" name=\"filename\" />\r\n                            </div>\r\n                            {(allowButton) ? (\r\n                                <Button onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Update</Button>\r\n                            ) : (\r\n                                <Button disabled onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Update</Button>\r\n                                )}\r\n                            {/*<Button className=\"ml-3\" color='red'>Change Password</Button>*/}\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}