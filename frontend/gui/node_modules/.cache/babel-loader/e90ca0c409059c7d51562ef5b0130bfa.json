{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Comments\\\\CommentCreateForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, Form } from 'semantic-ui-react';\nimport { COMMENT_ADD_MUTATION } from '../Api/comment';\n\nconst CommentCreateForm = ({\n  id\n}) => {\n  const user = localStorage.getItem('user');\n  const [allowButton, setAllowButton] = useState(false);\n  const [commentInput, setCommentInput] = useState('');\n  const [commentAdd] = useMutation(COMMENT_ADD_MUTATION);\n\n  const handleOnComment = () => {\n    commentAdd({\n      variables: {\n        id: id,\n        user: user,\n        content: commentInput\n      }\n    }); //reset site\n\n    window.location.reload(false);\n  }; //if comment form was filled -> activate button\n\n\n  useEffect(() => {\n    if (commentInput !== '') {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  }, [commentInput]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    reply: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: event => setCommentInput(event.target.value),\n    className: \"post-create-content-container\",\n    placeholder: \"Enter something...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnComment,\n    className: \"comment-create-button\",\n    content: \"Comment\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnComment,\n    className: \"comment-create-button\",\n    content: \"Comment\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default CommentCreateForm;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Comments/CommentCreateForm.js"],"names":["React","useState","useEffect","useMutation","Button","Form","COMMENT_ADD_MUTATION","CommentCreateForm","id","user","localStorage","getItem","allowButton","setAllowButton","commentInput","setCommentInput","commentAdd","handleOnComment","variables","content","window","location","reload","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,oBAAT,QAAqC,gBAArC;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAClC,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAM,CAAEa,YAAF,EAAgBC,eAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAEe,UAAF,IAAiBb,WAAW,CAACG,oBAAD,CAAlC;;AAEA,QAAMW,eAAe,GAAG,MAAM;AAC1BD,IAAAA,UAAU,CAAC;AAAEE,MAAAA,SAAS,EAAE;AAAEV,QAAAA,EAAE,EAAEA,EAAN;AAAUC,QAAAA,IAAI,EAAEA,IAAhB;AAAsBU,QAAAA,OAAO,EAAEL;AAA/B;AAAb,KAAD,CAAV,CAD0B,CAG1B;;AACAM,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH,GALD,CAPkC,CAclC;;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,YAAY,KAAK,EAArB,EAAyB;AACrBD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAIK;AACDA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GARQ,EAQN,CAACC,YAAD,CARM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAES,KAAK,IAAIR,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CADtC;AAEI,IAAA,SAAS,EAAC,+BAFd;AAGI,IAAA,WAAW,EAAC,oBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMMb,WAAD,gBACG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,eAAjB;AAAkC,IAAA,SAAS,EAAC,uBAA5C;AAAoE,IAAA,OAAO,EAAC,SAA5E;AAAsF,IAAA,aAAa,EAAC,MAApG;AAA2G,IAAA,IAAI,EAAC,MAAhH;AAAuH,IAAA,OAAO,MAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBAGG,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,OAAO,EAAEA,eAA1B;AAA2C,IAAA,SAAS,EAAC,uBAArD;AAA6E,IAAA,OAAO,EAAC,SAArF;AAA+F,IAAA,aAAa,EAAC,MAA7G;AAAoH,IAAA,IAAI,EAAC,MAAzH;AAAgI,IAAA,OAAO,MAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATR,CADJ,CADJ;AAgBH,CA1CD;;AA4CA,eAAeV,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { Button, Form } from 'semantic-ui-react'\r\nimport { COMMENT_ADD_MUTATION } from '../Api/comment'\r\n\r\nconst CommentCreateForm = ({ id }) => {\r\n    const user = localStorage.getItem('user')\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    \r\n    const [ commentInput, setCommentInput ] = useState('')\r\n    const [ commentAdd ] = useMutation(COMMENT_ADD_MUTATION)\r\n\r\n    const handleOnComment = () => {\r\n        commentAdd({ variables: { id: id, user: user, content: commentInput } })\r\n\r\n        //reset site\r\n        window.location.reload(false);\r\n    }\r\n\r\n    //if comment form was filled -> activate button\r\n    useEffect(() => {\r\n        if (commentInput !== '') {\r\n            setAllowButton(true)\r\n        }\r\n    \r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }, [commentInput])\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Form reply>\r\n                <textarea\r\n                    onChange={event => setCommentInput(event.target.value)}\r\n                    className=\"post-create-content-container\"\r\n                    placeholder='Enter something...' \r\n                />\r\n                {(allowButton) ? (\r\n                    <Button onClick={handleOnComment} className=\"comment-create-button\" content='Comment' labelPosition='left' icon='edit' primary />\r\n                ) : (\r\n                    <Button disabled onClick={handleOnComment} className=\"comment-create-button\" content='Comment' labelPosition='left' icon='edit' primary />\r\n                )}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCreateForm\r\n"]},"metadata":{},"sourceType":"module"}