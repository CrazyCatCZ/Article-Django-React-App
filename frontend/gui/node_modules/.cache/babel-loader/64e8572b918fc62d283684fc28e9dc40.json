{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Comments\\\\CommentCreateForm.js\";\nimport React, { useState, useRef } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, Form } from 'semantic-ui-react';\nimport { COMMENT_ADD_MUTATION } from '../../api/comment';\n\nconst CommentCreateForm = () => {\n  const user = localStorage.getItem('user');\n  const commentRef = useRef();\n  const [allowButton, setAllowButton] = useState(false);\n  const [commentAdd] = useMutation(COMMENT_ADD_MUTATION);\n\n  const handleOnComment = () => {\n    const contentValue = commentRef.current.value;\n    commentAdd({\n      variables: {\n        id: id,\n        user: user,\n        content: contentValue\n      }\n    });\n    window.location.reload(false);\n  };\n\n  const checkForm = () => {\n    if (commentRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-create-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    reply: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: commentRef,\n    className: \"post-create-content-container\",\n    placeholder: \"Enter something...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnComment,\n    className: \"comment-create-button\",\n    content: \"Add Reply\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnComment,\n    className: \"comment-create-button\",\n    content: \"Add Reply\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default CommentCreateForm;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Comments/CommentCreateForm.js"],"names":["React","useState","useRef","useMutation","Button","Form","COMMENT_ADD_MUTATION","CommentCreateForm","user","localStorage","getItem","commentRef","allowButton","setAllowButton","commentAdd","handleOnComment","contentValue","current","value","variables","id","content","window","location","reload","checkForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,oBAAT,QAAqC,mBAArC;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AAEA,QAAMC,UAAU,GAAGT,MAAM,EAAzB;AACA,QAAM,CAAEU,WAAF,EAAeC,cAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAM,CAAEa,UAAF,IAAiBX,WAAW,CAACG,oBAAD,CAAlC;;AAEA,QAAMS,eAAe,GAAG,MAAM;AAC1B,UAAMC,YAAY,GAAGL,UAAU,CAACM,OAAX,CAAmBC,KAAxC;AACAJ,IAAAA,UAAU,CAAC;AAAEK,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEA,EAAN;AAAUZ,QAAAA,IAAI,EAAEA,IAAhB;AAAsBa,QAAAA,OAAO,EAAEL;AAA/B;AAAb,KAAD,CAAV;AACAM,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH,GAJD;;AAMA,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAId,UAAU,CAACM,OAAX,CAAmBC,KAAvB,EAA8B;AAC1BL,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAIK;AACDA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GARD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEY,SAAhB;AAA2B,IAAA,KAAK,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAU,IAAA,GAAG,EAAEd,UAAf;AAA2B,IAAA,SAAS,EAAC,+BAArC;AAAqE,IAAA,WAAW,EAAC,oBAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEMC,WAAD,gBACG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEG,eAAjB;AAAkC,IAAA,SAAS,EAAC,uBAA5C;AAAoE,IAAA,OAAO,EAAC,WAA5E;AAAwF,IAAA,aAAa,EAAC,MAAtG;AAA6G,IAAA,IAAI,EAAC,MAAlH;AAAyH,IAAA,OAAO,MAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBAGG,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,OAAO,EAAEA,eAA1B;AAA2C,IAAA,SAAS,EAAC,uBAArD;AAA6E,IAAA,OAAO,EAAC,WAArF;AAAiG,IAAA,aAAa,EAAC,MAA/G;AAAsH,IAAA,IAAI,EAAC,MAA3H;AAAkI,IAAA,OAAO,MAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,CADJ,CADJ;AAYH,CArCD;;AAuCA,eAAeR,iBAAf","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { Button, Form } from 'semantic-ui-react'\r\nimport { COMMENT_ADD_MUTATION } from '../../api/comment'\r\n\r\nconst CommentCreateForm = () => {\r\n    const user = localStorage.getItem('user')\r\n    \r\n    const commentRef = useRef()\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    \r\n    const [ commentAdd ] = useMutation(COMMENT_ADD_MUTATION)\r\n\r\n    const handleOnComment = () => {\r\n        const contentValue = commentRef.current.value\r\n        commentAdd({ variables: { id: id, user: user, content: contentValue } })\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const checkForm = () => {\r\n        if (commentRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"comment-create-container\">\r\n            <Form onChange={checkForm} reply>\r\n                <textarea ref={commentRef} className=\"post-create-content-container\" placeholder='Enter something...' />\r\n                {(allowButton) ? (\r\n                    <Button onClick={handleOnComment} className=\"comment-create-button\" content='Add Reply' labelPosition='left' icon='edit' primary />\r\n                ) : (\r\n                    <Button disabled onClick={handleOnComment} className=\"comment-create-button\" content='Add Reply' labelPosition='left' icon='edit' primary />\r\n                )}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCreateForm\r\n"]},"metadata":{},"sourceType":"module"}