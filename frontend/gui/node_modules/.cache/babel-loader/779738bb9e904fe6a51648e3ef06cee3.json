{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Posts\\\\Posts\\\\Posts.js\";\nimport React, { useState, useRef } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Form } from 'semantic-ui-react';\nimport Post from './Post';\nimport { POST_LIST_QUERY } from './../../Api/post';\nimport { POST_FILTER_MUTATION } from './../../Api/post';\n\nconst Posts = () => {\n  const {\n    data\n  } = useQuery(POST_LIST_QUERY);\n  const [postFilter, {\n    data: filteredData\n  }] = useMutation(POST_FILTER_MUTATION);\n  const searchRef = useRef();\n\n  const handleOnChange = () => {\n    const searchValue = searchRef.current.value;\n    postFilter({\n      variables: {\n        title: searchValue\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: searchRef,\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  })))), filteredData || data ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, filteredData ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, filteredData.postFilter.filteredPosts.map(({\n    user: {\n      username\n    },\n    title,\n    posted,\n    id\n  }) => {\n    return /*#__PURE__*/React.createElement(Post, {\n      key: id,\n      username: username,\n      title: title,\n      posted: posted,\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 37\n      }\n    });\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, data.allPosts.map(({\n    user: {\n      username\n    },\n    title,\n    posted,\n    id\n  }) => {\n    return /*#__PURE__*/React.createElement(Post, {\n      key: id,\n      username: username,\n      title: title,\n      posted: posted,\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }\n    });\n  }))) : null, data === undefined ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Loading....\") : null);\n};\n\nexport default Posts;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Posts/Posts/Posts.js"],"names":["React","useState","useRef","useQuery","useMutation","Form","Post","POST_LIST_QUERY","POST_FILTER_MUTATION","Posts","data","postFilter","filteredData","searchRef","handleOnChange","searchValue","current","value","variables","title","filteredPosts","map","user","username","posted","id","allPosts","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nimport Post from './Post'\r\nimport { POST_LIST_QUERY } from './../../Api/post'\r\nimport { POST_FILTER_MUTATION  } from './../../Api/post'\r\n\r\n\r\nconst Posts = () => {\r\n    const { data } = useQuery(POST_LIST_QUERY)\r\n    const [ postFilter, { data: filteredData }] = useMutation(POST_FILTER_MUTATION)\r\n    const searchRef = useRef()\r\n\r\n    const handleOnChange = () => {\r\n        const searchValue = searchRef.current.value\r\n        postFilter({ variables: { title: searchValue } })\r\n    }\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n            <div className=\"search-bar-container\">\r\n                <Form onChange={handleOnChange}>\r\n                    <Form.Field>\r\n                        <input ref={searchRef} placeholder='Search...' />\r\n                    </Form.Field>\r\n                </Form>\r\n            </div>\r\n            {(filteredData || data) ? (\r\n                <div>\r\n                    {(filteredData) ? (\r\n                        <div>\r\n                            {filteredData.postFilter.filteredPosts.map(({ user: { username }, title, posted, id }) => {\r\n                                return (\r\n                                    <Post \r\n                                        key={id} \r\n                                        username={username}\r\n                                        title={title}\r\n                                        posted={posted}\r\n                                        id={id}\r\n                                    />\r\n                                    )\r\n                                })}\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            {data.allPosts.map(({ user: { username }, title, posted, id }) => {\r\n                                return (\r\n                                    <Post \r\n                                    key={id} \r\n                                    username={username}\r\n                                    title={title}\r\n                                    posted={posted}\r\n                                    id={id}\r\n                                    />\r\n                                    )\r\n                                })}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ) : null}\r\n            {(data === undefined) ? (\r\n                <h1>Loading....</h1>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n"]},"metadata":{},"sourceType":"module"}