{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Posts\\\\Posts\\\\Posts.js\";\nimport React, { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Form, Icon } from 'semantic-ui-react';\nimport { POST_LIST_QUERY } from './../../Api/post';\nimport { POST_FILTER_MUTATION } from './../../Api/post';\nimport MapPosts from './MapPosts';\nimport MapFilteredPosts from './MapFilteredPosts';\n\nconst Posts = () => {\n  const {\n    data: postsData\n  } = useQuery(POST_LIST_QUERY);\n  const [postFilter, {\n    data: filteredData\n  }] = useMutation(POST_FILTER_MUTATION);\n  const [searchInput, setSearchInput] = useState(''); //filter posts by user search bar input\n\n  const handleOnChange = () => {\n    postFilter({\n      variables: {\n        title: searchInput\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-5 search-bar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setSearchInput(event.target.value),\n    value: searchInput,\n    icon: \"search\",\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  })))), filteredData || postsData ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, filteredData ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MapFilteredPosts, {\n    filteredData: filteredData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, searchInput === '' ? /*#__PURE__*/React.createElement(MapPosts, {\n    postsData: postsData,\n    searchValue: searchInput || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(MapPosts, {\n    postsData: postsData,\n    searchValue: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }))) : null, postsData === undefined ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Loading....\") : null);\n};\n\nexport default Posts;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Posts/Posts/Posts.js"],"names":["React","useState","useQuery","useMutation","Form","Icon","POST_LIST_QUERY","POST_FILTER_MUTATION","MapPosts","MapFilteredPosts","Posts","data","postsData","postFilter","filteredData","searchInput","setSearchInput","handleOnChange","variables","title","event","target","value","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AAEA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,oBAAT,QAAsC,kBAAtC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAsBV,QAAQ,CAACI,eAAD,CAApC;AACA,QAAM,CAAEO,UAAF,EAAc;AAAEF,IAAAA,IAAI,EAAEG;AAAR,GAAd,IAAwCX,WAAW,CAACI,oBAAD,CAAzD;AAEA,QAAM,CAAEQ,WAAF,EAAeC,cAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD,CAJgB,CAMhB;;AACA,QAAMgB,cAAc,GAAG,MAAM;AACzBJ,IAAAA,UAAU,CAAC;AAAEK,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAEJ;AAAT;AAAb,KAAD,CAAV;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAEG,KAAK,IAAIJ,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CADrC;AAEI,IAAA,KAAK,EAAEP,WAFX;AAGI,IAAA,IAAI,EAAC,QAHT;AAII,IAAA,WAAW,EAAC,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ,EAaMD,YAAY,IAAIF,SAAjB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACME,YAAD,gBACG,uDAEI,oBAAC,gBAAD;AAAkB,IAAA,YAAY,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADH,gBAMG,0CAEKC,WAAW,KAAK,EAAhB,gBACG,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEH,SAArB;AAAgC,IAAA,WAAW,EAAEG,WAAW,IAAI,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBAGG,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEH,SAArB;AAAgC,IAAA,WAAW,EAAE,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,CAPR,CADH,GAkBG,IA/BR,EAgCMA,SAAS,KAAKW,SAAf,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,GAEG,IAlCR,CADJ;AAsCH,CAlDD;;AAoDA,eAAeb,KAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { Form, Icon } from 'semantic-ui-react'\r\n\r\nimport { POST_LIST_QUERY } from './../../Api/post'\r\nimport { POST_FILTER_MUTATION  } from './../../Api/post'\r\n\r\nimport MapPosts from './MapPosts'\r\nimport MapFilteredPosts from './MapFilteredPosts'\r\n\r\n\r\nconst Posts = () => {\r\n    const { data: postsData } = useQuery(POST_LIST_QUERY)\r\n    const [ postFilter, { data: filteredData }] = useMutation(POST_FILTER_MUTATION)\r\n    \r\n    const [ searchInput, setSearchInput ] = useState('')\r\n\r\n    //filter posts by user search bar input\r\n    const handleOnChange = () => {\r\n        postFilter({ variables: { title: searchInput } })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n            <div className=\"mb-5 search-bar-container\">\r\n                <Form onChange={handleOnChange}>\r\n                    <Form.Field>\r\n                        <input\r\n                            onChange={event => setSearchInput(event.target.value)}\r\n                            value={searchInput}\r\n                            icon=\"search\"\r\n                            placeholder='Search...'\r\n                        />\r\n                    </Form.Field>\r\n                </Form>\r\n            </div>\r\n            {(filteredData || postsData) ? (\r\n                <div>\r\n                    {(filteredData) ? (\r\n                        <>\r\n                            {/*If user has fillen search bar -> show filtere posts*/}\r\n                            <MapFilteredPosts filteredData={filteredData} />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            {/*Otherwise show all posts*/}    \r\n                            {searchInput === '' ? (\r\n                                <MapPosts postsData={postsData} searchValue={searchInput || ''} />\r\n                            ) : (\r\n                                <MapPosts postsData={postsData} searchValue={''} />\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </div>\r\n            ) : null}\r\n            {(postsData === undefined) ? (\r\n                <h1>Loading....</h1>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n"]},"metadata":{},"sourceType":"module"}