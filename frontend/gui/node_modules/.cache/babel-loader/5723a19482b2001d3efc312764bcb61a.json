{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Profiles\\\\ProfileImages.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card } from 'semantic-ui-react';\nlet profileImages = ['default.jpg', 'christian.jpg', 'daniel.jpg', 'elliot.jpg', 'jenny.jpg', 'joe.jpg', 'steve.jpg', 'stevie.jpg'];\n\nconst ProfileImages = ({\n  userImage,\n  onImageChange\n}) => {\n  //Image that user clicked as new profile image\n  const [chosenImage, setChosenImage] = useState(''); //Will not show user image\n\n  profileImages = profileImages.filter(image => {\n    return image !== userImage;\n  });\n  useEffect(() => {\n    onImageChange(chosenImage);\n  }, [chosenImage]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Group, {\n    itemsPerRow: 10,\n    className: \"profile-update-images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, profileImages.map(image => {\n    if (chosenImage == image) {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"profile-clicked-update-image\",\n        onClick: () => setChosenImage(image),\n        raised: true,\n        image: require(`./media/profile_pictures/large/${image}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"profile-update-image\",\n        onClick: () => setChosenImage(image),\n        raised: true,\n        image: require(`./media/profile_pictures/large/${image}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      });\n    }\n  })));\n};\n\nexport default ProfileImages;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Profiles/ProfileImages.js"],"names":["React","useState","useEffect","Card","profileImages","ProfileImages","userImage","onImageChange","chosenImage","setChosenImage","filter","image","map","require"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,IAAIC,aAAa,GAAG,CAChB,aADgB,EACD,eADC,EACgB,YADhB,EAC8B,YAD9B,EAEhB,WAFgB,EAEH,SAFG,EAEQ,WAFR,EAEqB,YAFrB,CAApB;;AAKA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAkC;AACpD;AACA,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD,CAFoD,CAIpD;;AACAG,EAAAA,aAAa,GAAGA,aAAa,CAACM,MAAd,CAAqBC,KAAK,IAAI;AAC1C,WAAOA,KAAK,KAAKL,SAAjB;AACH,GAFe,CAAhB;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,aAAa,CAACC,WAAD,CAAb;AACH,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,WAAW,EAAE,EAAzB;AAA6B,IAAA,SAAS,EAAC,uBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,aAAa,CAACQ,GAAd,CAAkBD,KAAK,IAAI;AACxB,QAAIH,WAAW,IAAIG,KAAnB,EAA0B;AACtB,0BACI,oBAAC,IAAD;AACI,QAAA,SAAS,EAAC,8BADd;AAEI,QAAA,OAAO,EAAE,MAAMF,cAAc,CAACE,KAAD,CAFjC;AAGI,QAAA,MAAM,MAHV;AAII,QAAA,KAAK,EAAEE,OAAO,CAAE,kCAAiCF,KAAM,EAAzC,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQH,KATD,MAUK;AACD,0BACI,oBAAC,IAAD;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,QAAA,OAAO,EAAE,MAAMF,cAAc,CAACE,KAAD,CAFjC;AAGI,QAAA,MAAM,MAHV;AAII,QAAA,KAAK,EAAEE,OAAO,CAAE,kCAAiCF,KAAM,EAAzC,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQH;AACJ,GArBA,CADL,CADJ,CADJ;AA4BH,CAzCD;;AA2CA,eAAeN,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Card } from 'semantic-ui-react'\r\n\r\nlet profileImages = [\r\n    'default.jpg', 'christian.jpg', 'daniel.jpg', 'elliot.jpg',\r\n    'jenny.jpg', 'joe.jpg', 'steve.jpg', 'stevie.jpg'\r\n]\r\n\r\nconst ProfileImages = ({ userImage, onImageChange }) => {\r\n    //Image that user clicked as new profile image\r\n    const [ chosenImage, setChosenImage ] = useState('')\r\n\r\n    //Will not show user image\r\n    profileImages = profileImages.filter(image => {\r\n        return image !== userImage\r\n    })\r\n\r\n    useEffect(() => {\r\n        onImageChange(chosenImage)\r\n    }, [chosenImage])\r\n\r\n    return (\r\n        <div>\r\n            <Card.Group itemsPerRow={10} className=\"profile-update-images\">\r\n                {profileImages.map(image => {\r\n                    if (chosenImage == image) {\r\n                        return(\r\n                            <Card\r\n                                className=\"profile-clicked-update-image\"\r\n                                onClick={() => setChosenImage(image)}\r\n                                raised\r\n                                image={require(`./media/profile_pictures/large/${image}`)} \r\n                            />                          \r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Card\r\n                                className=\"profile-update-image\"\r\n                                onClick={() => setChosenImage(image)}\r\n                                raised\r\n                                image={require(`./media/profile_pictures/large/${image}`)} \r\n                            />\r\n                        )\r\n                    }\r\n                })}\r\n            </Card.Group>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileImages\r\n"]},"metadata":{},"sourceType":"module"}