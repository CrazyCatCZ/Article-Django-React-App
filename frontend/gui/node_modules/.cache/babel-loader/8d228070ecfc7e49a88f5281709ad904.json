{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n\n/**\n * Based on implementations by Gary Court and Austin Appleby, 2011, MIT.\n * @preserve-header\n */\n'use strict';\n\nvar BASE62 = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n/**\n * @param {string} key A UTF-16 or ASCII string\n * @return {string} a base62 murmur hash\n */\n\nfunction murmurHash(str) {\n  /* eslint-disable no-bitwise */\n  var length = str.length;\n  var rem = length & 3;\n  var len = length ^ rem;\n  var h = 0;\n  var i = 0;\n  var k;\n\n  while (i !== len) {\n    var ch4 = str.charCodeAt(i + 3);\n    k = str.charCodeAt(i) ^ str.charCodeAt(i + 1) << 8 ^ str.charCodeAt(i + 2) << 16 ^ (ch4 & 0xff) << 24 ^ (ch4 & 0xff00) >> 8;\n    i += 4;\n    k = k * 0x2d51 + (k & 0xffff) * 0xcc9e0000 >>> 0;\n    k = k << 15 | k >>> 17;\n    k = k * 0x3593 + (k & 0xffff) * 0x1b870000 >>> 0;\n    h ^= k;\n    h = h << 13 | h >>> 19;\n    h = h * 5 + 0xe6546b64 >>> 0;\n  }\n\n  k = 0;\n\n  switch (rem) {\n    /* eslint-disable no-fallthrough */\n    case 3:\n      k ^= str.charCodeAt(len + 2) << 16;\n\n    case 2:\n      k ^= str.charCodeAt(len + 1) << 8;\n\n    case 1:\n      k ^= str.charCodeAt(len);\n      k = k * 0x2d51 + (k & 0xffff) * 0xcc9e0000 >>> 0;\n      k = k << 15 | k >>> 17;\n      k = k * 0x3593 + (k & 0xffff) * 0x1b870000 >>> 0;\n      h ^= k;\n  }\n\n  h ^= length;\n  h ^= h >>> 16;\n  h = h * 0xca6b + (h & 0xffff) * 0x85eb0000 >>> 0;\n  h ^= h >>> 13;\n  h = h * 0xae35 + (h & 0xffff) * 0xc2b20000 >>> 0;\n  h ^= h >>> 16;\n  h >>>= 0;\n\n  if (!h) {\n    return '0';\n  }\n\n  var s = '';\n\n  while (h) {\n    var d = h % 62;\n    s = BASE62[d] + s;\n    h = (h - d) / 62;\n  }\n\n  return s;\n}\n\nmodule.exports = murmurHash;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/node_modules/relay-compiler/lib/util/murmurHash.js"],"names":["BASE62","murmurHash","str","length","rem","len","h","i","k","ch4","charCodeAt","s","d","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n\n/**\n * Based on implementations by Gary Court and Austin Appleby, 2011, MIT.\n * @preserve-header\n */\n'use strict';\n\nvar BASE62 = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n/**\n * @param {string} key A UTF-16 or ASCII string\n * @return {string} a base62 murmur hash\n */\n\nfunction murmurHash(str) {\n  /* eslint-disable no-bitwise */\n  var length = str.length;\n  var rem = length & 3;\n  var len = length ^ rem;\n  var h = 0;\n  var i = 0;\n  var k;\n\n  while (i !== len) {\n    var ch4 = str.charCodeAt(i + 3);\n    k = str.charCodeAt(i) ^ str.charCodeAt(i + 1) << 8 ^ str.charCodeAt(i + 2) << 16 ^ (ch4 & 0xff) << 24 ^ (ch4 & 0xff00) >> 8;\n    i += 4;\n    k = k * 0x2d51 + (k & 0xffff) * 0xcc9e0000 >>> 0;\n    k = k << 15 | k >>> 17;\n    k = k * 0x3593 + (k & 0xffff) * 0x1b870000 >>> 0;\n    h ^= k;\n    h = h << 13 | h >>> 19;\n    h = h * 5 + 0xe6546b64 >>> 0;\n  }\n\n  k = 0;\n\n  switch (rem) {\n    /* eslint-disable no-fallthrough */\n    case 3:\n      k ^= str.charCodeAt(len + 2) << 16;\n\n    case 2:\n      k ^= str.charCodeAt(len + 1) << 8;\n\n    case 1:\n      k ^= str.charCodeAt(len);\n      k = k * 0x2d51 + (k & 0xffff) * 0xcc9e0000 >>> 0;\n      k = k << 15 | k >>> 17;\n      k = k * 0x3593 + (k & 0xffff) * 0x1b870000 >>> 0;\n      h ^= k;\n  }\n\n  h ^= length;\n  h ^= h >>> 16;\n  h = h * 0xca6b + (h & 0xffff) * 0x85eb0000 >>> 0;\n  h ^= h >>> 13;\n  h = h * 0xae35 + (h & 0xffff) * 0xc2b20000 >>> 0;\n  h ^= h >>> 16;\n  h >>>= 0;\n\n  if (!h) {\n    return '0';\n  }\n\n  var s = '';\n\n  while (h) {\n    var d = h % 62;\n    s = BASE62[d] + s;\n    h = (h - d) / 62;\n  }\n\n  return s;\n}\n\nmodule.exports = murmurHash;"]},"metadata":{},"sourceType":"script"}