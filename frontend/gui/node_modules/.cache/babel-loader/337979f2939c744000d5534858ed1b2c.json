{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Comments\\\\CustomComment.js\";\nimport React, { useState } from 'react';\nimport { Button, Comment, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { COMMENT_DELETE_MUTATION } from '../api/comment';\nimport CustomReply from '../Replys/CustomReply';\nconst DEFAULT_ICON = 'https://react.semantic-ui.com/images/avatar/small/matt.jpg';\n\nconst CustomComment = ({\n  id,\n  replys,\n  content,\n  posted,\n  username\n}) => {\n  const user = localStorage.getItem('user');\n  const [commentDelete] = useMutation(COMMENT_DELETE_MUTATION);\n  const [allowButton, setAllowButton] = useState(false);\n\n  const handleOnReply = () => {\n    console.log('test');\n  };\n\n  const handleOnDelete = () => {\n    commentDelete({\n      variables: {\n        id: id\n      }\n    });\n    window.location.reload(false);\n  };\n\n  const checkForm = () => {\n    if (commentRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Comment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n    src: DEFAULT_ICON,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Comment.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Author, {\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, posted)), /*#__PURE__*/React.createElement(Comment.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, content), /*#__PURE__*/React.createElement(Comment.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Action, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Reply\"), user === username ? /*#__PURE__*/React.createElement(Comment.Action, {\n    onClick: handleOnDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Delete\") : null)), /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    reply: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: commentRef,\n    className: \"post-create-content-container\",\n    placeholder: \"Enter something...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnReply,\n    className: \"comment-create-button\",\n    content: \"Add Reply\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnReply,\n    className: \"comment-create-button\",\n    content: \"Add Reply\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  })), replys ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, replys.map(({\n    id,\n    content,\n    posted,\n    user: {\n      username\n    }\n  }) => {\n    return /*#__PURE__*/React.createElement(CustomReply, {\n      key: id,\n      id: id,\n      content: content,\n      posted: posted,\n      username: username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    });\n  })) : null));\n};\n\nexport default CustomComment;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Comments/CustomComment.js"],"names":["React","useState","Button","Comment","Form","useMutation","COMMENT_DELETE_MUTATION","CustomReply","DEFAULT_ICON","CustomComment","id","replys","content","posted","username","user","localStorage","getItem","commentDelete","allowButton","setAllowButton","handleOnReply","console","log","handleOnDelete","variables","window","location","reload","checkForm","commentRef","current","value","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Comment, Form } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { COMMENT_DELETE_MUTATION } from '../api/comment'\r\nimport CustomReply from '../Replys/CustomReply'\r\n\r\nconst DEFAULT_ICON = 'https://react.semantic-ui.com/images/avatar/small/matt.jpg'\r\n\r\nconst CustomComment = ({ id, replys, content, posted, username }) => {\r\n    const user = localStorage.getItem('user')\r\n    const [ commentDelete ] = useMutation(COMMENT_DELETE_MUTATION)\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n\r\n\r\n    const handleOnReply = () => {\r\n        console.log('test')\r\n    }\r\n\r\n    const handleOnDelete = () => {\r\n        commentDelete({ variables: { id: id } })\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const checkForm = () => {\r\n        if (commentRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"comment-container\">\r\n            <Comment>\r\n                <Comment.Avatar src={DEFAULT_ICON} />\r\n                <Comment.Content>\r\n                    <Comment.Author as='a'>{username}</Comment.Author>\r\n                    <Comment.Metadata>\r\n                        <div>{posted}</div>\r\n                    </Comment.Metadata>\r\n                    <Comment.Text>{content}</Comment.Text>\r\n                    <Comment.Actions>\r\n                    <Comment.Action>Reply</Comment.Action>\r\n                    {(user === username) ? (\r\n                        <Comment.Action onClick={handleOnDelete}>Delete</Comment.Action>\r\n                    ) : null}\r\n                    </Comment.Actions>\r\n                </Comment.Content>\r\n                <Form onChange={checkForm} reply>\r\n                    <textarea ref={commentRef} className=\"post-create-content-container\" placeholder='Enter something...' />\r\n                    {(allowButton) ? (\r\n                        <Button onClick={handleOnReply} className=\"comment-create-button\" content='Add Reply' labelPosition='left' icon='edit' primary />\r\n                    ) : (\r\n                        <Button disabled onClick={handleOnReply} className=\"comment-create-button\" content='Add Reply' labelPosition='left' icon='edit' primary />\r\n                    )}\r\n                </Form>\r\n                {(replys) ? (\r\n                    <div>\r\n                        {(replys.map(({ id, content, posted, user: { username } }) => {\r\n                            return (\r\n                                <CustomReply \r\n                                    key={id}\r\n                                    id={id}\r\n                                    content={content}\r\n                                    posted={posted}\r\n                                    username={username}\r\n                                />\r\n                            )\r\n                        }))}\r\n                    </div>\r\n                ) : null}\r\n            </Comment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomComment\r\n"]},"metadata":{},"sourceType":"module"}