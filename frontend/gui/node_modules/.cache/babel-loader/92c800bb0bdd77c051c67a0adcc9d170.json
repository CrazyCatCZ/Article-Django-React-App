{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Profiles\\\\ProfileUpdateSection.js\";\nimport React, { useState, useRef } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { USER_UPDATE_MUTATION } from '../Api/user';\n\nconst ProfileUpdateSection = () => {\n  const user = localStorage.getItem('user');\n  const [allowButton, setAllowButton] = useState(false);\n  const [usernameValue, setUsernameValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const [profileUpdate] = useMutation(USER_UPDATE_MUTATION);\n  const usernameRef = useRef();\n  const emailRef = useRef();\n\n  const handleOnSubmit = () => {\n    const usernameValue = usernameRef.current.value;\n    const emailValue = emailRef.current.value;\n    profileUpdate({\n      variables: {\n        user: user,\n        newUser: usernameValue,\n        newEmail: emailValue,\n        file: profileImage\n      }\n    });\n  };\n\n  const checkForm = () => {\n    if (usernameRef.current.value && emailRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  const onUsernameValueChange = value => {\n    setUsernameValue(value);\n  };\n\n  const onEmailValueChange = value => {\n    setEmailValue(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-info-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Profile info\"), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => onUsernameValueChange(event.target.value),\n    value: usernameValue,\n    ref: usernameRef,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => onEmailValueChange(event.target.value),\n    value: emailValue,\n    ref: emailRef,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  })), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Update\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Update\")));\n};\n\nexport default ProfileUpdateSection;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Profiles/ProfileUpdateSection.js"],"names":["React","useState","useRef","Button","Form","useMutation","USER_UPDATE_MUTATION","ProfileUpdateSection","user","localStorage","getItem","allowButton","setAllowButton","usernameValue","setUsernameValue","emailValue","setEmailValue","profileUpdate","usernameRef","emailRef","handleOnSubmit","current","value","variables","newUser","newEmail","file","profileImage","checkForm","onUsernameValueChange","onEmailValueChange","event","target"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { Button, Form } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { USER_UPDATE_MUTATION } from '../Api/user'\r\n\r\nconst ProfileUpdateSection = () => {\r\n    const user = localStorage.getItem('user')\r\n\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    const [ usernameValue, setUsernameValue ] = useState('')\r\n    const [ emailValue, setEmailValue ] = useState('')\r\n\r\n    const [ profileUpdate ] = useMutation(USER_UPDATE_MUTATION)\r\n\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n\r\n    const handleOnSubmit = () => {\r\n        const usernameValue = usernameRef.current.value\r\n        const emailValue = emailRef.current.value\r\n\r\n        profileUpdate({ variables: { \r\n            user: user, newUser: usernameValue,\r\n            newEmail: emailValue, file: profileImage }\r\n        })\r\n    }\r\n    \r\n        \r\n    const checkForm = () => {\r\n        if (usernameRef.current.value && emailRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n    const onUsernameValueChange = (value) => {\r\n        setUsernameValue(value)\r\n    }\r\n \r\n    const onEmailValueChange = (value) => {\r\n        setEmailValue(value)\r\n    }\r\n    return (\r\n        <div className=\"form-group\">\r\n            <p className=\"profile-info-text\">Profile info</p>\r\n            <hr className=\"mb-4\" />\r\n            <Form onChange={checkForm}>\r\n                <Form.Field>\r\n                    <label>Username</label>\r\n                    <input onChange={event => onUsernameValueChange(event.target.value)} value={usernameValue} ref={usernameRef} placeholder='Username' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label>Email</label>\r\n                    <input onChange={event => onEmailValueChange(event.target.value)} value={emailValue} ref={emailRef} placeholder='Email' />\r\n                </Form.Field>\r\n                {(allowButton) ? (\r\n                    <Button onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Update</Button>\r\n                ) : (\r\n                    <Button disabled onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Update</Button>\r\n                    )}\r\n                {/*<Button className=\"ml-3\" color='red'>Change Password</Button>*/}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileUpdateSection\r\n"]},"metadata":{},"sourceType":"module"}