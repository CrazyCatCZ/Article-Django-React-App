{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Posts\\\\PostCreate.js\";\nimport React, { useState, useRef } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-dom';\nimport { POST_CREATE_MUTATION } from '../api/post';\nimport styles from './PostsStyle.module.css';\n\nconst PostCreate = () => {\n  const [allowButton, setAllowButton] = useState(false);\n  const titleRef = useRef();\n  const contentRef = useRef();\n  const history = useHistory();\n  const [createPost] = useMutation(POST_CREATE_MUTATION);\n\n  const handleOnSubmit = () => {\n    const user = localStorage.getItem('user');\n    const titleValue = titleRef.current.value;\n    const contentValue = contentRef.current.value;\n    createPost({\n      variables: {\n        title: titleValue,\n        content: contentValue,\n        user: user\n      }\n    });\n    history.push('/');\n  }; //check if title and content were filled\n\n\n  const checkForm = () => {\n    if (titleRef.current.value && contentRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.post_create_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: titleRef,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Content\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: contentRef,\n    className: styles.post_create_content_container,\n    placeholder: \"Enter something...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  })), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Create\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Create\")));\n};\n\nexport default PostCreate;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Posts/PostCreate.js"],"names":["React","useState","useRef","Button","Form","useMutation","useHistory","POST_CREATE_MUTATION","styles","PostCreate","allowButton","setAllowButton","titleRef","contentRef","history","createPost","handleOnSubmit","user","localStorage","getItem","titleValue","current","value","contentValue","variables","title","content","push","checkForm","post_create_container","post_create_content_container"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { Button, Form } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { POST_CREATE_MUTATION } from '../api/post'\r\n\r\nimport styles from './PostsStyle.module.css'\r\n\r\nconst PostCreate = () => {\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n\r\n    const titleRef = useRef()\r\n    const contentRef = useRef()\r\n\r\n    const history = useHistory()\r\n    const [ createPost ] = useMutation(POST_CREATE_MUTATION)\r\n    \r\n    const handleOnSubmit = () => {\r\n        const user = localStorage.getItem('user')\r\n        const titleValue = titleRef.current.value\r\n        const contentValue = contentRef.current.value\r\n        \r\n        createPost({ variables: { title: titleValue, content: contentValue, user: user }})\r\n        history.push('/')\r\n    }\r\n\r\n    //check if title and content were filled\r\n    const checkForm = () => {\r\n        if (titleRef.current.value && contentRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.post_create_container}>\r\n            <Form onChange={checkForm}>\r\n                <Form.Field>\r\n                    <label>Title</label>\r\n                    <input ref={titleRef} placeholder='Title' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label>Content</label>\r\n                    <textarea ref={contentRef} className={styles.post_create_content_container} placeholder='Enter something...' />\r\n                </Form.Field>\r\n                {(allowButton) ? (\r\n                    <Button onClick={handleOnSubmit} className=\"submit-button\" primary>Create</Button>\r\n                ) : (\r\n                    <Button disabled onClick={handleOnSubmit} className=\"submit-button\" primary>Create</Button>\r\n                ) }\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCreate\r\n"]},"metadata":{},"sourceType":"module"}