{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Comments\\\\Comments\\\\CustomComment.js\";\nimport React, { useState } from 'react';\nimport { Comment } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from 'react-router-dom';\nimport { COMMENT_DELETE_MUTATION } from '../../Api/comment';\nimport ReplyForm from '../../Replys/ReplyForm';\nimport ReplysMap from '../../Replys/ReplysMap';\nconst PATH_TO_PICTURES = 'Profiles/media/profile_pictures';\n\nconst CustomComment = ({\n  id,\n  replys,\n  content,\n  posted,\n  username,\n  image\n}) => {\n  const user = localStorage.getItem('user');\n  const [commentDelete] = useMutation(COMMENT_DELETE_MUTATION);\n  const [showReplyForm, setShowReplyForm] = useState(false); //If user click on reply -> show the reply form and reverse\n\n  const handleOnReply = () => {\n    setShowReplyForm(!showReplyForm);\n  };\n\n  const handleOnDelete = () => {\n    commentDelete({\n      variables: {\n        id: id\n      }\n    }); //reset site\n\n    window.location.reload(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Comment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n    src: require(`../../${PATH_TO_PICTURES}/small/${image.image}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Comment.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Author, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `profile/${username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, username)), /*#__PURE__*/React.createElement(Comment.Metadata, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, posted)), /*#__PURE__*/React.createElement(Comment.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, content), /*#__PURE__*/React.createElement(Comment.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Action, {\n    onClick: handleOnReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Reply\"), user === username ? /*#__PURE__*/React.createElement(Comment.Action, {\n    onClick: handleOnDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Delete\") : null)), /*#__PURE__*/React.createElement(ReplyForm, {\n    id: id,\n    showReplyForm: showReplyForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), replys ? /*#__PURE__*/React.createElement(ReplysMap, {\n    replys: replys,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }\n  }) : null));\n};\n\nexport default CustomComment;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Comments/Comments/CustomComment.js"],"names":["React","useState","Comment","useMutation","Link","COMMENT_DELETE_MUTATION","ReplyForm","ReplysMap","PATH_TO_PICTURES","CustomComment","id","replys","content","posted","username","image","user","localStorage","getItem","commentDelete","showReplyForm","setShowReplyForm","handleOnReply","handleOnDelete","variables","window","location","reload","require"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Comment } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { COMMENT_DELETE_MUTATION } from '../../Api/comment'\r\nimport ReplyForm from '../../Replys/ReplyForm'\r\nimport ReplysMap from '../../Replys/ReplysMap'\r\n\r\nconst PATH_TO_PICTURES = 'Profiles/media/profile_pictures'\r\n\r\nconst CustomComment = ({ id, replys, content, posted, username, image }) => {\r\n    const user = localStorage.getItem('user')\r\n    const [ commentDelete ] = useMutation(COMMENT_DELETE_MUTATION)\r\n    const [ showReplyForm, setShowReplyForm ] = useState(false)\r\n\r\n    //If user click on reply -> show the reply form and reverse\r\n    const handleOnReply = () => {\r\n        setShowReplyForm(!showReplyForm)\r\n    }\r\n\r\n    const handleOnDelete = () => {\r\n        commentDelete({ variables: { id: id } })\r\n\r\n        //reset site\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"comment-container\">\r\n            <Comment>\r\n                <Comment.Avatar src={require(`../../${PATH_TO_PICTURES}/small/${image.image}`)} />\r\n                <Comment.Content>\r\n                    <Comment.Author>\r\n                        <Link to={`profile/${username}`}>{username}</Link>\r\n                    </Comment.Author>\r\n                    <Comment.Metadata>\r\n                        <div>{posted}</div>\r\n                    </Comment.Metadata>\r\n                    <Comment.Text>{content}</Comment.Text>\r\n                    <Comment.Actions>\r\n                    <Comment.Action onClick={handleOnReply}>Reply</Comment.Action>\r\n                    {(user === username) ? (\r\n                        <Comment.Action onClick={handleOnDelete}>Delete</Comment.Action>\r\n                    ) : null}\r\n                    </Comment.Actions>\r\n                </Comment.Content>\r\n\r\n                {/*Reply form when reply button is clicked*/}\r\n                <ReplyForm id={id} showReplyForm={showReplyForm} />\r\n\r\n                {/*Mapping all replys of comment*/}\r\n                {(replys) ? (\r\n                   <ReplysMap replys={replys} /> \r\n                ) : null}\r\n            </Comment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomComment\r\n"]},"metadata":{},"sourceType":"module"}