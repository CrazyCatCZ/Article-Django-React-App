{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n/**\n * Partitions an array given a predicate. All elements satisfying the predicate\n * are part of the first returned array, and all elements that don't are in the\n * second.\n */\n\nfunction partitionArray(array, predicate) {\n  var first = [];\n  var second = [];\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n\n    if (predicate(item)) {\n      first.push(item);\n    } else {\n      second.push(item);\n    }\n  }\n\n  return [first, second];\n}\n\nmodule.exports = partitionArray;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/node_modules/relay-compiler/lib/util/partitionArray.js"],"names":["partitionArray","array","predicate","first","second","i","length","item","push","module","exports"],"mappings":"AAAA;;;;;;;;;AASA;AACA;AACA;;;;;;AAMA,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,SAA/B,EAA0C;AACxC,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,IAAI,GAAGN,KAAK,CAACI,CAAD,CAAhB;;AAEA,QAAIH,SAAS,CAACK,IAAD,CAAb,EAAqB;AACnBJ,MAAAA,KAAK,CAACK,IAAN,CAAWD,IAAX;AACD,KAFD,MAEO;AACLH,MAAAA,MAAM,CAACI,IAAP,CAAYD,IAAZ;AACD;AACF;;AAED,SAAO,CAACJ,KAAD,EAAQC,MAAR,CAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBV,cAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n/**\n * Partitions an array given a predicate. All elements satisfying the predicate\n * are part of the first returned array, and all elements that don't are in the\n * second.\n */\n\nfunction partitionArray(array, predicate) {\n  var first = [];\n  var second = [];\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n\n    if (predicate(item)) {\n      first.push(item);\n    } else {\n      second.push(item);\n    }\n  }\n\n  return [first, second];\n}\n\nmodule.exports = partitionArray;"]},"metadata":{},"sourceType":"script"}