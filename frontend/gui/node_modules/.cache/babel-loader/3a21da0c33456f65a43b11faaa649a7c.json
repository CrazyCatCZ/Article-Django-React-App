{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nconst apiClient = new ApolloClient({\n  uri: 'http://127.0.0.1:8000/api/'\n});\ngraphql(query, {\n  options: () => ({\n    fetchPolicy: 'network-only'\n  }),\n  alias: `${formName}FormQuery`\n}), ReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: apiClient,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 11\n  }\n})))), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/index.js"],"names":["React","ReactDOM","App","BrowserRouter","Router","ApolloClient","ApolloProvider","apiClient","uri","graphql","query","options","fetchPolicy","alias","formName","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,MAAMC,SAAS,GAAG,IAAIF,YAAJ,CAAiB;AACjCG,EAAAA,GAAG,EAAE;AAD4B,CAAjB,CAAlB;AAIAC,OAAO,CAACC,KAAD,EAAQ;AAAEC,EAAAA,OAAO,EAAE,OAAO;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAAP,CAAX;AAAoDC,EAAAA,KAAK,EAAG,GAAEC,QAAS;AAAvE,CAAR,CAAP,EAGAb,QAAQ,CAACc,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAER,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADJ,CADF,CADF,EAQES,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,CAHA","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\n\r\nconst apiClient = new ApolloClient({\r\n  uri: 'http://127.0.0.1:8000/api/',\r\n})\r\n\r\ngraphql(query, { options: () => ({ fetchPolicy: 'network-only' }), alias: `${formName}FormQuery` }),\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={apiClient}>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"]},"metadata":{},"sourceType":"module"}