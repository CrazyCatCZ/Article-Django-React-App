{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Posts\\\\PostDetail\\\\PostDetail.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Item } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useParams } from 'react-router-dom';\nimport { POST_FIND_MUTATION } from '../../Api/post';\nimport CommentsMap from '../../Comments/CommentsMap';\nimport CommentCreateForm from '../../Comments/CommentCreateForm';\nimport LikeButton from './LikeButton';\nimport EditDeleteButtons from './EditDeleteButtons';\nconst DEFAULT_IMAGE = 'https://miro.medium.com/max/550/1*TxgjUE2uJuiRUVVmE_kU6g.png';\n\nconst PostDetail = () => {\n  const {\n    id\n  } = useParams(); //set likes temporarily on frontend\n\n  const [likes, setLikes] = useState(0);\n  const [postFind, {\n    data: detailData\n  }] = useMutation(POST_FIND_MUTATION); //Fetch to set amount of likes to button\n\n  useEffect(() => {\n    if (detailData) {\n      setLikes(detailData.findPost.post.totalLikes);\n    }\n  }, [detailData]); //if id is number -> fetch post\n\n  useEffect(() => {\n    if (isNaN(id) === false) {\n      postFind({\n        variables: {\n          id: id\n        }\n      });\n    }\n  }, [id]);\n  useEffect(() => {\n    console.log(detailData);\n  }, [detailData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, detailData.findPost !== null || findPost !== undefined ? /*#__PURE__*/React.createElement(Item.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    className: \"post-detail-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Item.Image, {\n    size: \"small\",\n    src: DEFAULT_IMAGE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Item.Content, {\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Item.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, detailData.findPost.post.title), /*#__PURE__*/React.createElement(Item.Meta, {\n    className: \"post-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `profile/${detailData.findPost.post.user.username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, detailData.findPost.post.user.username)), /*#__PURE__*/React.createElement(Item.Meta, {\n    className: \"post-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, detailData.findPost.post.posted), /*#__PURE__*/React.createElement(Item.Description, {\n    className: \"post-textfield\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, detailData.findPost.post.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-detail-buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(LikeButton, {\n    id: id,\n    likes: likes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(EditDeleteButtons, {\n    id: id,\n    detailData: detailData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CommentsMap, {\n    detailData: detailData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(CommentCreateForm, {\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }))))) : null);\n};\n\nexport default PostDetail;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Posts/PostDetail/PostDetail.js"],"names":["React","useState","useEffect","useRef","Item","useMutation","useParams","POST_FIND_MUTATION","CommentsMap","CommentCreateForm","LikeButton","EditDeleteButtons","DEFAULT_IMAGE","PostDetail","id","likes","setLikes","postFind","data","detailData","findPost","post","totalLikes","isNaN","variables","console","log","undefined","title","user","username","posted","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Item } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { POST_FIND_MUTATION } from '../../Api/post'\r\n\r\nimport CommentsMap from '../../Comments/CommentsMap'\r\nimport CommentCreateForm from '../../Comments/CommentCreateForm'\r\nimport LikeButton from './LikeButton'\r\nimport EditDeleteButtons from './EditDeleteButtons'\r\n\r\nconst DEFAULT_IMAGE = 'https://miro.medium.com/max/550/1*TxgjUE2uJuiRUVVmE_kU6g.png'\r\n\r\nconst PostDetail = () => {\r\n    const { id } = useParams()\r\n    \r\n    //set likes temporarily on frontend\r\n    const [ likes, setLikes ] = useState(0)\r\n    \r\n    const [ postFind, { data: detailData } ] = useMutation(POST_FIND_MUTATION)\r\n\r\n\r\n    //Fetch to set amount of likes to button\r\n    useEffect(() => {\r\n        if (detailData) {\r\n            setLikes(detailData.findPost.post.totalLikes)\r\n        }\r\n    }, [detailData])\r\n\r\n    //if id is number -> fetch post\r\n    useEffect(() => {\r\n        if (isNaN(id) === false) {\r\n            postFind({ variables: { id: id } })\r\n        }\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        console.log(detailData)\r\n    }, [detailData])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {(detailData.findPost !== null || findPost !== undefined) ? (\r\n            <Item.Group>\r\n                <Item className=\"post-detail-item\">\r\n                    <Item.Image size='small' src={DEFAULT_IMAGE} />\r\n                    <Item.Content className=\"post-content\">\r\n                        <Item.Header>{detailData.findPost.post.title}</Item.Header>\r\n                        <Item.Meta className=\"post-user\">\r\n                            <a href={`profile/${detailData.findPost.post.user.username}`}>\r\n                                {detailData.findPost.post.user.username}\r\n                            </a>\r\n                        </Item.Meta>\r\n                        <Item.Meta className=\"post-user\">{detailData.findPost.post.posted}</Item.Meta>\r\n                        <Item.Description className=\"post-textfield\">{detailData.findPost.post.content}</Item.Description>\r\n\r\n                        {/*Includes like, edit and delete buttons*/}\r\n                        <div className=\"post-detail-buttons-container\">\r\n                            <LikeButton id={id} likes={likes} />\r\n                            <EditDeleteButtons id={id} detailData={detailData} />\r\n                        </div>\r\n                        \r\n                        <div className=\"comments-container\">\r\n                            {/*Map all comments from post*/}\r\n                            <CommentsMap detailData={detailData} />\r\n\r\n                            {/*Reply form for comments*/}\r\n                            <CommentCreateForm id={id} />\r\n                        </div>\r\n                    </Item.Content>\r\n                </Item>\r\n            </Item.Group>\r\n        ) : null} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostDetail\r\n"]},"metadata":{},"sourceType":"module"}