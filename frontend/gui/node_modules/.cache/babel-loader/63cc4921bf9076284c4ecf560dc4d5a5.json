{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Authentication\\\\Register.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { USER_REGISTER_MUTATION } from '../api/user'; //const authenticationList = ['username', 'email', 'password', 'passwordConfirm']\n\nconst Register = () => {\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const history = useHistory();\n  const [allowButton, setAllowButton] = useState(false);\n  const [register, {\n    data\n  }] = useMutation(USER_REGISTER_MUTATION);\n  useEffect(() => {\n    if (data) {\n      if (data.user.username) {\n        history.push('/login');\n      }\n    }\n  }, [data]);\n\n  const handleOnClick = () => {\n    const usernameValue = usernameRef.current.value;\n    const emailValue = emailRef.current.value;\n    const passwordValue = passwordRef.current.value;\n    const passwordConfirmValue = passwordConfirmRef.current.value;\n    registerU({\n      variables: {\n        user: usernameValue,\n        email: emailValue,\n        password1: passwordValue,\n        password2: passwordConfirmValue\n      }\n    });\n  };\n\n  const checkForm = () => {\n    if (usernameRef.current.value && emailRef.current.value && passwordRef.current.value && passwordConfirmRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: usernameRef,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: emailRef,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    ref: passwordRef,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    ref: passwordConfirmRef,\n    placeholder: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnClick,\n    className: \"register-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Register\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnClick,\n    className: \"register-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Register\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Authentication/Register.js"],"names":["React","useState","useRef","useEffect","useMutation","useHistory","Button","Form","Message","USER_REGISTER_MUTATION","Register","usernameRef","emailRef","passwordRef","passwordConfirmRef","history","allowButton","setAllowButton","register","data","user","username","push","handleOnClick","usernameValue","current","value","emailValue","passwordValue","passwordConfirmValue","registerU","variables","email","password1","password2","checkForm"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\n\r\nimport { USER_REGISTER_MUTATION } from '../api/user'\r\n\r\n//const authenticationList = ['username', 'email', 'password', 'passwordConfirm']\r\n\r\nconst Register = () => {\r\n  const usernameRef = useRef()\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  \r\n  const history = useHistory()\r\n  const [ allowButton, setAllowButton ] = useState(false)\r\n  const [ register, { data } ] = useMutation(USER_REGISTER_MUTATION);\r\n\r\n  useEffect(() => {\r\n  \r\n    if (data) {\r\n      if (data.user.username) {\r\n        history.push('/login')\r\n      }\r\n    }\r\n  }, [data])\r\n  \r\n  const handleOnClick = () => {\r\n    const usernameValue = usernameRef.current.value\r\n    const emailValue = emailRef.current.value\r\n    const passwordValue = passwordRef.current.value\r\n    const passwordConfirmValue = passwordConfirmRef.current.value\r\n\r\n    registerU({ variables: {\r\n      user: usernameValue, email: emailValue,\r\n      password1: passwordValue, password2: passwordConfirmValue\r\n    }})\r\n  }\r\n  \r\n  const checkForm = () => {\r\n    if (\r\n      usernameRef.current.value && emailRef.current.value && \r\n      passwordRef.current.value && passwordConfirmRef.current.value\r\n    ) {\r\n      setAllowButton(true)\r\n    }\r\n\r\n    else {\r\n      setAllowButton(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <Form onChange={checkForm}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input ref={usernameRef} placeholder='Username' />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input ref={emailRef} placeholder='Email' />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input type=\"password\" ref={passwordRef} placeholder='Password' />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Confirm Password</label>\r\n          <input type=\"password\" ref={passwordConfirmRef} placeholder='Confirm Password' />\r\n        </Form.Field>\r\n        {(allowButton) ? (\r\n          <Button onClick={handleOnClick} className=\"register-button\" type='button' primary>Register</Button>\r\n        ) : (\r\n          <Button disabled onClick={handleOnClick} className=\"register-button\" type='button' primary>Register</Button>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}