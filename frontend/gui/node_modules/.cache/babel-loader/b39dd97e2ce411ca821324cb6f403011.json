{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plech\\\\github\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Posts\\\\PostDetail.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Item, Button, Icon, Label } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { POST_DELETE_MUTATION, POST_FIND_MUTATION, POST_LIKE_MUTATION } from '../post_query';\nconst DEFAULT_IMAGE = 'https://miro.medium.com/max/550/1*TxgjUE2uJuiRUVVmE_kU6g.png';\n\nconst PostDetail = () => {\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const user = localStorage.getItem('user');\n  const [likes, setLikes] = useState(0);\n  const [postDelete] = useMutation(POST_DELETE_MUTATION);\n  const [postFind, {\n    data: detailData\n  }] = useMutation(POST_FIND_MUTATION);\n  const [postLike] = useMutation(POST_LIKE_MUTATION);\n  useEffect(() => {\n    if (detailData) {\n      console.log(detailData.findPost.post);\n      console.log(detailData.findPost.post.totaLikes);\n      setLikes(detailData.findPost.post.totaLikes);\n    }\n  }, [detailData]);\n  useEffect(() => {\n    console.log(detailData);\n    postFind({\n      variables: {\n        id: id\n      }\n    });\n  }, [id]);\n\n  const handleOnDelete = () => {\n    postDelete({\n      variables: {\n        id: id\n      }\n    });\n    history.push('/');\n  };\n\n  const handleOnEdit = () => {\n    history.push(`editPost/${id}`);\n  };\n\n  const handleOnLike = () => {\n    postLike({\n      variables: {\n        id: id,\n        user: user\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, detailData ? /*#__PURE__*/React.createElement(Item.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    className: \"post-detail-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Item.Image, {\n    size: \"small\",\n    src: DEFAULT_IMAGE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Item.Content, {\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Item.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, detailData.findPost.post.title), /*#__PURE__*/React.createElement(Item.Meta, {\n    className: \"post-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"User: \", detailData.findPost.post.user.username), /*#__PURE__*/React.createElement(Item.Description, {\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, detailData.findPost.post.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-detail-buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    as: \"div\",\n    labelPosition: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnLike,\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 41\n    }\n  }), \"Like\"), /*#__PURE__*/React.createElement(Label, {\n    as: \"a\",\n    basic: true,\n    color: \"red\",\n    pointing: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }, likes)), user === detailData.findPost.post.user.username ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnEdit,\n    className: \"post-detail-edit-button\",\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 41\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnDelete,\n    className: \"post-detail-delete-button\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }\n  }, \"Delete\")) : null)))) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Loading...\"));\n};\n\nexport default PostDetail;","map":{"version":3,"sources":["C:/Users/plech/github/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Posts/PostDetail.js"],"names":["React","useState","useEffect","Item","Button","Icon","Label","useMutation","useHistory","useParams","POST_DELETE_MUTATION","POST_FIND_MUTATION","POST_LIKE_MUTATION","DEFAULT_IMAGE","PostDetail","id","history","user","localStorage","getItem","likes","setLikes","postDelete","postFind","data","detailData","postLike","console","log","findPost","post","totaLikes","variables","handleOnDelete","push","handleOnEdit","handleOnLike","title","username","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Item, Button, Icon, Label } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport { POST_DELETE_MUTATION, POST_FIND_MUTATION, POST_LIKE_MUTATION } from '../post_query'\r\n\r\nconst DEFAULT_IMAGE = 'https://miro.medium.com/max/550/1*TxgjUE2uJuiRUVVmE_kU6g.png'\r\n\r\nconst PostDetail = () => {\r\n    const { id } = useParams()\r\n    const history = useHistory()\r\n    const user = localStorage.getItem('user')\r\n    const [ likes, setLikes ] = useState(0)\r\n\r\n    const [ postDelete ] = useMutation(POST_DELETE_MUTATION)\r\n    const [ postFind, { data: detailData } ] = useMutation(POST_FIND_MUTATION)\r\n    const [ postLike ] = useMutation(POST_LIKE_MUTATION)\r\n    \r\n    useEffect(() => {\r\n        if (detailData) {\r\n            console.log(detailData.findPost.post)\r\n            console.log(detailData.findPost.post.totaLikes)\r\n            setLikes(detailData.findPost.post.totaLikes)\r\n        }\r\n    }, [detailData])\r\n\r\n    useEffect(() => {\r\n        console.log(detailData)\r\n        postFind({ variables: { id: id } })\r\n    }, [id])\r\n\r\n    const handleOnDelete = () => {\r\n        postDelete({ variables: { id: id } })\r\n        history.push('/')\r\n    }\r\n\r\n    const handleOnEdit = () => {\r\n        history.push(`editPost/${id}`)\r\n    }\r\n\r\n    const handleOnLike = () => {\r\n        postLike({ variables: { id: id, user: user } })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {(detailData) ? (\r\n            <Item.Group>\r\n                <Item className=\"post-detail-item\">\r\n                    <Item.Image size='small' src={DEFAULT_IMAGE} />\r\n\r\n                    <Item.Content className=\"post-content\">\r\n                        <Item.Header>{detailData.findPost.post.title}</Item.Header>\r\n                        <Item.Meta className=\"post-user\">User: {detailData.findPost.post.user.username}</Item.Meta>\r\n                        <Item.Description className=\"post-content\">{detailData.findPost.post.content}</Item.Description>\r\n                            <div className=\"post-detail-buttons-container\">\r\n                                <Button as='div' labelPosition='right'>\r\n                                    <Button onClick={handleOnLike} color='red'>\r\n                                        <Icon name='heart' />\r\n                                        Like\r\n                                    </Button>\r\n                                    <Label as='a' basic color='red' pointing='left'>\r\n                                        {likes}\r\n                                    </Label>\r\n                                </Button>                \r\n                                {(user === detailData.findPost.post.user.username) ? (\r\n                                    <>\r\n                                        <Button onClick={handleOnEdit} className=\"post-detail-edit-button\" color=\"teal\">Edit</Button>\r\n                                        <Button onClick={handleOnDelete} className=\"post-detail-delete-button\" color=\"red\">Delete</Button>\r\n                                    </>\r\n                            ) : null }\r\n                            </div>\r\n                    </Item.Content>\r\n                </Item>\r\n            </Item.Group>\r\n        ) : (\r\n            <h1>Loading...</h1>\r\n        ) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostDetail\r\n"]},"metadata":{},"sourceType":"module"}