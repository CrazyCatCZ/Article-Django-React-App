{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Profiles\\\\Profile.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { USER_LIST_QUERY, USER_PROFILE_INFO_MUTATION, USER_UPDATE_MUTATION } from '../api/user';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport UploadFile from './UploadFile';\n\nconst Profile = () => {\n  const {\n    user\n  } = useParams();\n  const currentUser = localStorage.getItem('user');\n  const [profileInfo, {\n    data: profileData\n  }] = useMutation(USER_PROFILE_INFO_MUTATION);\n  const [profileUpdate, {\n    data: updateData\n  }] = useMutation(USER_UPDATE_MUTATION);\n  const {\n    data: allUsers\n  } = useQuery(USER_LIST_QUERY);\n  const [imageName, setImageName] = useState();\n  const [errorMessages, setErrorMessages] = useState();\n  const [allowButton, setAllowButton] = useState(false);\n  const [usernameValue, setUsernameValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const history = useHistory();\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const [profileImage, setProfileImage] = useState({\n    path: 'none'\n  });\n  useEffect(() => {\n    const getProfileInfo = () => {\n      if (user) {\n        profileInfo({\n          variables: {\n            user: user\n          }\n        });\n      }\n    };\n\n    getProfileInfo();\n  }, [user]);\n  useEffect(() => {\n    if (profileData) {\n      let imagePath = profileData.profileInfo.profile.image;\n\n      if (imagePath !== 'default.jpg') {\n        imagePath = imagePath.slice(17);\n      }\n\n      setUsernameValue(profileData.profileInfo.profile.user.username);\n      setEmailValue(profileData.profileInfo.profile.user.email);\n      setImageName(imagePath);\n    }\n  }, [profileData]);\n  useEffect(() => {\n    console.log(updateData);\n  }, [updateData]);\n\n  const handleOnSubmit = () => {\n    const usernameValue = usernameRef.current.value;\n    const emailValue = emailRef.current.value;\n    profileUpdate({\n      variables: {\n        user: user,\n        newUser: usernameValue,\n        newEmail: emailValue,\n        file: profileImage\n      }\n    });\n    /*\r\n    localStorage.removeItem('user')\r\n    localStorage.removeItem('token')\r\n    history.push('/login')\r\n    window.location.reload(false)\r\n    */\n  };\n\n  const checkForm = () => {\n    if (usernameRef.current.value && emailRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  const onUsernameValueChange = value => {\n    setUsernameValue(value);\n  };\n\n  const onEmailValueChange = value => {\n    setEmailValue(value);\n  };\n\n  const onImageDrop = userImage => {\n    setProfileImage(userImage);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, profileData && imageName ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, errorMessages ? /*#__PURE__*/React.createElement(Message, {\n    className: \"message-container\",\n    error: true,\n    header: \"There was some errors with your submission\",\n    list: errorMessages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"media profile-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"rounded-circle profile-picture\",\n    src: require(`./media/${profileData.profileInfo.profile.image}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-body ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"account-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.username), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.email))), user === currentUser ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-info-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, \"Profile info\"), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 37\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => onUsernameValueChange(event.target.value),\n    value: usernameValue,\n    ref: usernameRef,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => onEmailValueChange(event.target.value),\n    value: emailValue,\n    ref: emailRef,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, \"Current: \", imageName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-image-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(UploadFile, {\n    onImageDrop: onImageDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  })), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 37\n    }\n  }, \"Update\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, \"Update\"))) : null) : null);\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Profiles/Profile.js"],"names":["React","useState","useEffect","useRef","Button","Form","Message","useHistory","useParams","USER_LIST_QUERY","USER_PROFILE_INFO_MUTATION","USER_UPDATE_MUTATION","useMutation","useQuery","UploadFile","Profile","user","currentUser","localStorage","getItem","profileInfo","data","profileData","profileUpdate","updateData","allUsers","imageName","setImageName","errorMessages","setErrorMessages","allowButton","setAllowButton","usernameValue","setUsernameValue","emailValue","setEmailValue","history","usernameRef","emailRef","profileImage","setProfileImage","path","getProfileInfo","variables","imagePath","profile","image","slice","username","email","console","log","handleOnSubmit","current","value","newUser","newEmail","file","checkForm","onUsernameValueChange","onEmailValueChange","onImageDrop","userImage","require","event","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { USER_LIST_QUERY, USER_PROFILE_INFO_MUTATION, USER_UPDATE_MUTATION } from '../api/user'\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\n\r\nimport UploadFile from './UploadFile'\r\n\r\n\r\nconst Profile = () => {\r\n    const { user } = useParams()\r\n    const currentUser = localStorage.getItem('user')\r\n\r\n    const [ profileInfo, { data: profileData } ] = useMutation(USER_PROFILE_INFO_MUTATION)\r\n    const [ profileUpdate, { data: updateData } ] = useMutation(USER_UPDATE_MUTATION)\r\n    const { data: allUsers } = useQuery(USER_LIST_QUERY)\r\n\r\n    const [ imageName, setImageName ] = useState()\r\n    const [ errorMessages, setErrorMessages ] = useState()\r\n\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    const [ usernameValue, setUsernameValue ] = useState('')\r\n    const [ emailValue, setEmailValue ] = useState('')\r\n    const history = useHistory()\r\n\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const [ profileImage, setProfileImage ] = useState({path: 'none'})\r\n\r\n    useEffect(() => {\r\n        const getProfileInfo = () => {\r\n            if (user) {\r\n                profileInfo({ variables: { user: user } })\r\n            }\r\n        }\r\n        getProfileInfo()\r\n    }, [user])\r\n    \r\n    useEffect(() => {\r\n        if (profileData) {\r\n            let imagePath = profileData.profileInfo.profile.image\r\n            \r\n            if (imagePath !== 'default.jpg') {\r\n                imagePath = imagePath.slice(17)\r\n            }\r\n\r\n            setUsernameValue(profileData.profileInfo.profile.user.username)\r\n            setEmailValue(profileData.profileInfo.profile.user.email)\r\n            setImageName(imagePath)\r\n        }\r\n    }, [profileData])\r\n\r\n    useEffect(() => {\r\n        console.log(updateData)\r\n    }, [updateData])\r\n\r\n    const handleOnSubmit = () => {\r\n        const usernameValue = usernameRef.current.value\r\n        const emailValue = emailRef.current.value\r\n\r\n        profileUpdate({ variables: { \r\n            user: user, newUser: usernameValue,\r\n            newEmail: emailValue, file: profileImage }\r\n        })\r\n\r\n        /*\r\n        localStorage.removeItem('user')\r\n        localStorage.removeItem('token')\r\n        history.push('/login')\r\n        window.location.reload(false)\r\n        */\r\n    }\r\n    \r\n        \r\n\r\n    const checkForm = () => {\r\n        if (usernameRef.current.value && emailRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n    const onUsernameValueChange = (value) => {\r\n        setUsernameValue(value)\r\n    }\r\n \r\n    const onEmailValueChange = (value) => {\r\n        setEmailValue(value)\r\n    }   \r\n\r\n    const onImageDrop = (userImage) => {\r\n        setProfileImage(userImage)\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div class=\"profile-container\">\r\n            {(profileData && imageName) ?(\r\n                <div>\r\n                    {(errorMessages) ? (\r\n                        <Message\r\n                            className=\"message-container\"\r\n                            error\r\n                            header='There was some errors with your submission'\r\n                            list={errorMessages}\r\n                        />\r\n                    ) : null}\r\n                    <div class=\"media profile-media\">\r\n                        <img className=\"rounded-circle profile-picture\" src={require(`./media/${profileData.profileInfo.profile.image}`)} />\r\n                        <div className=\"profile-body ml-5\">\r\n                            <h2 className=\"account-heading\">{profileData.profileInfo.profile.user.username}</h2>\r\n                            <p className=\"text-secondary\">{profileData.profileInfo.profile.user.email}</p>\r\n                        </div>\r\n                    </div>\r\n                    {(user === currentUser) ? (\r\n                        <div className=\"form-group\">\r\n                            <p className=\"profile-info-text\">Profile info</p>\r\n                            <hr className=\"mb-4\" />\r\n                            <Form onChange={checkForm}>\r\n                                <Form.Field>\r\n                                    <label>Username</label>\r\n                                    <input onChange={event => onUsernameValueChange(event.target.value)} value={usernameValue} ref={usernameRef} placeholder='Username' />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <label>Email</label>\r\n                                    <input onChange={event => onEmailValueChange(event.target.value)} value={emailValue} ref={emailRef} placeholder='Email' />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <label>Image</label>\r\n                                    <p>Current: {imageName}</p>   \r\n                                </Form.Field>\r\n                                <div className=\"profile-image-field\">\r\n                                    <UploadFile onImageDrop={onImageDrop} />\r\n                                </div>\r\n                                {(allowButton) ? (\r\n                                    <Button onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Update</Button>\r\n                                ) : (\r\n                                    <Button disabled onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Update</Button>\r\n                                    )}\r\n                                {/*<Button className=\"ml-3\" color='red'>Change Password</Button>*/}\r\n                            </Form>\r\n                        </div>\r\n                    ) : null }\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}