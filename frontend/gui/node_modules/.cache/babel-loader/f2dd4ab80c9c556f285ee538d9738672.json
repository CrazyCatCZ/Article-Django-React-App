{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Replys\\\\CustomReply.js\";\nimport React, { useRef, useState } from 'react';\nimport { Comment } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\n\nconst CustomReply = ({\n  id,\n  content,\n  posted,\n  username\n}) => {\n  const user = localStorage.getItem('user');\n  const commentRef = useRef(); //const [ replyDelete ] = useMutation(REPLY_DELETE_MUTATION)\n\n  const [allowButton, setAllowButton] = useState(false);\n\n  const handleOnReply = () => {\n    console.log('test');\n  };\n\n  const handleOnDelete = () => {\n    console.log('c'); //commentDelete({ variables: { id: id } })\n    //window.location.reload(false);\n  };\n\n  const checkForm = () => {\n    if (commentRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Comment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n    src: \"/images/avatar/small/jenny.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Comment.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Author, {\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, posted)), /*#__PURE__*/React.createElement(Comment.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, content), /*#__PURE__*/React.createElement(Comment.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Action, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, \"Reply\"), user === username ? /*#__PURE__*/React.createElement(Comment.Action, {\n    onClick: handleOnDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, \"Delete\") : null)))));\n};\n\nexport default CustomReply;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Replys/CustomReply.js"],"names":["React","useRef","useState","Comment","useMutation","CustomReply","id","content","posted","username","user","localStorage","getItem","commentRef","allowButton","setAllowButton","handleOnReply","console","log","handleOnDelete","checkForm","current","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,OAAN;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA;AAAvB,CAAD,KAAuC;AACvD,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,QAAMC,UAAU,GAAGZ,MAAM,EAAzB,CAFuD,CAGvD;;AAEA,QAAM,CAAEa,WAAF,EAAeC,cAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMc,aAAa,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EADyB,CAEzB;AACA;AACH,GAJD;;AAMA,QAAME,SAAS,GAAG,MAAM;AACpB,QAAIP,UAAU,CAACQ,OAAX,CAAmBC,KAAvB,EAA8B;AAC1BP,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAIK;AACDA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GARD;;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD,CAAS,MAAT;AAAgB,IAAA,GAAG,EAAC,gCAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD,CAAS,MAAT;AAAgB,IAAA,EAAE,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBN,QAAxB,CADJ,eAEI,oBAAC,OAAD,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,MAAN,CADJ,CAFJ,eAKQ,oBAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeD,OAAf,CALR,eAMI,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEMG,IAAI,KAAKD,QAAV,gBACG,oBAAC,OAAD,CAAS,MAAT;AAAgB,IAAA,OAAO,EAAEU,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAEG,IAJR,CANJ,CAFJ,CADJ,CADJ,CADJ;AAsBH,CAjDD;;AAmDA,eAAed,WAAf","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { Comment } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nconst CustomReply = ({ id, content, posted, username }) => {\r\n    const user = localStorage.getItem('user')\r\n    const commentRef = useRef()\r\n    //const [ replyDelete ] = useMutation(REPLY_DELETE_MUTATION)\r\n\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n\r\n    const handleOnReply = () => {\r\n        console.log('test')\r\n    }\r\n\r\n    const handleOnDelete = () => {\r\n        console.log('c')\r\n        //commentDelete({ variables: { id: id } })\r\n        //window.location.reload(false);\r\n    }\r\n\r\n    const checkForm = () => {\r\n        if (commentRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Comment.Group>\r\n                <Comment>\r\n                    <Comment.Avatar src='/images/avatar/small/jenny.jpg' />\r\n                    <Comment.Content>\r\n                        <Comment.Author as='a'>{username}</Comment.Author>\r\n                        <Comment.Metadata>\r\n                            <div>{posted}</div>\r\n                        </Comment.Metadata>\r\n                            <Comment.Text>{content}</Comment.Text>\r\n                        <Comment.Actions>\r\n                            <Comment.Action>Reply</Comment.Action>\r\n                            {(user === username) ? (\r\n                                <Comment.Action onClick={handleOnDelete}>Delete</Comment.Action>\r\n                            ) : null}\r\n                        </Comment.Actions>\r\n                    </Comment.Content>\r\n                </Comment>\r\n            </Comment.Group>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomReply\r\n"]},"metadata":{},"sourceType":"module"}