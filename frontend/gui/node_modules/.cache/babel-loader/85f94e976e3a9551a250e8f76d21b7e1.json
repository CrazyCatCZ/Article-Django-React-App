{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plech\\\\github\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Authentication\\\\Register.js\";\nimport React, { useState, useRef } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form } from 'semantic-ui-react';\nimport { USER_REGISTER_MUTATION } from '../query'; //const authenticationList = ['username', 'email', 'password', 'passwordConfirm']\n\nconst Register = () => {\n  const username = useRef();\n  const email = useRef();\n  const password = useRef();\n  const passwordConfirm = useRef();\n  const [message, setMessage] = useState();\n  const history = useHistory();\n  const [registerUser, {\n    data\n  }] = useMutation(USER_REGISTER_MUTATION);\n\n  const handleOnSubmit = () => {\n    const usernameValue = username.current.value;\n    const emailValue = email.current.value;\n    const passwordValue = password.current.value;\n    const passwordConfirmValue = passwordConfirm.current.value;\n    registerUser({\n      variables: {\n        email: emailValue,\n        username: usernameValue,\n        password1: passwordValue,\n        password2: passwordConfirmValue\n      }\n    });\n\n    if (data) {\n      const message = data.tokenAuth.success;\n\n      if (message === false) {\n        setMessage({\n          type: 'error',\n          text: data.tokenAuth.errors.nonFieldErrors[0].message\n        });\n      } else {\n        history.push('/');\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, message.type ? /*#__PURE__*/React.createElement(Message, {\n      className: \"message-container\",\n      error: true,\n      header: message.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }) : null, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: username,\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: email,\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      ref: password,\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      ref: passwordConfirm,\n      placeholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleOnSubmit,\n      className: \"register-submit-button\",\n      type: \"submit\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Register\")));\n  };\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/plech/github/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Authentication/Register.js"],"names":["React","useState","useRef","useMutation","useHistory","Button","Form","USER_REGISTER_MUTATION","Register","username","email","password","passwordConfirm","message","setMessage","history","registerUser","data","handleOnSubmit","usernameValue","current","value","emailValue","passwordValue","passwordConfirmValue","variables","password1","password2","tokenAuth","success","type","text","errors","nonFieldErrors","push"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button, Form } from 'semantic-ui-react'\r\n\r\nimport { USER_REGISTER_MUTATION } from '../query'\r\n\r\n//const authenticationList = ['username', 'email', 'password', 'passwordConfirm']\r\n\r\nconst Register = () => {\r\n  const username = useRef()\r\n  const email = useRef()\r\n  const password = useRef()\r\n  const passwordConfirm = useRef()\r\n  \r\n  const [ message, setMessage ] = useState()\r\n  const history = useHistory()\r\n  const [ registerUser, { data } ] = useMutation(USER_REGISTER_MUTATION);\r\n\r\n  const handleOnSubmit = () => {\r\n    const usernameValue = username.current.value\r\n    const emailValue = email.current.value\r\n    const passwordValue = password.current.value\r\n    const passwordConfirmValue = passwordConfirm.current.value\r\n\r\n    registerUser({ variables: {\r\n      email: emailValue, username: usernameValue,\r\n      password1: passwordValue, password2: passwordConfirmValue\r\n    }})\r\n\r\n    if (data) {\r\n      const message = data.tokenAuth.success\r\n\r\n      if (message === false) {\r\n        setMessage({\r\n          type: 'error',\r\n            text: data.tokenAuth.errors.nonFieldErrors[0].message\r\n        })\r\n      }\r\n\r\n      else {\r\n        history.push('/')\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"register-container\">\r\n        {(message.type) ? (\r\n          <Message\r\n            className=\"message-container\"\r\n            error\r\n            header={message.text}\r\n          />\r\n        ) : null }\r\n        <Form>\r\n          <Form.Field>\r\n            <label>Username</label>\r\n            <input ref={username} placeholder='Username' />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Email</label>\r\n            <input ref={email} placeholder='Email' />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Password</label>\r\n            <input type=\"password\" ref={password} placeholder='Password' />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Confirm Password</label>\r\n            <input type=\"password\" ref={passwordConfirm} placeholder='Confirm Password' />\r\n          </Form.Field>\r\n          <Button onClick={handleOnSubmit} className=\"register-submit-button\" type='submit' primary>Register</Button>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}