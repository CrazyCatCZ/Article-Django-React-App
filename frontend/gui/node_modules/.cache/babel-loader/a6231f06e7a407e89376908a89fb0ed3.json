{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plech\\\\github\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Authentication\\\\Login.js\";\nimport React, { useState, useRef } from 'react';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { USER_LOGIN_MUTATION } from '../query';\n\nconst Login = () => {\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n  const [loginUser, {\n    data\n  }] = useMutation(USER_LOGIN_MUTATION);\n  const usernameRef = useRef();\n  const passwordRef = useRef();\n\n  const handleOnSubmit = () => {\n    const usernameValue = usernameRef.current.value;\n    const passwordValue = passwordRef.current.value;\n    loginUser({\n      variables: {\n        username: usernameValue,\n        password: passwordValue\n      }\n    });\n    console.log(data, message);\n\n    if (data) {\n      const message = data.tokenAuth.success;\n      console.log(message);\n\n      if (message === 'false') {\n        setMessage({\n          type: 'error',\n          text: data.errors.nonFieldErrors[0].message\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, message.type ? /*#__PURE__*/React.createElement(Message, {\n    error: true,\n    header: \"There was some errors with your submission\",\n    list: ['You must include both a upper and lower case letters in your password.', 'You need to select your home country.'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }) : null, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: usernameRef,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    ref: passwordRef,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"login-submit-button\",\n    type: \"submit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/plech/github/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Authentication/Login.js"],"names":["React","useState","useRef","Button","Form","Message","useMutation","USER_LOGIN_MUTATION","Login","message","setMessage","type","text","loginUser","data","usernameRef","passwordRef","handleOnSubmit","usernameValue","current","value","passwordValue","variables","username","password","console","log","tokenAuth","success","errors","nonFieldErrors"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { USER_LOGIN_MUTATION } from '../query'\r\n\r\nconst Login = () => {\r\n    const [ message, setMessage ] = useState({type: '', text: ''}) \r\n    const [ loginUser, { data } ] = useMutation(USER_LOGIN_MUTATION)\r\n\r\n    const usernameRef = useRef()\r\n    const passwordRef = useRef()\r\n\r\n    const handleOnSubmit = () => {\r\n        const usernameValue = usernameRef.current.value\r\n        const passwordValue = passwordRef.current.value\r\n\r\n        loginUser({ variables: {\r\n            username: usernameValue, password: passwordValue,\r\n        }}) \r\n\r\n        console.log(data, message)\r\n\r\n        if (data) {\r\n            const message = data.tokenAuth.success\r\n            console.log(message)\r\n            \r\n            if (message === 'false') {\r\n                setMessage({\r\n                    type: 'error',\r\n                    text: data.errors.nonFieldErrors[0].message\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            {(message.type) ? (\r\n                <Message\r\n                    error\r\n                    header='There was some errors with your submission'\r\n                    list={[\r\n                    'You must include both a upper and lower case letters in your password.',\r\n                    'You need to select your home country.',\r\n                    ]}\r\n                />\r\n            ) : null }\r\n            <Form>\r\n                <Form.Field>\r\n                    <label>Username</label>\r\n                    <input ref={usernameRef} placeholder='Username' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ref={passwordRef} placeholder='Password' />\r\n                </Form.Field>\r\n                <Button onClick={handleOnSubmit} className=\"login-submit-button\" type='submit' primary>Login</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}