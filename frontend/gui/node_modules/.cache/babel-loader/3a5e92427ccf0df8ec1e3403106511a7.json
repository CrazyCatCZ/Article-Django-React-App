{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Authentication\\\\Login.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory, Link } from 'react-router-dom';\nimport { USER_LOGIN_MUTATION, USER_PROFILE_INFO_MUTATION } from '../Api/user';\n\nconst Login = () => {\n  const history = useHistory();\n  const [failedToLogin, setFailedToLogin] = useState('');\n  const [allowButton, setAllowButton] = useState(false);\n  const [loginUser, {\n    data\n  }] = useMutation(USER_LOGIN_MUTATION);\n  const [checkUserProfile] = useMutation(USER_LOGIN_MUTATION);\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState(''); //if login wasn't successful\n\n  useEffect(() => {\n    if (data) {\n      if (data.tokenAuth.success !== true) {\n        setFailedToLogin(true);\n      }\n    }\n  }, [data]); //if login was successful\n\n  useEffect(() => {\n    if (data) {\n      if (data.tokenAuth.success === true) {\n        const token = data.tokenAuth.token; //if user doesnt have profile -> create new one\n\n        checkUserProfile({\n          variables: {\n            user: usernameInput\n          }\n        });\n        localStorage.setItem('user', usernameInput);\n        localStorage.setItem('token', token);\n        window.location.reload(false);\n        history.push('/');\n      }\n    }\n  });\n\n  const handleOnSubmit = event => {\n    console.log('test'); //if (allowButton || allowButton &&\n\n    loginUser({\n      variables: {\n        username: usernameInput,\n        password: passwordInput\n      }\n    });\n  }; //Check if username and password was filled\n\n\n  useEffect(() => {\n    if (usernameInput !== '' && passwordInput !== '') {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  }, [usernameInput, passwordInput]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, failedToLogin !== false && failedToLogin !== '' ? /*#__PURE__*/React.createElement(Message, {\n    className: \"message-container\",\n    error: true,\n    header: \"Please, enter valid credentials\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }) : null, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setUsernameInput(event.target.value),\n    value: usernameInput,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => setPasswordInput(event.target.value),\n    value: passwordInput,\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Need an an account? \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/register\",\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 67\n    }\n  }, \"Sign up\"))), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    onKeyPress: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Login\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Login\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Authentication/Login.js"],"names":["React","useState","useRef","useEffect","Button","Form","Message","useMutation","useHistory","Link","USER_LOGIN_MUTATION","USER_PROFILE_INFO_MUTATION","Login","history","failedToLogin","setFailedToLogin","allowButton","setAllowButton","loginUser","data","checkUserProfile","usernameInput","setUsernameInput","passwordInput","setPasswordInput","tokenAuth","success","token","variables","user","localStorage","setItem","window","location","reload","push","handleOnSubmit","event","console","log","username","password","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory, Link } from 'react-router-dom'\r\n\r\nimport { USER_LOGIN_MUTATION, USER_PROFILE_INFO_MUTATION } from '../Api/user'\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n\r\n    const [ failedToLogin, setFailedToLogin ] = useState('') \r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    \r\n    const [ loginUser, { data } ] = useMutation(USER_LOGIN_MUTATION)\r\n    const [ checkUserProfile ] = useMutation(USER_LOGIN_MUTATION)\r\n\r\n    const [ usernameInput, setUsernameInput ] = useState('')\r\n    const [ passwordInput, setPasswordInput ] = useState('')\r\n    \r\n    //if login wasn't successful\r\n    useEffect(() => {\r\n        if (data) {\r\n            if (data.tokenAuth.success !== true) {\r\n                setFailedToLogin(true)\r\n            }\r\n        }\r\n    }, [data]) \r\n    \r\n    //if login was successful\r\n    useEffect(() => {\r\n        if (data) {\r\n            if (data.tokenAuth.success === true) {\r\n                const token = data.tokenAuth.token\r\n\r\n                //if user doesnt have profile -> create new one\r\n                checkUserProfile({ variables: { user: usernameInput } })\r\n        \r\n                localStorage.setItem('user', usernameInput)\r\n                localStorage.setItem('token', token)\r\n                window.location.reload(false);\r\n                history.push('/')\r\n            }\r\n        }\r\n    })\r\n    \r\n    const handleOnSubmit = (event) => {\r\n        console.log('test')\r\n        //if (allowButton || allowButton &&\r\n        loginUser({ variables: {\r\n            username: usernameInput, password: passwordInput\r\n        }})\r\n    }\r\n    \r\n    //Check if username and password was filled\r\n    useEffect(() => {\r\n        if (usernameInput !== '' && passwordInput !== '') {\r\n            setAllowButton(true)\r\n        }\r\n    \r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }, [usernameInput, passwordInput])\r\n\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            {(failedToLogin !== false && failedToLogin !== '') ? (\r\n                <Message\r\n                    className=\"message-container\"\r\n                    error\r\n                    header=\"Please, enter valid credentials\"\r\n                />\r\n            ) : null }\r\n            <Form>\r\n                <Form.Field>\r\n                    <label>Username</label>\r\n                    <input onChange={event => setUsernameInput(event.target.value)} value={usernameInput} placeholder='Username' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label>Password</label>\r\n                    <input onChange={event => setPasswordInput(event.target.value)} value={passwordInput} type=\"password\" placeholder='Password' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <p className=\"text-muted\">Need an an account? <a href=\"/register\" className=\"ml-2\" >Sign up</a></p>\r\n                </Form.Field>\r\n                {/*If both fields were filled -> show undisabled button*/}\r\n                {(allowButton) ? (\r\n                    <Button onClick={handleOnSubmit} onKeyPress={handleOnSubmit} className=\"submit-button\" type='button' primary>Login</Button>\r\n                ) : (\r\n                    <Button disabled onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Login</Button>\r\n                )}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}