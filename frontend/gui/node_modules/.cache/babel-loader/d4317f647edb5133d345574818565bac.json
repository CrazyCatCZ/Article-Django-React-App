{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plech\\\\github\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Authentication\\\\Register.js\";\nimport React, { useRef } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Button, Checkbox, Form } from 'semantic-ui-react';\nimport { USER_REGISTER_MUTATION } from '../query';\n\nconst Register = () => {\n  const username = useRef();\n  const email = useRef();\n  const password = useRef();\n  const passwordConfirm = useRef();\n  const [register, {\n    data\n  }] = useMutation(USER_REGISTER_MUTATION);\n\n  const handleOnSubmit = () => {\n    const usernameValue = username.current.value;\n    const emailValue = email.current.value;\n    const passwordValue = password.current.value;\n    const passwordConfirmValue = passwordConfirm.current.value;\n    register({\n      variables: {\n        username: usernameValue,\n        email: emailValue,\n        password: passwordValue,\n        passwordConfirm: passwordConfirmValue\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: username,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: email,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: password,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: passwordConfirm,\n    placeholder: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"register-submit-button\",\n    type: \"submit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Register\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/plech/github/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Authentication/Register.js"],"names":["React","useRef","useQuery","useMutation","Button","Checkbox","Form","USER_REGISTER_MUTATION","Register","username","email","password","passwordConfirm","register","data","handleOnSubmit","usernameValue","current","value","emailValue","passwordValue","passwordConfirmValue","variables"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,QAAuC,mBAAvC;AAEA,SAASC,sBAAT,QAAuC,UAAvC;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGR,MAAM,EAAvB;AACA,QAAMS,KAAK,GAAGT,MAAM,EAApB;AACA,QAAMU,QAAQ,GAAGV,MAAM,EAAvB;AACA,QAAMW,eAAe,GAAGX,MAAM,EAA9B;AAEA,QAAM,CAAEY,QAAF,EAAY;AAAEC,IAAAA;AAAF,GAAZ,IAAyBX,WAAW,CAACI,sBAAD,CAA1C;;AAEA,QAAMQ,cAAc,GAAG,MAAM;AAC3B,UAAMC,aAAa,GAAGP,QAAQ,CAACQ,OAAT,CAAiBC,KAAvC;AACA,UAAMC,UAAU,GAAGT,KAAK,CAACO,OAAN,CAAcC,KAAjC;AACA,UAAME,aAAa,GAAGT,QAAQ,CAACM,OAAT,CAAiBC,KAAvC;AACA,UAAMG,oBAAoB,GAAGT,eAAe,CAACK,OAAhB,CAAwBC,KAArD;AAEAL,IAAAA,QAAQ,CAAC;AAAES,MAAAA,SAAS,EAAE;AACpBb,QAAAA,QAAQ,EAAEO,aADU;AACKN,QAAAA,KAAK,EAAES,UADZ;AAEpBR,QAAAA,QAAQ,EAAES,aAFU;AAEKR,QAAAA,eAAe,EAAES;AAFtB;AAAb,KAAD,CAAR;AAID,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,IAAA,GAAG,EAAEZ,QAAZ;AAAsB,IAAA,WAAW,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAO,IAAA,GAAG,EAAEC,KAAZ;AAAmB,IAAA,WAAW,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,eASE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,IAAA,GAAG,EAAEC,QAAZ;AAAsB,IAAA,WAAW,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,eAaE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,IAAA,GAAG,EAAEC,eAAZ;AAA6B,IAAA,WAAW,EAAC,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbF,eAiBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEG,cAAjB;AAAiC,IAAA,SAAS,EAAC,wBAA3C;AAAoE,IAAA,IAAI,EAAC,QAAzE;AAAkF,IAAA,OAAO,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,CADF,CADF;AAuBH,CA3CD;;AA6CA,eAAeP,QAAf","sourcesContent":["import React, { useRef } from 'react'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { Button, Checkbox, Form } from 'semantic-ui-react'\r\n\r\nimport { USER_REGISTER_MUTATION } from '../query'\r\n\r\n\r\nconst Register = () => {\r\n    const username = useRef()\r\n    const email = useRef()\r\n    const password = useRef()\r\n    const passwordConfirm = useRef()\r\n\r\n    const [ register, { data } ] = useMutation(USER_REGISTER_MUTATION);\r\n\r\n    const handleOnSubmit = () => {\r\n      const usernameValue = username.current.value\r\n      const emailValue = email.current.value\r\n      const passwordValue = password.current.value\r\n      const passwordConfirmValue = passwordConfirm.current.value\r\n\r\n      register({ variables: {\r\n        username: usernameValue, email: emailValue,\r\n        password: passwordValue, passwordConfirm: passwordConfirmValue\r\n      }})\r\n    }\r\n\r\n    return (\r\n      <div className=\"register-container\">\r\n        <Form>\r\n          <Form.Field>\r\n            <label>Username</label>\r\n            <input ref={username} placeholder='Username' />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Email</label>\r\n            <input ref={email} placeholder='Email' />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Password</label>\r\n            <input ref={password} placeholder='Password' />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Confirm Password</label>\r\n            <input ref={passwordConfirm} placeholder='Confirm Password' />\r\n          </Form.Field>\r\n          <Button onClick={handleOnSubmit} className=\"register-submit-button\" type='submit' primary>Register</Button>\r\n        </Form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}