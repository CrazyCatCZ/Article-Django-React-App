{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Authentication\\\\Login.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory, Link } from 'react-router-dom';\nimport styles from './Authentication.module.css';\nimport { USER_LOGIN_MUTATION, USER_PROFILE_INFO_MUTATION } from '../api/user';\n\nconst Login = () => {\n  const history = useHistory();\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n  const [allowButton, setAllowButton] = useState(false);\n  const [loginUser, {\n    data\n  }] = useMutation(USER_LOGIN_MUTATION);\n  const [checkUserProfile] = useMutation(USER_LOGIN_MUTATION);\n  const usernameRef = useRef();\n  const passwordRef = useRef();\n  useEffect(() => {\n    const usernameValue = usernameRef.current.value;\n\n    if (data) {\n      const token = data.tokenAuth.token;\n      const message = data.tokenAuth.success; //If failed to login -> show error message\n\n      if (message === false) {\n        setMessage({\n          type: 'error',\n          text: 'Please, enter valid credentials'\n        });\n      } //Else success\n      else {\n          //if user doesnt have profile -> create new one\n          checkUserProfile({\n            variables: {\n              user: usernameValue\n            }\n          });\n          localStorage.setItem('user', usernameValue);\n          localStorage.setItem('token', token);\n          window.location.reload(false);\n          history.push('/');\n        }\n    }\n  }, [data]);\n\n  const handleOnSubmit = () => {\n    const usernameValue = usernameRef.current.value;\n    const passwordValue = passwordRef.current.value;\n    loginUser({\n      variables: {\n        username: usernameValue,\n        password: passwordValue\n      }\n    });\n  }; //Check if username and password was filled\n\n\n  const checkForm = () => {\n    if (usernameRef.current.value && passwordRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.login_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, message.type ? /*#__PURE__*/React.createElement(Message, {\n    className: \"message_container\",\n    error: true,\n    header: message.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }) : null, /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: usernameRef,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    ref: passwordRef,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Need an an account? \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/register\",\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 67\n    }\n  }, \"Sign up\"))), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"submit_button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Login\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnSubmit,\n    className: \"submit_button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Login\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Authentication/Login.js"],"names":["React","useState","useRef","useEffect","Button","Form","Message","useMutation","useHistory","Link","styles","USER_LOGIN_MUTATION","USER_PROFILE_INFO_MUTATION","Login","history","message","setMessage","type","text","allowButton","setAllowButton","loginUser","data","checkUserProfile","usernameRef","passwordRef","usernameValue","current","value","token","tokenAuth","success","variables","user","localStorage","setItem","window","location","reload","push","handleOnSubmit","passwordValue","username","password","checkForm","login_container"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory, Link } from 'react-router-dom'\r\n\r\nimport styles from './Authentication.module.css'\r\nimport { USER_LOGIN_MUTATION, USER_PROFILE_INFO_MUTATION } from '../api/user'\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n\r\n    const [ message, setMessage ] = useState({type: '', text: ''}) \r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    const [ loginUser, { data } ] = useMutation(USER_LOGIN_MUTATION)\r\n    const [ checkUserProfile ] = useMutation(USER_LOGIN_MUTATION)\r\n\r\n    const usernameRef = useRef()\r\n    const passwordRef = useRef()\r\n\r\n    \r\n    useEffect(() => {\r\n        const usernameValue = usernameRef.current.value\r\n\r\n        if (data) {\r\n            const token = data.tokenAuth.token\r\n            const message = data.tokenAuth.success\r\n            \r\n            //If failed to login -> show error message\r\n            if (message === false) {\r\n                setMessage({\r\n                    type: 'error',\r\n                    text: 'Please, enter valid credentials'\r\n                })\r\n            }\r\n\r\n            //Else success\r\n            else {\r\n                //if user doesnt have profile -> create new one\r\n                checkUserProfile({ variables: { user: usernameValue } })\r\n\r\n                localStorage.setItem('user', usernameValue)\r\n                localStorage.setItem('token', token)\r\n                window.location.reload(false);\r\n                history.push('/')\r\n            }\r\n        }\r\n    }, [data]) \r\n    \r\n    const handleOnSubmit = () => {\r\n        const usernameValue = usernameRef.current.value\r\n        const passwordValue = passwordRef.current.value\r\n\r\n        loginUser({ variables: {\r\n            username: usernameValue, password: passwordValue,\r\n        }})\r\n    }\r\n    \r\n    //Check if username and password was filled\r\n    const checkForm = () => {\r\n        if (usernameRef.current.value && passwordRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.login_container}>\r\n            {(message.type) ? (\r\n                <Message\r\n                    className=\"message_container\"\r\n                    error\r\n                    header={message.text}\r\n                />\r\n            ) : null }\r\n            <Form onChange={checkForm}>\r\n                <Form.Field>\r\n                    <label>Username</label>\r\n                    <input ref={usernameRef} placeholder='Username' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ref={passwordRef} placeholder='Password' />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <p className=\"text-muted\">Need an an account? <a href=\"/register\" className=\"ml-2\" >Sign up</a></p>\r\n                </Form.Field>\r\n                {(allowButton) ? (\r\n                    <Button onClick={handleOnSubmit} className=\"submit_button\" type='button' primary>Login</Button>\r\n                ) : (\r\n                    <Button disabled onClick={handleOnSubmit} className=\"submit_button\" type='button' primary>Login</Button>\r\n                )}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}