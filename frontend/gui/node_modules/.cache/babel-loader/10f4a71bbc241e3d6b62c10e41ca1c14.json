{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Authentication\\\\Register.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { USER_REGISTER_MUTATION } from '../Api/user'; //const authenticationList = ['username', 'email', 'password', 'passwordConfirm']\n\nconst Register = () => {\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const history = useHistory();\n  const [allowButton, setAllowButton] = useState(false);\n  const [message, setMessage] = useState({\n    type: '',\n    text: []\n  });\n  const [registerUser, {\n    data\n  }] = useMutation(USER_REGISTER_MUTATION);\n  useEffect(() => {\n    //Set default message\n    setMessage({\n      type: '',\n      text: []\n    }); //Reset previous state\n\n    if (data) {\n      //set message to var\n      const messageBoolean = data.register.success;\n\n      if (messageBoolean === false) {\n        //set the errors messages to var\n        const errors = Object.entries(data.register.error);\n        console.log(errors); //loop all error messages\n\n        errors.map(error => {\n          //get the error message\n          const messageError = error[1][0].message; //set the message with previous message\n\n          return setMessage(prevState => ({\n            type: 'error',\n            text: [...prevState.text, messageError]\n          }));\n        });\n      } else {\n        history.push('/login');\n      }\n    }\n  }, [data]);\n\n  const handleOnClick = () => {\n    const usernameValue = usernameRef.current.value;\n    const emailValue = emailRef.current.value;\n    const passwordValue = passwordRef.current.value;\n    const passwordConfirmValue = passwordConfirmRef.current.value;\n    registerUser({\n      variables: {\n        email: emailValue,\n        username: usernameValue,\n        password1: passwordValue,\n        password2: passwordConfirmValue\n      }\n    });\n  }; //check if username, email, password and 2nd password were filled\n\n\n  const checkForm = () => {\n    if (usernameRef.current.value && emailRef.current.value && passwordRef.current.value && passwordConfirmRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, message.type ? /*#__PURE__*/React.createElement(Message, {\n    className: \"message-container\",\n    error: true,\n    header: \"There was some errors with your submission\",\n    list: message.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }) : null, /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: usernameRef,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: emailRef,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    ref: passwordRef,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    ref: passwordConfirmRef,\n    placeholder: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/login\",\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 62\n    }\n  }, \"Sign in\"))), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnClick,\n    className: \"register-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Register\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnClick,\n    className: \"register-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Register\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Authentication/Register.js"],"names":["React","useState","useRef","useEffect","useMutation","useHistory","Button","Form","Message","USER_REGISTER_MUTATION","Register","usernameRef","emailRef","passwordRef","passwordConfirmRef","history","allowButton","setAllowButton","message","setMessage","type","text","registerUser","data","messageBoolean","register","success","errors","Object","entries","error","console","log","map","messageError","prevState","push","handleOnClick","usernameValue","current","value","emailValue","passwordValue","passwordConfirmValue","variables","email","username","password1","password2","checkForm"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\n\r\nimport { USER_REGISTER_MUTATION } from '../Api/user'\r\n\r\n//const authenticationList = ['username', 'email', 'password', 'passwordConfirm']\r\n\r\nconst Register = () => {\r\n  const usernameRef = useRef()\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  \r\n  const history = useHistory()\r\n  const [ allowButton, setAllowButton ] = useState(false)\r\n  const [ message, setMessage ] = useState({type: '', text: []}) \r\n  const [ registerUser, { data } ] = useMutation(USER_REGISTER_MUTATION);\r\n\r\n  useEffect(() => {\r\n    //Set default message\r\n    setMessage({type: '', text: []}) //Reset previous state\r\n    \r\n    if (data) {\r\n      //set message to var\r\n      const messageBoolean = data.register.success\r\n      \r\n      if (messageBoolean === false) {\r\n        //set the errors messages to var\r\n        const errors = Object.entries(data.register.error)\r\n        console.log(errors)\r\n        \r\n        //loop all error messages\r\n        errors.map(error => {\r\n          //get the error message\r\n          const messageError = error[1][0].message\r\n          \r\n          //set the message with previous message\r\n          return setMessage((prevState) => ({\r\n            type: 'error',\r\n            text: [...prevState.text, messageError]\r\n            \r\n          }))\r\n        })\r\n      }\r\n      \r\n      else {\r\n        history.push('/login')\r\n      }\r\n    }\r\n  }, [data])\r\n  \r\n  const handleOnClick = () => {\r\n    const usernameValue = usernameRef.current.value\r\n    const emailValue = emailRef.current.value\r\n    const passwordValue = passwordRef.current.value\r\n    const passwordConfirmValue = passwordConfirmRef.current.value\r\n\r\n    registerUser({ variables: {\r\n      email: emailValue, username: usernameValue,\r\n      password1: passwordValue, password2: passwordConfirmValue\r\n    }})\r\n  }\r\n  \r\n  //check if username, email, password and 2nd password were filled\r\n  const checkForm = () => {\r\n    if (\r\n      usernameRef.current.value && emailRef.current.value && \r\n      passwordRef.current.value && passwordConfirmRef.current.value\r\n    ) {\r\n      setAllowButton(true)\r\n    }\r\n\r\n    else {\r\n      setAllowButton(false)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      {(message.type) ? (\r\n        <Message\r\n          className=\"message-container\"\r\n          error\r\n          header=\"There was some errors with your submission\"\r\n          list={message.text}\r\n        />\r\n        ) : null }\r\n      <Form onChange={checkForm}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input ref={usernameRef} placeholder='Username' />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input ref={emailRef} placeholder='Email' />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input type=\"password\" ref={passwordRef} placeholder='Password' />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Confirm Password</label>\r\n          <input type=\"password\" ref={passwordConfirmRef} placeholder='Confirm Password' />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <p className=\"text-muted\">Already have an account? <a href=\"/login\" className=\"ml-2\" >Sign in</a></p>\r\n        </Form.Field>\r\n        {/*If both fields were filled -> show undisabled button*/}\r\n        {(allowButton) ? (\r\n          <Button onClick={handleOnClick} className=\"register-button\" type='button' primary>Register</Button>\r\n        ) : (\r\n          <Button disabled onClick={handleOnClick} className=\"register-button\" type='button' primary>Register</Button>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}