{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Messages\\\\Messages\\\\MessagesContainer.js\";\nimport React, { useEffect, useCallback } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useParams } from 'react-router-dom';\nimport { MESSAGE_LIST_MUTATION } from '../../Api/message';\nimport MessagesMap from './MessagesMap';\nimport MessageCreate from '../MessageCreate';\n\nconst MessagesContainer = () => {\n  const user = localStorage.getItem('user');\n  const {\n    chatUser\n  } = useParams();\n  const [queryUserMessages, {\n    data: messagesData\n  }] = useMutation(MESSAGE_LIST_MUTATION); //query all chat room messages\n\n  const queryMessages = useCallback(() => {\n    queryUserMessages({\n      variables: {\n        user: user,\n        chatUser: chatUser\n      }\n    });\n  }, [chatUser]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-room-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages-and-create-form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, messagesData && messagesData.queryUserMessages.message === 'Success' ? /*#__PURE__*/React.createElement(React.Fragment, null, messagesData && messagesData.queryUserMessages.messages.length !== 0 ? /*#__PURE__*/React.createElement(MessagesMap, {\n    messagesData: messagesData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(MessageCreate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  })) : null));\n};\n\nexport default MessagesContainer;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Messages/Messages/MessagesContainer.js"],"names":["React","useEffect","useCallback","useMutation","useParams","MESSAGE_LIST_MUTATION","MessagesMap","MessageCreate","MessagesContainer","user","localStorage","getItem","chatUser","queryUserMessages","data","messagesData","queryMessages","variables","message","messages","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeR,SAAS,EAA9B;AAEA,QAAM,CAAES,iBAAF,EAAqB;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GAArB,IAA+CZ,WAAW,CAACE,qBAAD,CAAhE,CAJ4B,CAM5B;;AACA,QAAMW,aAAa,GAAGd,WAAW,CAAC,MAAM;AAEpCW,IAAAA,iBAAiB,CAAC;AAAEI,MAAAA,SAAS,EAAE;AAACR,QAAAA,IAAI,EAAEA,IAAP;AAAaG,QAAAA,QAAQ,EAAEA;AAAvB;AAAb,KAAD,CAAjB;AACH,GAHgC,EAG9B,CAACA,QAAD,CAH8B,CAAjC;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEG,YAAY,IAAIA,YAAY,CAACF,iBAAb,CAA+BK,OAA/B,KAA2C,SAA5D,gBACG,0CACKH,YAAY,IAAIA,YAAY,CAACF,iBAAb,CAA+BM,QAA/B,CAAwCC,MAAxC,KAAmD,CAAnE,gBACG,oBAAC,WAAD;AAAa,IAAA,YAAY,EAAEL,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAEG,IAHR,eAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADH,GAOG,IARJ,CAFJ,CADJ;AAeH,CA7BD;;AA+BA,eAAeP,iBAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { MESSAGE_LIST_MUTATION } from '../../Api/message'\r\nimport MessagesMap from './MessagesMap'\r\nimport MessageCreate from '../MessageCreate'\r\n\r\nconst MessagesContainer = () => {\r\n    const user = localStorage.getItem('user')\r\n    const { chatUser } = useParams()\r\n\r\n    const [ queryUserMessages, { data: messagesData }] = useMutation(MESSAGE_LIST_MUTATION)\r\n    \r\n    //query all chat room messages\r\n    const queryMessages = useCallback(() => {\r\n\r\n        queryUserMessages({ variables: {user: user, chatUser: chatUser} })\r\n    }, [chatUser])\r\n    \r\n\r\n    \r\n    return (\r\n        <div className=\"chat-room-container\">\r\n            {/*If messagesData and user and chat_user messages*/}\r\n            <div className=\"messages-and-create-form-container\">\r\n            {(messagesData && messagesData.queryUserMessages.message === 'Success') ? (\r\n                <>\r\n                    {messagesData && messagesData.queryUserMessages.messages.length !== 0 ? (\r\n                        <MessagesMap messagesData={messagesData} />\r\n                    ) : null }\r\n                    <MessageCreate />\r\n                </>\r\n            ) : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesContainer\r\n  "]},"metadata":{},"sourceType":"module"}