{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Profiles\\\\Profile.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Form, Checkbox } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { USER_PROFILE_INFO_MUTATION, USER_UPDATE_MUTATION } from '../api/user';\n\nconst Profile = () => {\n  const {\n    user\n  } = useParams();\n  const [profileInfo, {\n    data: profileData\n  }] = useMutation(USER_PROFILE_INFO_MUTATION);\n  const [profileUpdate, {\n    data: updateData\n  }] = useMutation(USER_UPDATE_MUTATION);\n  const [allowButton, setAllowButton] = useState(false);\n  const [usernameValue, setUsernameValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const imageRef = useRef();\n  useEffect(() => {\n    const getProfileInfo = () => {\n      if (user) {\n        profileInfo({\n          variables: {\n            user: user\n          }\n        });\n      }\n    };\n\n    getProfileInfo();\n  }, [user]);\n  useEffect(() => {\n    if (profileData) {\n      setUsernameValue(profileData.profileInfo.profile.user.username);\n      setEmailValue(profileData.profileInfo.profile.user.email);\n    }\n  }, [profileData]);\n\n  const handleOnSubmit = () => {\n    const usernameValue = usernameRef.current.value;\n    const emailValue = emailRef.current.value;\n    profileUpdate({\n      variables: {\n        user: user,\n        newUser: usernameValue,\n        email: emailValue\n      }\n    });\n  };\n\n  console.log(updateData);\n\n  const checkForm = () => {\n    if (usernameRef.current.value && emailRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  const onUsernameValueChange = value => {\n    setUsernameValue(value);\n  };\n\n  const onEmailValueChange = value => {\n    setEmailValue(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, profileData ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"media profile-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"rounded-circle profile-picture\",\n    src: require(`./media/${profileData.profileInfo.profile.image}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-body ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"account-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.username), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.email))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-info-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Profile info\"), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => onUsernameValueChange(event.target.value),\n    value: usernameValue,\n    ref: usernameRef,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => onEmailValueChange(event.target.value),\n    value: emailValue,\n    ref: emailRef,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, \"Current:  \", profileData.profileInfo.profile.image)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: imageRef,\n    type: \"file\",\n    id: \"myFile\",\n    name: \"filename\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  })), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"Update\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, \"Update\")))) : null);\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Profiles/Profile.js"],"names":["React","useState","useEffect","useRef","Button","Form","Checkbox","useMutation","useHistory","useParams","USER_PROFILE_INFO_MUTATION","USER_UPDATE_MUTATION","Profile","user","profileInfo","data","profileData","profileUpdate","updateData","allowButton","setAllowButton","usernameValue","setUsernameValue","emailValue","setEmailValue","usernameRef","emailRef","imageRef","getProfileInfo","variables","profile","username","email","handleOnSubmit","current","value","newUser","console","log","checkForm","onUsernameValueChange","onEmailValueChange","require","image","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,QAAuC,mBAAvC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,0BAAT,EAAqCC,oBAArC,QAAiE,aAAjE;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,SAAS,EAA1B;AACA,QAAM,CAAEK,WAAF,EAAe;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GAAf,IAAyCT,WAAW,CAACG,0BAAD,CAA1D;AACA,QAAM,CAAEO,aAAF,EAAiB;AAAEF,IAAAA,IAAI,EAAEG;AAAR,GAAjB,IAA0CX,WAAW,CAACI,oBAAD,CAA3D;AAEA,QAAM,CAAEQ,WAAF,EAAeC,cAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAEoB,aAAF,EAAiBC,gBAAjB,IAAsCrB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAEsB,UAAF,EAAcC,aAAd,IAAgCvB,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMwB,WAAW,GAAGtB,MAAM,EAA1B;AACA,QAAMuB,QAAQ,GAAGvB,MAAM,EAAvB;AACA,QAAMwB,QAAQ,GAAGxB,MAAM,EAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,cAAc,GAAG,MAAM;AACzB,UAAIf,IAAJ,EAAU;AACNC,QAAAA,WAAW,CAAC;AAAEe,UAAAA,SAAS,EAAE;AAAEhB,YAAAA,IAAI,EAAEA;AAAR;AAAb,SAAD,CAAX;AACH;AACJ,KAJD;;AAKAe,IAAAA,cAAc;AACjB,GAPQ,EAON,CAACf,IAAD,CAPM,CAAT;AASAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,WAAJ,EAAiB;AACbM,MAAAA,gBAAgB,CAACN,WAAW,CAACF,WAAZ,CAAwBgB,OAAxB,CAAgCjB,IAAhC,CAAqCkB,QAAtC,CAAhB;AACAP,MAAAA,aAAa,CAACR,WAAW,CAACF,WAAZ,CAAwBgB,OAAxB,CAAgCjB,IAAhC,CAAqCmB,KAAtC,CAAb;AACH;AACJ,GALQ,EAKN,CAAChB,WAAD,CALM,CAAT;;AAOA,QAAMiB,cAAc,GAAG,MAAM;AACzB,UAAMZ,aAAa,GAAGI,WAAW,CAACS,OAAZ,CAAoBC,KAA1C;AACA,UAAMZ,UAAU,GAAGG,QAAQ,CAACQ,OAAT,CAAiBC,KAApC;AAEAlB,IAAAA,aAAa,CAAC;AAAEY,MAAAA,SAAS,EAAE;AAAChB,QAAAA,IAAI,EAAEA,IAAP;AAAauB,QAAAA,OAAO,EAAEf,aAAtB;AAAqCW,QAAAA,KAAK,EAAET;AAA5C;AAAb,KAAD,CAAb;AACH,GALD;;AAOAc,EAAAA,OAAO,CAACC,GAAR,CAAYpB,UAAZ;;AAEA,QAAMqB,SAAS,GAAG,MAAM;AACpB,QAAId,WAAW,CAACS,OAAZ,CAAoBC,KAApB,IAA6BT,QAAQ,CAACQ,OAAT,CAAiBC,KAAlD,EAAyD;AACrDf,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAIK;AACDA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GARD;;AAUA,QAAMoB,qBAAqB,GAAIL,KAAD,IAAW;AACrCb,IAAAA,gBAAgB,CAACa,KAAD,CAAhB;AACH,GAFD;;AAIA,QAAMM,kBAAkB,GAAIN,KAAD,IAAW;AAClCX,IAAAA,aAAa,CAACW,KAAD,CAAb;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMnB,WAAD,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAgD,IAAA,GAAG,EAAE0B,OAAO,CAAE,WAAU1B,WAAW,CAACF,WAAZ,CAAwBgB,OAAxB,CAAgCa,KAAM,EAAlD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC3B,WAAW,CAACF,WAAZ,CAAwBgB,OAAxB,CAAgCjB,IAAhC,CAAqCkB,QAAtE,CADJ,eAEI;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+Bf,WAAW,CAACF,WAAZ,CAAwBgB,OAAxB,CAAgCjB,IAAhC,CAAqCmB,KAApE,CAFJ,CAFJ,CADJ,eAQI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEO,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,IAAA,QAAQ,EAAEK,KAAK,IAAIJ,qBAAqB,CAACI,KAAK,CAACC,MAAN,CAAaV,KAAd,CAA/C;AAAqE,IAAA,KAAK,EAAEd,aAA5E;AAA2F,IAAA,GAAG,EAAEI,WAAhG;AAA6G,IAAA,WAAW,EAAC,UAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAO,IAAA,QAAQ,EAAEmB,KAAK,IAAIH,kBAAkB,CAACG,KAAK,CAACC,MAAN,CAAaV,KAAd,CAA5C;AAAkE,IAAA,KAAK,EAAEZ,UAAzE;AAAqF,IAAA,GAAG,EAAEG,QAA1F;AAAoG,IAAA,WAAW,EAAC,OAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,eASI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcV,WAAW,CAACF,WAAZ,CAAwBgB,OAAxB,CAAgCa,KAA9C,CAFJ,CATJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAEhB,QAAZ;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,EAAE,EAAC,QAArC;AAA8C,IAAA,IAAI,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAbJ,EAgBMR,WAAD,gBACG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEc,cAAjB;AAAiC,IAAA,SAAS,EAAC,eAA3C;AAA2D,IAAA,IAAI,EAAC,QAAhE;AAAyE,IAAA,OAAO,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,gBAGG,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,OAAO,EAAEA,cAA1B;AAA0C,IAAA,SAAS,EAAC,eAApD;AAAoE,IAAA,IAAI,EAAC,QAAzE;AAAkF,IAAA,OAAO,MAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBR,CAHJ,CARJ,CADH,GAoCG,IArCR,CADJ;AAyCH,CAlGD;;AAoGA,eAAerB,OAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Button, Form, Checkbox } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { USER_PROFILE_INFO_MUTATION, USER_UPDATE_MUTATION } from '../api/user'\r\n\r\n\r\nconst Profile = () => {\r\n    const { user } = useParams()\r\n    const [ profileInfo, { data: profileData } ] = useMutation(USER_PROFILE_INFO_MUTATION)\r\n    const [ profileUpdate, { data: updateData } ] = useMutation(USER_UPDATE_MUTATION)\r\n\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    const [ usernameValue, setUsernameValue ] = useState('')\r\n    const [ emailValue, setEmailValue ] = useState('')\r\n\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const imageRef = useRef()\r\n\r\n    useEffect(() => {\r\n        const getProfileInfo = () => {\r\n            if (user) {\r\n                profileInfo({ variables: { user: user } })\r\n            }\r\n        }\r\n        getProfileInfo()\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        if (profileData) {\r\n            setUsernameValue(profileData.profileInfo.profile.user.username)\r\n            setEmailValue(profileData.profileInfo.profile.user.email)\r\n        }\r\n    }, [profileData])\r\n\r\n    const handleOnSubmit = () => {\r\n        const usernameValue = usernameRef.current.value\r\n        const emailValue = emailRef.current.value\r\n\r\n        profileUpdate({ variables: {user: user, newUser: usernameValue, email: emailValue }})\r\n    }\r\n\r\n    console.log(updateData)\r\n\r\n    const checkForm = () => {\r\n        if (usernameRef.current.value && emailRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n    const onUsernameValueChange = (value) => {\r\n        setUsernameValue(value)\r\n    }\r\n \r\n    const onEmailValueChange = (value) => {\r\n        setEmailValue(value)\r\n    }   \r\n\r\n\r\n    return (\r\n        <div class=\"profile-container\">\r\n            {(profileData) ?(\r\n                <div>\r\n                    <div class=\"media profile-media\">\r\n                        <img className=\"rounded-circle profile-picture\" src={require(`./media/${profileData.profileInfo.profile.image}`)} />\r\n                        <div className=\"profile-body ml-5\">\r\n                            <h2 className=\"account-heading\">{profileData.profileInfo.profile.user.username}</h2>\r\n                            <p className=\"text-secondary\">{profileData.profileInfo.profile.user.email}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <p className=\"profile-info-text\">Profile info</p>\r\n                        <hr className=\"mb-4\" />\r\n                        <Form onChange={checkForm}>\r\n                            <Form.Field>\r\n                                <label>Username</label>\r\n                                <input onChange={event => onUsernameValueChange(event.target.value)} value={usernameValue} ref={usernameRef} placeholder='Username' />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Email</label>\r\n                                <input onChange={event => onEmailValueChange(event.target.value)} value={emailValue} ref={emailRef} placeholder='Email' />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label className=\"mb-3\">Image</label>\r\n                                <p>Current:  {profileData.profileInfo.profile.image}</p>   \r\n                            </Form.Field>\r\n                            <div>\r\n                                <input ref={imageRef} type=\"file\" id=\"myFile\" name=\"filename\" />\r\n                            </div>\r\n                            {(allowButton) ? (\r\n                                <Button onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Update</Button>\r\n                            ) : (\r\n                                <Button disabled onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Update</Button>\r\n                            )}\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}