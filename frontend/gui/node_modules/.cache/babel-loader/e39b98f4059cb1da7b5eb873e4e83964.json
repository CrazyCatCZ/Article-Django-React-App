{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Posts\\\\Posts.js\";\nimport React, { useState, useRef } from 'react';\nimport '../App.css';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport Post from './Post';\nimport { POST_LIST_QUERY } from '../api/post';\nimport { POST_FILTER_MUTATION } from '../api/post';\n\nconst Posts = () => {\n  const {\n    data\n  } = useQuery(POST_LIST_QUERY);\n  const [postFilter, {\n    data: filteredData\n  }] = useMutation(POST_FILTER_MUTATION);\n  const searchRef = useRef();\n\n  const handleOnChange = event => {\n    const searchValue = searchRef.current.value;\n\n    if (event.key === 'Enter') {\n      postFilter({\n        variables: {\n          title: searchValue\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onKeyPress: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: searchRef,\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  })))), console.log(filteredData), data ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, data.allPosts.map(({\n    user: {\n      username\n    },\n    title,\n    posted,\n    id\n  }) => {\n    return /*#__PURE__*/React.createElement(Post, {\n      key: id,\n      username: username,\n      title: title,\n      posted: posted,\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    });\n  })) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Loading....\"));\n};\n\nexport default Posts;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Posts/Posts.js"],"names":["React","useState","useRef","useQuery","Form","useMutation","Post","POST_LIST_QUERY","POST_FILTER_MUTATION","Posts","data","postFilter","filteredData","searchRef","handleOnChange","event","searchValue","current","value","key","variables","title","console","log","allPosts","map","user","username","posted","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,YAAP;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,oBAAT,QAAsC,aAAtC;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAWP,QAAQ,CAACI,eAAD,CAAzB;AACA,QAAM,CAAEI,UAAF,EAAc;AAAED,IAAAA,IAAI,EAAEE;AAAR,GAAd,IAAwCP,WAAW,CAACG,oBAAD,CAAzD;AACA,QAAMK,SAAS,GAAGX,MAAM,EAAxB;;AAEA,QAAMY,cAAc,GAAIC,KAAD,IAAW;AAC9B,UAAMC,WAAW,GAAGH,SAAS,CAACI,OAAV,CAAkBC,KAAtC;;AACA,QAAIH,KAAK,CAACI,GAAN,KAAc,OAAlB,EAA2B;AACvBR,MAAAA,UAAU,CAAC;AAAES,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAEL;AAAT;AAAb,OAAD,CAAV;AACH;AACJ,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAEF,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAED,SAAZ;AAAuB,IAAA,WAAW,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ,EAQKS,OAAO,CAACC,GAAR,CAAYX,YAAZ,CARL,EASMF,IAAD,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACc,QAAL,CAAcC,GAAd,CAAkB,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF,KAAR;AAAsBN,IAAAA,KAAtB;AAA6BO,IAAAA,MAA7B;AAAqCC,IAAAA;AAArC,GAAD,KAA+C;AAC9D,wBACI,oBAAC,IAAD;AACI,MAAA,GAAG,EAAEA,EADT;AAEI,MAAA,QAAQ,EAAEF,QAFd;AAGI,MAAA,KAAK,EAAEN,KAHX;AAII,MAAA,MAAM,EAAEO,MAJZ;AAKI,MAAA,EAAE,EAAEC,EALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASC,GAVJ,CADL,CADH,gBAeG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAxBR,CADJ;AA6BH,CAzCD;;AA2CA,eAAepB,KAAf","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport '../App.css';\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { Form } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport Post from './Post'\r\nimport { POST_LIST_QUERY } from '../api/post'\r\nimport { POST_FILTER_MUTATION  } from '../api/post'\r\n\r\n\r\nconst Posts = () => {\r\n    const { data } = useQuery(POST_LIST_QUERY)\r\n    const [ postFilter, { data: filteredData }] = useMutation(POST_FILTER_MUTATION)\r\n    const searchRef = useRef()\r\n\r\n    const handleOnChange = (event) => {\r\n        const searchValue = searchRef.current.value\r\n        if (event.key === 'Enter') {\r\n            postFilter({ variables: { title: searchValue } })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n            <div className=\"search-bar-container\">\r\n                <Form onKeyPress={handleOnChange}>\r\n                    <Form.Field>\r\n                        <input ref={searchRef} placeholder='Search...' />\r\n                    </Form.Field>\r\n                </Form>\r\n            </div>\r\n            {console.log(filteredData)}\r\n            {(data) ? (\r\n                <div>\r\n                    {data.allPosts.map(({ user: { username }, title, posted, id }) => {\r\n                        return (\r\n                            <Post \r\n                                key={id} \r\n                                username={username}\r\n                                title={title}\r\n                                posted={posted}\r\n                                id={id}\r\n                            />\r\n                            )\r\n                        })}\r\n                </div>\r\n            ) : (\r\n                <h1>Loading....</h1>\r\n            ) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n"]},"metadata":{},"sourceType":"module"}