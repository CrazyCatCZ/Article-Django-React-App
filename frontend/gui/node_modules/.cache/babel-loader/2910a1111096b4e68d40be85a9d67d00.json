{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Profiles\\\\Profile.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Form, Checkbox } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { USER_PROFILE_INFO_MUTATION } from '../api/user';\n\nconst Profile = () => {\n  const {\n    user\n  } = useParams();\n  const [profileInfo, {\n    data: profileData\n  }] = useMutation(USER_PROFILE_INFO_MUTATION);\n  const [allowButton, setAllowButton] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  useEffect(() => {\n    const getProfileInfo = () => {\n      if (user) {\n        profileInfo({\n          variables: {\n            user: user\n          }\n        });\n      }\n    };\n\n    getProfileInfo();\n  }, [user]);\n  useEffect(() => {\n    if (profileData) {\n      setInputValue(profileData.profileInfo.profile.user.username);\n      setEmailValue(profileData.profileInfo.profile.user.email);\n    }\n  }, [user]);\n\n  const handleOnSubmit = () => {\n    console.log('test');\n  };\n\n  const checkForm = () => {\n    if (usernameRef.current.value && emailRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, profileData ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"media profile-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"rounded-circle profile-picture\",\n    src: require(`./media/${profileData.profileInfo.profile.image}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-body ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"account-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.username), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.email))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-info-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Profile info\"), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: usernameRef,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: emailRef,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  })), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, \"Login\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, \"Login\")))) : null);\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Profiles/Profile.js"],"names":["React","useState","useEffect","useRef","Button","Form","Checkbox","useMutation","useHistory","useParams","USER_PROFILE_INFO_MUTATION","Profile","user","profileInfo","data","profileData","allowButton","setAllowButton","inputValue","setInputValue","emailValue","setEmailValue","usernameRef","emailRef","getProfileInfo","variables","profile","username","email","handleOnSubmit","console","log","checkForm","current","value","require","image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Button, Form, Checkbox } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { USER_PROFILE_INFO_MUTATION } from '../api/user'\r\n\r\n\r\nconst Profile = () => {\r\n    const { user } = useParams()\r\n    const [ profileInfo, { data: profileData } ] = useMutation(USER_PROFILE_INFO_MUTATION)\r\n\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    const [ inputValue, setInputValue ] = useState('')\r\n    const [ emailValue, setEmailValue ] = useState('')\r\n\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n\r\n    useEffect(() => {\r\n        const getProfileInfo = () => {\r\n            if (user) {\r\n                profileInfo({ variables: { user: user } })\r\n            }\r\n        }\r\n        getProfileInfo()\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        if (profileData) {\r\n            setInputValue(profileData.profileInfo.profile.user.username)\r\n            setEmailValue(profileData.profileInfo.profile.user.email)\r\n        }\r\n    }, [user])\r\n\r\n    const handleOnSubmit = () => {\r\n        console.log('test')\r\n    }\r\n\r\n\r\n    const checkForm = () => {\r\n        if (usernameRef.current.value && emailRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div class=\"profile-container\">\r\n            {(profileData) ?(\r\n                <div>\r\n                    <div class=\"media profile-media\">\r\n                        <img className=\"rounded-circle profile-picture\" src={require(`./media/${profileData.profileInfo.profile.image}`)} />\r\n                        <div className=\"profile-body ml-5\">\r\n                            <h2 className=\"account-heading\">{profileData.profileInfo.profile.user.username}</h2>\r\n                            <p className=\"text-secondary\">{profileData.profileInfo.profile.user.email}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <p className=\"profile-info-text\">Profile info</p>\r\n                        <hr className=\"mb-4\" />\r\n                        <Form onChange={checkForm}>\r\n                            <Form.Field>\r\n                                <label>Username</label>\r\n                                <input ref={usernameRef} placeholder='Username' />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                            <label>Email</label>\r\n                                <input ref={emailRef} placeholder='Email' />\r\n                            </Form.Field>\r\n                            {(allowButton) ? (\r\n                                <Button onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Login</Button>\r\n                            ) : (\r\n                                <Button disabled onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Login</Button>\r\n                            )}\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}