{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Profiles\\\\Profile.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Form, Message, Comment } from 'semantic-ui-react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { USER_LIST_QUERY, USER_PROFILE_INFO_MUTATION, USER_UPDATE_MUTATION } from '../Api/user';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\n\nconst Profile = () => {\n  const {\n    user\n  } = useParams();\n  const currentUser = localStorage.getItem('user');\n  const [profileInfo, {\n    data: profileData\n  }] = useMutation(USER_PROFILE_INFO_MUTATION);\n  const [profileUpdate, {\n    data: updateData\n  }] = useMutation(USER_UPDATE_MUTATION);\n  const [imageName, setImageName] = useState();\n  const [errorMessages, setErrorMessages] = useState();\n  const [allowButton, setAllowButton] = useState(false);\n  const [usernameValue, setUsernameValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const history = useHistory();\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const [profileImage, setProfileImage] = useState({\n    path: 'none'\n  });\n  useEffect(() => {\n    const getProfileInfo = () => {\n      if (user) {\n        profileInfo({\n          variables: {\n            user: user\n          }\n        });\n      }\n    };\n\n    getProfileInfo();\n  }, [user]);\n  useEffect(() => {\n    if (profileData) {\n      let imagePath = profileData.profileInfo.profile.image;\n      console.log(imagePath);\n      setUsernameValue(profileData.profileInfo.profile.user.username);\n      setEmailValue(profileData.profileInfo.profile.user.email);\n      setImageName(imagePath);\n    }\n  }, [profileData]);\n  useEffect(() => {\n    if (updateData) {\n      setErrorMessages(updateData.profileUpdate.message);\n    }\n  }, [updateData]);\n  useEffect(() => {\n    if (updateData !== undefined && updateData.profileUpdate.message === 'Success') {\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      history.push('/login');\n      window.location.reload(false);\n    }\n  }, [updateData]);\n\n  const handleOnSubmit = () => {\n    const usernameValue = usernameRef.current.value;\n    const emailValue = emailRef.current.value;\n    profileUpdate({\n      variables: {\n        user: user,\n        newUser: usernameValue,\n        newEmail: emailValue,\n        file: profileImage\n      }\n    });\n  };\n\n  const checkForm = () => {\n    if (usernameRef.current.value && emailRef.current.value) {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  };\n\n  const onUsernameValueChange = value => {\n    setUsernameValue(value);\n  };\n\n  const onEmailValueChange = value => {\n    setEmailValue(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, profileData && imageName ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, errorMessages ? /*#__PURE__*/React.createElement(Message, {\n    className: \"message-container\",\n    error: true,\n    header: \"There was some errors with your submission\",\n    list: [errorMessages],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"media profile-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Group, {\n    size: \"massive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n    as: \"a\",\n    src: require(`./media/profile_pictures/${profileData.profileInfo.profile.image}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-body ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"account-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.username), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, profileData.profileInfo.profile.user.email))), user === currentUser ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile-info-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, \"Profile info\"), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onChange: checkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 37\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => onUsernameValueChange(event.target.value),\n    value: usernameValue,\n    ref: usernameRef,\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => onEmailValueChange(event.target.value),\n    value: emailValue,\n    ref: emailRef,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  })), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  }, \"Update\") : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnSubmit,\n    className: \"submit-button\",\n    type: \"button\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, \"Update\"))) : null) : null);\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Profiles/Profile.js"],"names":["React","useState","useEffect","useRef","Button","Form","Message","Comment","useHistory","useParams","USER_LIST_QUERY","USER_PROFILE_INFO_MUTATION","USER_UPDATE_MUTATION","useMutation","useQuery","Profile","user","currentUser","localStorage","getItem","profileInfo","data","profileData","profileUpdate","updateData","imageName","setImageName","errorMessages","setErrorMessages","allowButton","setAllowButton","usernameValue","setUsernameValue","emailValue","setEmailValue","history","usernameRef","emailRef","profileImage","setProfileImage","path","getProfileInfo","variables","imagePath","profile","image","console","log","username","email","message","undefined","removeItem","push","window","location","reload","handleOnSubmit","current","value","newUser","newEmail","file","checkForm","onUsernameValueChange","onEmailValueChange","require","event","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Button, Form, Message, Comment } from 'semantic-ui-react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { USER_LIST_QUERY, USER_PROFILE_INFO_MUTATION, USER_UPDATE_MUTATION } from '../Api/user'\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\n\r\n\r\nconst Profile = () => {\r\n    const { user } = useParams()\r\n    const currentUser = localStorage.getItem('user')\r\n\r\n    const [ profileInfo, { data: profileData } ] = useMutation(USER_PROFILE_INFO_MUTATION)\r\n    const [ profileUpdate, { data: updateData } ] = useMutation(USER_UPDATE_MUTATION)\r\n\r\n    const [ imageName, setImageName ] = useState()\r\n    const [ errorMessages, setErrorMessages ] = useState()\r\n\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    const [ usernameValue, setUsernameValue ] = useState('')\r\n    const [ emailValue, setEmailValue ] = useState('')\r\n    const history = useHistory()\r\n\r\n    const usernameRef = useRef()\r\n    const emailRef = useRef()\r\n    const [ profileImage, setProfileImage ] = useState({path: 'none'})\r\n\r\n    useEffect(() => {\r\n        const getProfileInfo = () => {\r\n            if (user) {\r\n                profileInfo({ variables: { user: user } })\r\n            }\r\n        }\r\n        getProfileInfo()\r\n    }, [user])\r\n    \r\n    useEffect(() => {\r\n        if (profileData) {\r\n            let imagePath = profileData.profileInfo.profile.image\r\n            \r\n            console.log(imagePath)\r\n\r\n            setUsernameValue(profileData.profileInfo.profile.user.username)\r\n            setEmailValue(profileData.profileInfo.profile.user.email)\r\n            setImageName(imagePath)\r\n        }\r\n    }, [profileData])\r\n\r\n    useEffect(() => {\r\n        if (updateData) {\r\n            setErrorMessages(updateData.profileUpdate.message)\r\n        }\r\n    }, [updateData])\r\n\r\n    useEffect(() => {\r\n        if (updateData !== undefined && updateData.profileUpdate.message === 'Success') {\r\n            localStorage.removeItem('user')\r\n            localStorage.removeItem('token')\r\n            history.push('/login')\r\n            window.location.reload(false)\r\n        }\r\n    }, [updateData])\r\n\r\n    const handleOnSubmit = () => {\r\n        const usernameValue = usernameRef.current.value\r\n        const emailValue = emailRef.current.value\r\n\r\n        profileUpdate({ variables: { \r\n            user: user, newUser: usernameValue,\r\n            newEmail: emailValue, file: profileImage }\r\n        })\r\n    }\r\n\r\n    const checkForm = () => {\r\n        if (usernameRef.current.value && emailRef.current.value) {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }\r\n\r\n    const onUsernameValueChange = (value) => {\r\n        setUsernameValue(value)\r\n    }\r\n \r\n    const onEmailValueChange = (value) => {\r\n        setEmailValue(value)\r\n    }   \r\n\r\n\r\n    return (\r\n        <div class=\"profile-container\">\r\n            {(profileData && imageName) ?(\r\n                <div>\r\n                    {(errorMessages) ? (\r\n                        <Message\r\n                            className=\"message-container\"\r\n                            error\r\n                            header='There was some errors with your submission'\r\n                            list={[errorMessages]}\r\n                        />\r\n                    ) : null}\r\n                    <div class=\"media profile-media\">\r\n                        <Comment.Group size='massive'>\r\n                            <Comment.Avatar as='a' src={require(`./media/profile_pictures/${profileData.profileInfo.profile.image}`)} />\r\n                        </Comment.Group>\r\n                        <div className=\"profile-body ml-5\">\r\n                            <h2 className=\"account-heading\">{profileData.profileInfo.profile.user.username}</h2>\r\n                            <p className=\"text-secondary\">{profileData.profileInfo.profile.user.email}</p>\r\n                        </div>\r\n                    </div>\r\n                    {(user === currentUser) ? (\r\n                        <div className=\"form-group\">\r\n                            <p className=\"profile-info-text\">Profile info</p>\r\n                            <hr className=\"mb-4\" />\r\n                            <Form onChange={checkForm}>\r\n                                <Form.Field>\r\n                                    <label>Username</label>\r\n                                    <input onChange={event => onUsernameValueChange(event.target.value)} value={usernameValue} ref={usernameRef} placeholder='Username' />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <label>Email</label>\r\n                                    <input onChange={event => onEmailValueChange(event.target.value)} value={emailValue} ref={emailRef} placeholder='Email' />\r\n                                </Form.Field>\r\n                                {(allowButton) ? (\r\n                                    <Button onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Update</Button>\r\n                                ) : (\r\n                                    <Button disabled onClick={handleOnSubmit} className=\"submit-button\" type='button' primary>Update</Button>\r\n                                    )}\r\n                                {/*<Button className=\"ml-3\" color='red'>Change Password</Button>*/}\r\n                            </Form>\r\n                        </div>\r\n                    ) : null }\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}