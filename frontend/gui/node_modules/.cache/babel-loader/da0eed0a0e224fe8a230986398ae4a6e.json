{"ast":null,"code":"import { gql } from \"@apollo/client\"; //Query\n\nexport const POST_LIST_QUERY = gql`\n    query {\n        allPosts {\n            user {\n                username\n            }\n            title\n            id\n        }\n    }\n`; //Mutation\n\nexport const POST_FIND_MUTATION = gql`\n    mutation ($id: ID!) {\n        findPost (input: {id: $id}) {\n            post {\n                user {\n                    username\n                }\n                title\n                content\n            }\n        }\n    }\n`;\nexport const POST_DELETE_MUTATION = gql`\n    mutation postDelete ($id: ID!) {\n        deletePost(input: {id: $id}) {\n            object {\n                title\n            }\n        }\n    }\n`;\nexport const POST_EDIT_MUTATION = gql`\n    mutation postEdit ($id: ID!, $title: String!, $content: String!) {\n        editPost(input: {id: $id, title: $title, content: $content}) {\n            post {\n                content\n            }\n        }\n    }\n`;\nexport const POST_CREATE_MUTATION = gql`\n    mutation createPost ($title: String!, $content: String!, $user: String!) {\n        addPost(input: {title: $title, content: $content, user: $user}) {\n            post {\n                title\n                content\n                posted\n            }\n        }\n    }\n`;\nexport const POST_LIKE_MUTATION = gql`\n    mutation postLike ($id: ID!, $user: String!) {\n        likePost (input: { id: $id, user: $user }) {\n            post {\n                title\n            }\n        }\n    }\n`;","map":{"version":3,"sources":["C:/Users/plech/github/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/post_query.js"],"names":["gql","POST_LIST_QUERY","POST_FIND_MUTATION","POST_DELETE_MUTATION","POST_EDIT_MUTATION","POST_CREATE_MUTATION","POST_LIKE_MUTATION"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAGD,GAAI;;;;;;;;;;CAA5B,C,CAYP;;AACA,OAAO,MAAME,kBAAkB,GAAGF,GAAI;;;;;;;;;;;;CAA/B;AAcP,OAAO,MAAMG,oBAAoB,GAAGH,GAAI;;;;;;;;CAAjC;AAUP,OAAO,MAAMI,kBAAkB,GAAGJ,GAAI;;;;;;;;CAA/B;AAUP,OAAO,MAAMK,oBAAoB,GAAGL,GAAI;;;;;;;;;;CAAjC;AAYP,OAAO,MAAMM,kBAAkB,GAAGN,GAAI;;;;;;;;CAA/B","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\n//Query\r\nexport const POST_LIST_QUERY = gql`\r\n    query {\r\n        allPosts {\r\n            user {\r\n                username\r\n            }\r\n            title\r\n            id\r\n        }\r\n    }\r\n`\r\n\r\n//Mutation\r\nexport const POST_FIND_MUTATION = gql`\r\n    mutation ($id: ID!) {\r\n        findPost (input: {id: $id}) {\r\n            post {\r\n                user {\r\n                    username\r\n                }\r\n                title\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const POST_DELETE_MUTATION = gql`\r\n    mutation postDelete ($id: ID!) {\r\n        deletePost(input: {id: $id}) {\r\n            object {\r\n                title\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const POST_EDIT_MUTATION = gql`\r\n    mutation postEdit ($id: ID!, $title: String!, $content: String!) {\r\n        editPost(input: {id: $id, title: $title, content: $content}) {\r\n            post {\r\n                content\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const POST_CREATE_MUTATION = gql`\r\n    mutation createPost ($title: String!, $content: String!, $user: String!) {\r\n        addPost(input: {title: $title, content: $content, user: $user}) {\r\n            post {\r\n                title\r\n                content\r\n                posted\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const POST_LIKE_MUTATION = gql`\r\n    mutation postLike ($id: ID!, $user: String!) {\r\n        likePost (input: { id: $id, user: $user }) {\r\n            post {\r\n                title\r\n            }\r\n        }\r\n    }\r\n`"]},"metadata":{},"sourceType":"module"}