{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Posts\\\\Posts\\\\Posts.js\";\nimport React, { useState, useRef } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Form } from 'semantic-ui-react';\nimport { POST_LIST_QUERY } from '../../api/post';\nimport { POST_FILTER_MUTATION } from '../../api/post';\nimport FilteredPosts from './FilteredPosts';\nimport CustomPosts from './CustomPosts';\n\nconst Posts = () => {\n  const {\n    data: postsData\n  } = useQuery(POST_LIST_QUERY);\n  const [postFilter, {\n    data: filteredData\n  }] = useMutation(POST_FILTER_MUTATION);\n  const searchRef = useRef(); //Find posts that starts with user input in search bar\n\n  const handleOnChange = event => {\n    const searchValue = searchRef.current.value;\n    postFilter({\n      variables: {\n        title: searchValue\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: searchRef,\n    placeholder: \"Search...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  })))), filteredData || postsData ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, filteredData ? /*#__PURE__*/React.createElement(FilteredPosts, {\n    filteredData: filteredData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CustomPosts, {\n    postsData: postsData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }))) : null, postsData === undefined ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Loading....\") : null);\n};\n\nexport default Posts;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Posts/Posts/Posts.js"],"names":["React","useState","useRef","useQuery","useMutation","Form","POST_LIST_QUERY","POST_FILTER_MUTATION","FilteredPosts","CustomPosts","Posts","data","postsData","postFilter","filteredData","searchRef","handleOnChange","event","searchValue","current","value","variables","title","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,oBAAT,QAAsC,gBAAtC;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAsBT,QAAQ,CAACG,eAAD,CAApC;AACA,QAAM,CAAEO,UAAF,EAAc;AAAEF,IAAAA,IAAI,EAAEG;AAAR,GAAd,IAAwCV,WAAW,CAACG,oBAAD,CAAzD;AACA,QAAMQ,SAAS,GAAGb,MAAM,EAAxB,CAHgB,CAKhB;;AACA,QAAMc,cAAc,GAAIC,KAAD,IAAW;AAC9B,UAAMC,WAAW,GAAGH,SAAS,CAACI,OAAV,CAAkBC,KAAtC;AACAP,IAAAA,UAAU,CAAC;AAAEQ,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAEJ;AAAT;AAAb,KAAD,CAAV;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEF,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAED,SAAZ;AAAuB,IAAA,WAAW,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ,EAQMD,YAAY,IAAIF,SAAjB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEME,YAAD,gBACG,oBAAC,aAAD;AAAe,IAAA,YAAY,EAAEA,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBAGG,uDAEI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEF,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALR,CADH,GAYG,IApBR,EAqBMA,SAAS,KAAKW,SAAf,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,GAEG,IAvBR,CADJ;AA2BH,CAtCD;;AAwCA,eAAeb,KAAf","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nimport { POST_LIST_QUERY } from '../../api/post'\r\nimport { POST_FILTER_MUTATION  } from '../../api/post'\r\n\r\nimport FilteredPosts from './FilteredPosts';\r\nimport CustomPosts from './CustomPosts'\r\n\r\n\r\nconst Posts = () => {\r\n    const { data: postsData } = useQuery(POST_LIST_QUERY)\r\n    const [ postFilter, { data: filteredData }] = useMutation(POST_FILTER_MUTATION)\r\n    const searchRef = useRef()\r\n\r\n    //Find posts that starts with user input in search bar\r\n    const handleOnChange = (event) => {\r\n        const searchValue = searchRef.current.value\r\n        postFilter({ variables: { title: searchValue } })\r\n    }\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n            <div className=\"search-bar-container\">\r\n                <Form onChange={handleOnChange}>\r\n                    <Form.Field>\r\n                        <input ref={searchRef} placeholder='Search...' />\r\n                    </Form.Field>\r\n                </Form>\r\n            </div>\r\n            {(filteredData || postsData) ? (\r\n                <div>\r\n                    {/*If user has written something in search bar*/}\r\n                    {(filteredData) ? (\r\n                        <FilteredPosts filteredData={filteredData} />\r\n                    ) : (\r\n                        <>\r\n                            {/*Otherwise get all posts*/}\r\n                            <CustomPosts postsData={postsData} />\r\n                        </>\r\n                    )}\r\n                </div>\r\n            ) : null}\r\n            {(postsData === undefined) ? (\r\n                <h1>Loading....</h1>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n"]},"metadata":{},"sourceType":"module"}