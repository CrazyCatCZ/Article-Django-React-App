{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\components\\\\Comments\\\\CustomComment.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Comment, Form } from 'semantic-ui-react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { COMMENT_DELETE_MUTATION } from '../api/comment';\nimport { USER_PROFILE_LIST_QUERY } from '../api/user';\nimport ReplyForm from './ReplyForm';\nimport Replys from './Replys'; //import styles from './Comments.module.css'\n\nconst DEFAULT_ICON = 'https://react.semantic-ui.com/images/avatar/small/matt.jpg';\n\nconst CustomComment = ({\n  id,\n  replys,\n  content,\n  posted,\n  username,\n  image\n}) => {\n  const user = localStorage.getItem('user');\n  const [commentDelete] = useMutation(COMMENT_DELETE_MUTATION);\n  const [showReplyForm, setShowReplyForm] = useState(false); //If user click on reply -> show the reply form and reverse\n\n  const handleOnReply = () => {\n    setShowReplyForm(!showReplyForm);\n  };\n\n  const handleOnDelete = () => {\n    commentDelete({\n      variables: {\n        id: id\n      }\n    }); //reset site\n\n    window.location.reload(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, console.log(image.image), /*#__PURE__*/React.createElement(Comment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n    src: require(`../Profiles/media/${image.image}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Comment.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Author, {\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `profile/${username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 44\n    }\n  }, username)), /*#__PURE__*/React.createElement(Comment.Metadata, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, posted)), /*#__PURE__*/React.createElement(Comment.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, content), /*#__PURE__*/React.createElement(Comment.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Comment.Action, {\n    onClick: handleOnReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Reply\"), user === username ? /*#__PURE__*/React.createElement(Comment.Action, {\n    onClick: handleOnDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Delete\") : null)), /*#__PURE__*/React.createElement(ReplyForm, {\n    id: id,\n    showReplyForm: showReplyForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), replys ? /*#__PURE__*/React.createElement(Replys, {\n    replys: replys,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }) : null));\n};\n\nexport default CustomComment;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/frontend/gui/src/components/Comments/CustomComment.js"],"names":["React","useState","useEffect","Button","Comment","Form","useMutation","useQuery","COMMENT_DELETE_MUTATION","USER_PROFILE_LIST_QUERY","ReplyForm","Replys","DEFAULT_ICON","CustomComment","id","replys","content","posted","username","image","user","localStorage","getItem","commentDelete","showReplyForm","setShowReplyForm","handleOnReply","handleOnDelete","variables","window","location","reload","console","log","require"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Button, Comment, Form } from 'semantic-ui-react'\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport { COMMENT_DELETE_MUTATION } from '../api/comment'\r\nimport { USER_PROFILE_LIST_QUERY } from '../api/user'\r\n\r\nimport ReplyForm from './ReplyForm'\r\nimport Replys from './Replys'\r\n//import styles from './Comments.module.css'\r\n\r\nconst DEFAULT_ICON = 'https://react.semantic-ui.com/images/avatar/small/matt.jpg'\r\n\r\nconst CustomComment = ({ id, replys, content, posted, username, image }) => {\r\n    const user = localStorage.getItem('user')\r\n    const [ commentDelete ] = useMutation(COMMENT_DELETE_MUTATION)\r\n    const [ showReplyForm, setShowReplyForm ] = useState(false)\r\n\r\n    //If user click on reply -> show the reply form and reverse\r\n    const handleOnReply = () => {\r\n        setShowReplyForm(!showReplyForm)\r\n    }\r\n\r\n    const handleOnDelete = () => {\r\n        commentDelete({ variables: { id: id } })\r\n\r\n        //reset site\r\n        window.location.reload(false);\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"comment_container\">\r\n            {console.log(image.image)}\r\n            <Comment>\r\n                <Comment.Avatar src={require(`../Profiles/media/${image.image}`)} />\r\n                <Comment.Content>\r\n                    <Comment.Author as='a'><a href={`profile/${username}`}>{username}</a></Comment.Author>\r\n                    <Comment.Metadata>\r\n                        <div>{posted}</div>\r\n                    </Comment.Metadata>\r\n                    <Comment.Text>{content}</Comment.Text>\r\n                    <Comment.Actions>\r\n                    <Comment.Action onClick={handleOnReply}>Reply</Comment.Action>\r\n                    {(user === username) ? (\r\n                        <Comment.Action onClick={handleOnDelete}>Delete</Comment.Action>\r\n                    ) : null}\r\n                    </Comment.Actions>\r\n                </Comment.Content>\r\n\r\n                {/*User reply form for comments*/}\r\n                <ReplyForm id={id} showReplyForm={showReplyForm} />\r\n                \r\n                {/*All replys on comment*/}\r\n                {(replys) ? (\r\n                    <Replys replys={replys} />\r\n                ) : null}\r\n            </Comment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomComment\r\n"]},"metadata":{},"sourceType":"module"}