{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plech\\\\github\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\frontend\\\\gui\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/react-hooks'; //Components\n\nimport Navbar from './components/Navbar'; //Posts\n\nimport Posts from './components/Posts/Posts';\nimport PostDetail from './components/Posts/PostDetail';\nimport PostCreate from './components/Posts/PostCreate';\nimport PostEdit from './components/Posts/PostEdit'; //Authentication\n\nimport Login from './components/Authentication/Login';\nimport Register from './components/Authentication/Register';\nimport { POST_LIST_QUERY, USER_REFRESH_TOKEN_MUTATION } from './components/query';\n\nfunction App() {\n  const token = localStorage.getItem('token');\n  const [canAccessPosts, setCanAcesssPosts] = useState(false);\n  const [postDetail, setPostDetail] = useState({});\n  const {\n    data: postData\n  } = useQuery(POST_LIST_QUERY);\n  const [verifyTok, {\n    data: dataToken\n  }] = useMutation(USER_REFRESH_TOKEN_MUTATION); //const [ message, setMessage ] = useState()\n\n  const [postEditData, setPostEditData] = useState();\n\n  const openPostDetail = post => {\n    setPostDetail(post);\n  };\n\n  const openPostEdit = postDetail => {\n    setPostEditData(postDetail);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    component: () => /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    component: () => /*#__PURE__*/React.createElement(Register, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), token ? /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/editPost/:id\",\n    component: () => /*#__PURE__*/React.createElement(PostEdit, {\n      postEditData: postEditData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 62\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/createPost\",\n    component: () => /*#__PURE__*/React.createElement(PostCreate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 58\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/:id\",\n    component: () => /*#__PURE__*/React.createElement(PostDetail, {\n      postDetail: postDetail,\n      openPostEdit: openPostEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 51\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }), postData ? /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: () => /*#__PURE__*/React.createElement(Posts, {\n      data: postData,\n      openPostDetail: openPostDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 50\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }) : null) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/plech/github/programs/django+react/tutorials/graphql_django/frontend/gui/src/App.js"],"names":["React","useState","Route","Switch","Redirect","useQuery","useMutation","Navbar","Posts","PostDetail","PostCreate","PostEdit","Login","Register","POST_LIST_QUERY","USER_REFRESH_TOKEN_MUTATION","App","token","localStorage","getItem","canAccessPosts","setCanAcesssPosts","postDetail","setPostDetail","data","postData","verifyTok","dataToken","postEditData","setPostEditData","openPostDetail","post","openPostEdit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\n\n//Components\nimport Navbar from './components/Navbar'\n//Posts\nimport Posts from './components/Posts/Posts'\nimport PostDetail from './components/Posts/PostDetail'\nimport PostCreate from './components/Posts/PostCreate'\nimport PostEdit from './components/Posts/PostEdit'\n\n//Authentication\nimport Login from './components/Authentication/Login'\nimport Register from './components/Authentication/Register'\n\nimport { POST_LIST_QUERY, USER_REFRESH_TOKEN_MUTATION } from './components/query'\n\nfunction App () {\n  const token = localStorage.getItem('token')\n  const [ canAccessPosts, setCanAcesssPosts ] = useState(false)\n  const [ postDetail, setPostDetail ] = useState({})\n  \n  const { data: postData  } = useQuery(POST_LIST_QUERY)\n  const [ verifyTok, { data: dataToken } ] = useMutation(USER_REFRESH_TOKEN_MUTATION)\n  //const [ message, setMessage ] = useState()\n\n  const [ postEditData, setPostEditData ] = useState()\n\n\n  const openPostDetail = (post) => {\n    setPostDetail(post)\n  }\n\n  const openPostEdit = (postDetail) => {\n    setPostEditData(postDetail)\n  }\n\n  \n  return (\n    <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/login\" component={() => <Login />} />\n          <Route path=\"/register\" component={() => <Register />} />\n          {(token) ? (\n            <Switch>\n                <Route path=\"/editPost/:id\" component={() => <PostEdit postEditData={postEditData} />} />\n              <Route path=\"/createPost\" component={() => <PostCreate />} />\n              <Route path=\"/:id\" component={() => <PostDetail postDetail={postDetail} openPostEdit={openPostEdit} />} />\n              {(postData) ? (\n                <Route path=\"/\" component={() => <Posts data={postData} openPostDetail={openPostDetail} />} />\n                ) : null }\n            </Switch>  \n          ) : (\n            <Redirect to='/login' />\n          )}\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}