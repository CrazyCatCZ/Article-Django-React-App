{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\programs\\\\django+react\\\\tutorials\\\\graphql_django\\\\src\\\\components\\\\Replys\\\\ReplyForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Comment, Form } from 'semantic-ui-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REPLY_ADD_MUTATION } from '../Api/reply';\nimport './Replys.css';\n\nconst ReplyForm = ({\n  id,\n  showReplyForm\n}) => {\n  const user = localStorage.getItem('user');\n  const [replyComment] = useMutation(REPLY_ADD_MUTATION);\n  const [replyInput, setReplyInput] = useState('');\n  const [allowButton, setAllowButton] = useState(false);\n\n  const handleOnAddReply = () => {\n    replyComment({\n      variables: {\n        id: id,\n        user: user,\n        content: replyInput\n      }\n    }); //reset site\n\n    window.location.reload(false);\n  }; //check if reply was filled\n\n\n  useEffect(() => {\n    if (replyInput !== '') {\n      setAllowButton(true);\n    } else {\n      setAllowButton(false);\n    }\n  }, [replyInput]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, showReplyForm ? /*#__PURE__*/React.createElement(Comment.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    reply: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: event => setReplyInput(event.target.value),\n    value: replyInput,\n    placeholder: \"Enter something...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }), allowButton ? /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnAddReply,\n    className: \"comment-create-button\",\n    content: \"Reply\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: handleOnAddReply,\n    className: \"comment-create-button\",\n    content: \"Reply\",\n    labelPosition: \"left\",\n    icon: \"edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }))) : null);\n};\n\nexport default ReplyForm;","map":{"version":3,"sources":["C:/Users/Admin/programs/django+react/tutorials/graphql_django/src/components/Replys/ReplyForm.js"],"names":["React","useEffect","useState","Button","Comment","Form","useMutation","REPLY_ADD_MUTATION","ReplyForm","id","showReplyForm","user","localStorage","getItem","replyComment","replyInput","setReplyInput","allowButton","setAllowButton","handleOnAddReply","variables","content","window","location","reload","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,QAAsC,mBAAtC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,SAASC,kBAAT,QAAmC,cAAnC;AACA,OAAO,cAAP;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KAA2B;AACzC,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AAEA,QAAM,CAAEC,YAAF,IAAmBR,WAAW,CAACC,kBAAD,CAApC;AAEA,QAAM,CAAEQ,UAAF,EAAcC,aAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAEe,WAAF,EAAeC,cAAf,IAAkChB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMiB,gBAAgB,GAAG,MAAM;AAC3BL,IAAAA,YAAY,CAAC;AAAEM,MAAAA,SAAS,EAAE;AAAEX,QAAAA,EAAE,EAAEA,EAAN;AAAUE,QAAAA,IAAI,EAAEA,IAAhB;AAAsBU,QAAAA,OAAO,EAAEN;AAA/B;AAAb,KAAD,CAAZ,CAD2B,CAG3B;;AACAO,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH,GALD,CARyC,CAezC;;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,UAAU,KAAK,EAAnB,EAAuB;AACnBG,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAIK;AACDA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GARQ,EAQN,CAACH,UAAD,CARM,CAAT;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACML,aAAD,gBACG,oBAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAEe,KAAK,IAAIT,aAAa,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CADpC;AAEI,IAAA,KAAK,EAAEZ,UAFX;AAGI,IAAA,WAAW,EAAC,oBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMME,WAAD,gBACG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,gBAAjB;AAAmC,IAAA,SAAS,EAAC,uBAA7C;AAAqE,IAAA,OAAO,EAAC,OAA7E;AAAqF,IAAA,aAAa,EAAC,MAAnG;AAA0G,IAAA,IAAI,EAAC,MAA/G;AAAsH,IAAA,OAAO,MAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,gBAGG,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,OAAO,EAAEA,gBAA1B;AAA4C,IAAA,SAAS,EAAC,uBAAtD;AAA8E,IAAA,OAAO,EAAC,OAAtF;AAA8F,IAAA,aAAa,EAAC,MAA5G;AAAmH,IAAA,IAAI,EAAC,MAAxH;AAA+H,IAAA,OAAO,MAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATR,CADJ,CADH,GAeG,IAhBR,CADJ;AAoBH,CA/CD;;AAiDA,eAAeX,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button, Comment, Form } from 'semantic-ui-react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { REPLY_ADD_MUTATION } from '../Api/reply'\r\nimport './Replys.css'\r\n\r\nconst ReplyForm = ({ id, showReplyForm }) => {\r\n    const user = localStorage.getItem('user')\r\n\r\n    const [ replyComment ] = useMutation(REPLY_ADD_MUTATION)\r\n\r\n    const [ replyInput, setReplyInput ] = useState('')\r\n    const [ allowButton, setAllowButton ] = useState(false)\r\n    \r\n    const handleOnAddReply = () => {\r\n        replyComment({ variables: { id: id, user: user, content: replyInput } })\r\n\r\n        //reset site\r\n        window.location.reload(false);\r\n    }\r\n\r\n    //check if reply was filled\r\n    useEffect(() => {\r\n        if (replyInput !== '') {\r\n            setAllowButton(true)\r\n        }\r\n\r\n        else {\r\n            setAllowButton(false)\r\n        }\r\n    }, [replyInput])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {(showReplyForm) ? (\r\n                <Comment.Group>\r\n                    <Form reply>\r\n                        <textarea\r\n                            onChange={event => setReplyInput(event.target.value)}\r\n                            value={replyInput}\r\n                            placeholder='Enter something...' \r\n                        />\r\n                        {(allowButton) ? (\r\n                            <Button onClick={handleOnAddReply} className=\"comment-create-button\" content='Reply' labelPosition='left' icon='edit' primary />\r\n                        ) : (\r\n                            <Button disabled onClick={handleOnAddReply} className=\"comment-create-button\" content='Reply' labelPosition='left' icon='edit' primary />\r\n                        )}\r\n                    </Form>\r\n                </Comment.Group>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyForm\r\n"]},"metadata":{},"sourceType":"module"}